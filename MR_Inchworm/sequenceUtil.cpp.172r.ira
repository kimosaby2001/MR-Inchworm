
;; Function kmer_int_type_t revcomp_val(kmer_int_type_t, unsigned int) (_Z11revcomp_valyj)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a9 (r68,l1) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r66,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r66,l0) best SIREG, cover GENERAL_REGS
    a3 (r65,l0) best DIREG, cover GENERAL_REGS
    a7 (r62,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r61,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r60,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r60,l0) best AREG, cover GENERAL_REGS

  a0(r60,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3393,27053 SSE_REGS:3393,27053 MMX_REGS:3393,27053 MEM:954
  a1(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1053,36543 SSE_REGS:1053,36543 MMX_REGS:1053,36543 MEM:324
  a2(r61,l0) costs: AREG:0,1820 DREG:0,1820 CREG:0,1820 BREG:0,1820 SIREG:0,1820 DIREG:0,1820 AD_REGS:0,1820 CLOBBERED_REGS:0,1820 Q_REGS:0,1820 NON_Q_REGS:0,1820 LEGACY_REGS:0,1820 GENERAL_REGS:0,1820 SSE_FIRST_REG:1053,38363 SSE_REGS:1053,38363 MMX_REGS:1053,38363 MEM:243
  a3(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2223,2223 SSE_REGS:2223,2223 MMX_REGS:2223,2223 MEM:603
  a4(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-90,-90 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 MEM:720
  a5(r60,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 MEM:7280
  a6(r61,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 SSE_FIRST_REG:37310,37310 SSE_REGS:37310,37310 MMX_REGS:37310,37310 MEM:10010
  a7(r62,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:35490,35490 SSE_REGS:35490,35490 MMX_REGS:35490,35490 MEM:8190
  a8(r66,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 MEM:2730
  a9(r68,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 SSE_FIRST_REG:25480,25480 SSE_REGS:25480,25480 MMX_REGS:25480,25480 MEM:8190


Pass 1 for finding allocno costs

    r68: preferred GENERAL_REGS, alternative NO_REGS
    r66: preferred SIREG, alternative GENERAL_REGS
    r65: preferred DIREG, alternative GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS
    r60: preferred AREG, alternative GENERAL_REGS

  a0(r60,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3393,27053 SSE_REGS:3393,27053 MMX_REGS:3393,27053 MEM:954
  a1(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1053,36543 SSE_REGS:1053,36543 MMX_REGS:1053,36543 MEM:324
  a2(r61,l0) costs: AREG:0,1820 DREG:0,1820 CREG:0,1820 BREG:0,1820 SIREG:0,1820 DIREG:0,1820 AD_REGS:0,1820 CLOBBERED_REGS:0,1820 Q_REGS:0,1820 NON_Q_REGS:0,1820 LEGACY_REGS:0,1820 GENERAL_REGS:0,1820 SSE_FIRST_REG:1053,38363 SSE_REGS:1053,38363 MMX_REGS:1053,38363 MEM:243
  a3(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2223,2223 SSE_REGS:2223,2223 MMX_REGS:2223,2223 MEM:603
  a4(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-90,-90 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 MEM:720
  a5(r60,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 MEM:7280
  a6(r61,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 SSE_FIRST_REG:37310,37310 SSE_REGS:37310,37310 MMX_REGS:37310,37310 MEM:10010
  a7(r62,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:35490,35490 SSE_REGS:35490,35490 MMX_REGS:35490,35490 MEM:8190
  a8(r66,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 MEM:2730
  a9(r68,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 SSE_FIRST_REG:25480,25480 SSE_REGS:25480,25480 MMX_REGS:25480,25480 MEM:8190

   Insn 57(l0): point = 0
   Insn 51(l0): point = 2
   Insn 26(l0): point = 5
   Insn 25(l0): point = 7
   Insn 24(l0): point = 9
   Insn 17(l0): point = 12
   Insn 16(l0): point = 14
   Insn 19(l0): point = 16
   Insn 5(l0): point = 18
   Insn 4(l0): point = 20
   Insn 44(l1): point = 23
   Insn 43(l1): point = 25
   Insn 37(l1): point = 27
   Insn 35(l1): point = 29
   Insn 33(l1): point = 31
   Insn 32(l1): point = 33
 a0(r60): [12..16] [3..5]
 a1(r62): [5..7]
 a2(r61): [5..9]
 a3(r65): [10..20]
 a4(r66): [5..18]
 a5(r60): [23..35]
 a6(r61): [23..35]
 a7(r62): [23..35]
 a8(r66): [23..35]
 a9(r68): [32..33]
 Rebuilding regno allocno list for 68
Compressing live ranges: from 36 to 13 - 36%
Ranges after the compression:
 a0(r60): [9..12] [5..6] [0..1]
 a1(r62): [9..12] [1..2]
 a2(r61): [9..12] [1..3]
 a3(r65): [4..8]
 a4(r66): [9..12] [1..7]
 a9(r68): [10..11]
+++Allocating 48 bytes for conflict table (uncompressed size 80)
;; a0(r60,l0) conflicts: a1(r62,l0) a2(r61,l0) a4(r66,l0) a3(r65,l0) a9(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a1(r62,l0) conflicts: a0(r60,l0) a2(r61,l0) a4(r66,l0) a9(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a2(r61,l0) conflicts: a0(r60,l0) a1(r62,l0) a4(r66,l0) a9(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a3(r65,l0) conflicts: a0(r60,l0) a4(r66,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4
;; a4(r66,l0) conflicts: a0(r60,l0) a1(r62,l0) a2(r61,l0) a3(r65,l0) a9(r68,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r68,l0) conflicts: a0(r60,l0) a1(r62,l0) a2(r61,l0) a4(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a2(r61)<->a3(r65)@81:constraint
  regions=2, blocks=6, points=13
    allocnos=10, copies=1, conflicts=0, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 2
    all: 0r60 1r62 2r61 3r65 4r66 9r68
    modified regnos: 60 61 62 65 66 68
    border:
    Pressure: GENERAL_REGS=5
    Reg 65 of GENERAL_REGS has 1 regs less
      Pushing a4(r66,l0)
      Pushing a9(r68,l0)
      Pushing a0(r60,l0)
      Pushing a2(r61,l0)
      Pushing a1(r62,l0)
      Pushing a3(r65,l0)
      Popping a3(r65,l0)  -- assign reg 5
      Popping a1(r62,l0)  -- assign reg 1
      Popping a2(r61,l0)  -- assign reg 5
      Popping a0(r60,l0)  -- assign reg 0
      Popping a9(r68,l0)  -- assign reg 2
      Popping a4(r66,l0)  -- assign reg 4
Disposition:
    0:r60  l0     0    2:r61  l0     5    1:r62  l0     1    3:r65  l0     5
    4:r66  l0     4    9:r68  l0     2
New iteration of spill/restore move
+++Costs: overall 2830, reg 2830, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=4, live_throughout: 4, 7, dead_or_set: 5, 65
insn=5, live_throughout: 7, 65, dead_or_set: 4, 66
insn=10, live_throughout: 7, 65, 66, dead_or_set: 
insn=13, live_throughout: 7, 65, 66, dead_or_set: 
insn=14, live_throughout: 7, 65, 66, dead_or_set: 
insn=15, live_throughout: 7, 65, 66, dead_or_set: 
insn=19, live_throughout: 7, 65, 66, dead_or_set: 60
insn=16, live_throughout: 7, 60, 65, 66, dead_or_set: 
insn=17, live_throughout: 7, 60, 65, 66, dead_or_set: 
insn=22, live_throughout: 7, 65, 66, dead_or_set: 
insn=24, live_throughout: 7, 66, dead_or_set: 61, 65
insn=25, live_throughout: 7, 61, 66, dead_or_set: 62
insn=26, live_throughout: 7, 61, 62, 66, dead_or_set: 60
insn=42, live_throughout: 7, 60, 61, 62, 66, dead_or_set: 
insn=28, live_throughout: 7, 60, 61, 62, 66, dead_or_set: 
insn=30, live_throughout: 7, 60, 61, 62, 66, dead_or_set: 
insn=32, live_throughout: 7, 60, 61, 62, 66, dead_or_set: 68
insn=33, live_throughout: 7, 61, 62, 66, dead_or_set: 60, 68
insn=34, live_throughout: 7, 60, 61, 62, 66, dead_or_set: 
insn=35, live_throughout: 7, 60, 62, 66, dead_or_set: 61
insn=36, live_throughout: 7, 60, 61, 62, 66, dead_or_set: 
insn=37, live_throughout: 7, 60, 61, 66, dead_or_set: 62
insn=39, live_throughout: 7, 60, 61, 62, 66, dead_or_set: 
insn=40, live_throughout: 7, 60, 61, 62, 66, dead_or_set: 
insn=41, live_throughout: 7, 60, 61, 62, 66, dead_or_set: 
insn=43, live_throughout: 7, 60, 61, 62, 66, dead_or_set: 
insn=44, live_throughout: 7, 60, 61, 62, 66, dead_or_set: 
insn=45, live_throughout: 7, 60, dead_or_set: 
insn=51, live_throughout: 7, dead_or_set: 0, 60
insn=57, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 33
changing reg in insn 26
changing reg in insn 19
changing reg in insn 33
changing reg in insn 30
changing reg in insn 51
changing reg in insn 40
changing reg in insn 34
changing reg in insn 35
changing reg in insn 24
changing reg in insn 32
changing reg in insn 41
changing reg in insn 36
changing reg in insn 35
changing reg in insn 37
changing reg in insn 25
changing reg in insn 43
changing reg in insn 39
changing reg in insn 37
changing reg in insn 4
changing reg in insn 24
changing reg in insn 10
changing reg in insn 5
changing reg in insn 43
changing reg in insn 16
changing reg in insn 32
changing reg in insn 33
Spilling for insn 32.

Reloads for insn # 32
Reload 0: reload_in (DI) = (reg/v:DI 5 di [orig:61 kmer.536 ] [61])
	reload_out (DI) = (reg:DI 2 cx [68])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg/v:DI 5 di [orig:61 kmer.536 ] [61])
	reload_out_reg: (reg:DI 2 cx [68])
	reload_reg_rtx: (reg:DI 2 cx [68])
deleting insn with uid = 4.
deleting insn with uid = 5.
deleting insn with uid = 51.


try_optimize_cfg iteration 1

deleting insn with uid = 22.
Deleted label in block 3.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 8 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


kmer_int_type_t revcomp_val(kmer_int_type_t, unsigned int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 17[flags]
;;  ref usage 	r0={4d,6u} r1={3d,3u} r2={3d,2u} r4={1d,2u} r5={3d,7u} r7={1d,5u} r17={5d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r39={1d} 
;;    total ref usage 58{31d,27u,0e} in 25{25 regular + 0 call} insns.
(note 3 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 3 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(debug_insn 10 6 13 2 sequenceUtil.cpp:184 (var_location:DI D.4294967180 (not:DI (reg/v:DI 5 di [orig:65 kmer ] [65]))) -1 (nil))

(debug_insn 13 10 14 2 (var_location:SI i (const_int 0 [0x0])) -1 (nil))

(debug_insn 14 13 15 2 (var_location:DI rev_kmer (const_int 0 [0x0])) -1 (nil))

(debug_insn 15 14 19 2 (var_location:DI kmer (debug_expr:DI D#116)) -1 (nil))

(insn 19 15 16 2 sequenceUtil.cpp:185 (set (reg/v:DI 0 ax [orig:60 rev_kmer.537 ] [60])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 16 19 17 2 sequenceUtil.cpp:185 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 4 si [orig:66 kmer_length ] [66])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn 17 16 23 2 sequenceUtil.cpp:185 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 45)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 0 [ax] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 4 [si] 5 [di] 7 [sp]


;; Succ edge  5 [9.0%] 
;; Succ edge  3 [91.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	

;; Pred edge  2 [91.0%]  (fallthru)
(note 23 17 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 3 sequenceUtil.cpp:184 (set (reg/v:DI 5 di [orig:61 kmer.536 ] [61])
        (not:DI (reg/v:DI 5 di [orig:65 kmer ] [65]))) 477 {*one_cmpldi2_1_rex64} (nil))

(insn 25 24 26 3 sequenceUtil.cpp:184 (set (reg/v:SI 1 dx [orig:62 i ] [62])
        (const_int 0 [0x0])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 26 25 42 3 sequenceUtil.cpp:184 (set (reg/v:DI 0 ax [orig:60 rev_kmer.537 ] [60])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  4 [91.0%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 42 26 27 4 4 "" [1 uses])

(note 27 42 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(debug_insn 28 27 29 4 sequenceUtil.cpp:187 (var_location:SI base (and:SI (subreg:SI (reg/v:DI 5 di [orig:61 kmer.536 ] [61]) 0)
        (const_int 3 [0x3]))) -1 (nil))

(note 29 28 30 4 NOTE_INSN_DELETED)

(debug_insn 30 29 31 4 sequenceUtil.cpp:188 (var_location:DI rev_kmer (ashift:DI (reg/v:DI 0 ax [orig:60 rev_kmer.537 ] [60])
        (const_int 2 [0x2]))) -1 (nil))

(note 31 30 67 4 NOTE_INSN_DELETED)

(insn 67 31 32 4 sequenceUtil.cpp:189 (set (reg:DI 2 cx [68])
        (reg/v:DI 5 di [orig:61 kmer.536 ] [61])) 89 {*movdi_1_rex64} (nil))

(insn 32 67 33 4 sequenceUtil.cpp:189 (parallel [
            (set (reg:DI 2 cx [68])
                (and:DI (reg:DI 2 cx [68])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 375 {*anddi_1_rex64} (nil))

(insn 33 32 34 4 sequenceUtil.cpp:189 (set (reg/v:DI 0 ax [orig:60 rev_kmer.537 ] [60])
        (plus:DI (mult:DI (reg/v:DI 0 ax [orig:60 rev_kmer.537 ] [60])
                (const_int 4 [0x4]))
            (reg:DI 2 cx [68]))) 274 {*lea_2_rex64} (nil))

(debug_insn 34 33 35 4 sequenceUtil.cpp:189 (var_location:DI rev_kmer (reg/v:DI 0 ax [orig:60 rev_kmer.537 ] [60])) -1 (nil))

(insn 35 34 36 4 sequenceUtil.cpp:190 (parallel [
            (set (reg/v:DI 5 di [orig:61 kmer.536 ] [61])
                (lshiftrt:DI (reg/v:DI 5 di [orig:61 kmer.536 ] [61])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 550 {*lshrdi3_1_rex64} (nil))

(debug_insn 36 35 37 4 sequenceUtil.cpp:190 (var_location:DI kmer (reg/v:DI 5 di [orig:61 kmer.536 ] [61])) -1 (nil))

(insn 37 36 39 4 sequenceUtil.cpp:185 (parallel [
            (set (reg/v:SI 1 dx [orig:62 i ] [62])
                (plus:SI (reg/v:SI 1 dx [orig:62 i ] [62])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 286 {*addsi_1} (nil))

(debug_insn 39 37 40 4 (var_location:SI i (reg/v:SI 1 dx [orig:62 i ] [62])) -1 (nil))

(debug_insn 40 39 41 4 (var_location:DI rev_kmer (reg/v:DI 0 ax [orig:60 rev_kmer.537 ] [60])) -1 (nil))

(debug_insn 41 40 43 4 (var_location:DI kmer (reg/v:DI 5 di [orig:61 kmer.536 ] [61])) -1 (nil))

(insn 43 41 44 4 sequenceUtil.cpp:185 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 4 si [orig:66 kmer_length ] [66])
            (reg/v:SI 1 dx [orig:62 i ] [62]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn 44 43 45 4 sequenceUtil.cpp:185 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 42)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 4 5)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]


;; Succ edge  4 [91.0%]  (dfs_back)
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
;; Pred edge  2 [9.0%] 
(code_label 45 44 46 5 3 "" [1 uses])

(note 46 45 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 57 46 66 5 sequenceUtil.cpp:195 (use (reg/i:DI 0 ax)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 66 57 0 NOTE_INSN_DELETED)


;; Function int base_to_int_value(char) (_Z17base_to_int_valuec)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r62,l0) best DIREG, cover GENERAL_REGS
    a0 (r59,l0) best AREG, cover GENERAL_REGS
    a2 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r59,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33930,33930 SSE_REGS:33930,33930 MMX_REGS:33930,33930 MEM:9440
  a1(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15860,15860 SSE_REGS:15860,15860 MMX_REGS:15860,15860 MEM:4880
  a2(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:7830
  a3(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:7000


Pass 1 for finding allocno costs

    r63: preferred GENERAL_REGS, alternative NO_REGS
    r62: preferred DIREG, alternative GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS

  a0(r59,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33930,33930 SSE_REGS:33930,33930 MMX_REGS:33930,33930 MEM:9440
  a1(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15860,15860 SSE_REGS:15860,15860 MMX_REGS:15860,15860 MEM:4880
  a2(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:7830
  a3(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:7000

   Insn 31(l0): point = 0
   Insn 25(l0): point = 2
   Insn 18(l0): point = 5
   Insn 16(l0): point = 7
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 11(l0): point = 14
   Insn 7(l0): point = 16
   Insn 2(l0): point = 18
 a0(r59): [10..14] [3..5]
 a1(r63): [6..7]
 a2(r58): [8..16]
 a3(r62): [17..18]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r59): [5..6] [0..1]
 a1(r63): [2..3]
 a2(r58): [4..7]
 a3(r62): [8..9]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r59,l0) conflicts: a2(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a1(r63,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a2(r58,l0) conflicts: a0(r59,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a3(r62,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r63)<->a2(r58)@76:shuffle
  cp1:a2(r58)<->a3(r62)@125:shuffle
  regions=1, blocks=5, points=10
    allocnos=4, copies=2, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 2
    all: 0r59 1r63 2r58 3r62
    modified regnos: 58 59 62 63
    border:
    Pressure: GENERAL_REGS=2
      Pushing a1(r63,l0)
      Pushing a3(r62,l0)
      Pushing a2(r58,l0)
      Pushing a0(r59,l0)
      Popping a0(r59,l0)  -- assign reg 0
      Popping a2(r58,l0)  -- assign reg 5
      Popping a3(r62,l0)  -- assign reg 5
      Popping a1(r63,l0)  -- assign reg 5
Disposition:
    2:r58  l0     5    0:r59  l0     0    3:r62  l0     5    1:r63  l0     5
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 7, dead_or_set: 5, 62
insn=7, live_throughout: 7, dead_or_set: 58, 62
insn=11, live_throughout: 7, 58, dead_or_set: 59
insn=8, live_throughout: 7, 58, 59, dead_or_set: 
insn=9, live_throughout: 7, 58, 59, dead_or_set: 
insn=14, live_throughout: 7, 58, dead_or_set: 
insn=16, live_throughout: 7, dead_or_set: 58, 63
insn=18, live_throughout: 7, dead_or_set: 59, 63
insn=19, live_throughout: 7, 59, dead_or_set: 
insn=25, live_throughout: 7, dead_or_set: 0, 59
insn=31, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 7
changing reg in insn 16
changing reg in insn 8
changing reg in insn 18
changing reg in insn 11
changing reg in insn 25
changing reg in insn 2
changing reg in insn 16
changing reg in insn 18
Spilling for insn 18.

Reloads for insn # 18
Reload 0: reload_in (SI) = (mem/s/u:SI (plus:DI (mult:DI (reg:DI 5 di [orig:63 csui.434 ] [63])
                                                            (const_int 4 [0x4]))
                                                        (symbol_ref:DI ("CSWTCH.435") [flags 0x2]  <var_decl 0x7f9011cde280 CSWTCH.435>)) [5 CSWTCH.435 S4 A32])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s/u:SI (plus:DI (mult:DI (reg:DI 5 di [orig:63 csui.434 ] [63])
                                                            (const_int 4 [0x4]))
                                                        (symbol_ref:DI ("CSWTCH.435") [flags 0x2]  <var_decl 0x7f9011cde280 CSWTCH.435>)) [5 CSWTCH.435 S4 A32])
deleting insn with uid = 2.
deleting insn with uid = 25.


try_optimize_cfg iteration 1

deleting insn with uid = 14.
Deleted label in block 3.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


int base_to_int_value(char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 5[di] 17[flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r4={1d} r5={3d,4u} r7={1d,4u} r17={2d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r39={1d} 
;;    total ref usage 34{23d,11u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 11 2 sequenceUtil.cpp:213 (parallel [
            (set (reg:QI 5 di [orig:58 csui.434 ] [58])
                (plus:QI (reg:QI 5 di [orig:62 nucleotide ] [62])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) 300 {*addqi_1_lea} (nil))

(insn 11 7 8 2 sequenceUtil.cpp:213 (set (reg:SI 0 ax [orig:59 D.32203 ] [59])
        (const_int -1 [0xffffffffffffffff])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 8 11 9 2 sequenceUtil.cpp:213 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 5 di [orig:58 csui.434 ] [58])
            (const_int 51 [0x33]))) 10 {*cmpqi_1} (nil))

(jump_insn 9 8 15 2 sequenceUtil.cpp:213 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 19)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  4 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 5 [di]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 15 9 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 18 3 sequenceUtil.cpp:213 (set (reg:DI 5 di [orig:63 csui.434 ] [63])
        (zero_extend:DI (reg:QI 5 di [orig:58 csui.434 ] [58]))) 125 {zero_extendqidi2} (nil))

(insn 18 16 19 3 sequenceUtil.cpp:213 (set (reg:SI 0 ax [orig:59 D.32203 ] [59])
        (mem/s/u:SI (plus:DI (mult:DI (reg:DI 5 di [orig:63 csui.434 ] [63])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("CSWTCH.435") [flags 0x2]  <var_decl 0x7f9011cde280 CSWTCH.435>)) [5 CSWTCH.435 S4 A32])) 47 {*movsi_1} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
(code_label 19 18 20 4 10 "" [1 uses])

(note 20 19 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 31 20 37 4 sequenceUtil.cpp:238 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 37 31 0 NOTE_INSN_DELETED)


;; Function kmer_int_type_t get_maximum_kmer_intval(unsigned int) (_Z23get_maximum_kmer_intvalj)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a7 (r64,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r64,l0) best DIREG, cover GENERAL_REGS
    a6 (r61,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r60,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r59,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r59,l0) best AREG, cover GENERAL_REGS

  a0(r59,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3393,50713 SSE_REGS:3393,50713 MMX_REGS:3393,50713 MEM:954
  a1(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1053,36543 SSE_REGS:1053,36543 MMX_REGS:1053,36543 MEM:324
  a2(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1053,12883 SSE_REGS:1053,12883 MMX_REGS:1053,12883 MEM:324
  a3(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 MEM:720
  a4(r59,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:47320,47320 SSE_REGS:47320,47320 MMX_REGS:47320,47320 MEM:10920
  a5(r60,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 MEM:2730
  a6(r61,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:35490,35490 SSE_REGS:35490,35490 MMX_REGS:35490,35490 MEM:8190
  a7(r64,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 MEM:2730


Pass 1 for finding allocno costs

    r64: preferred DIREG, alternative GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS
    r59: preferred AREG, alternative GENERAL_REGS

  a0(r59,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3393,50713 SSE_REGS:3393,50713 MMX_REGS:3393,50713 MEM:954
  a1(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1053,36543 SSE_REGS:1053,36543 MMX_REGS:1053,36543 MEM:324
  a2(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1053,12883 SSE_REGS:1053,12883 MMX_REGS:1053,12883 MEM:324
  a3(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 MEM:720
  a4(r59,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:47320,47320 SSE_REGS:47320,47320 MMX_REGS:47320,47320 MEM:10920
  a5(r60,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 MEM:2730
  a6(r61,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:35490,35490 SSE_REGS:35490,35490 MMX_REGS:35490,35490 MEM:8190
  a7(r64,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 MEM:2730

   Insn 50(l0): point = 0
   Insn 44(l0): point = 2
   Insn 24(l0): point = 5
   Insn 23(l0): point = 7
   Insn 22(l0): point = 9
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 15(l0): point = 16
   Insn 3(l0): point = 18
   Insn 37(l1): point = 21
   Insn 36(l1): point = 23
   Insn 31(l1): point = 25
   Insn 29(l1): point = 27
   Insn 27(l1): point = 29
 a0(r59): [12..16] [3..5]
 a1(r61): [5..7]
 a2(r60): [5..9]
 a3(r64): [5..18]
 a4(r59): [21..31]
 a5(r60): [21..31]
 a6(r61): [21..31]
 a7(r64): [21..31]
Compressing live ranges: from 32 to 9 - 28%
Ranges after the compression:
 a0(r59): [7..8] [4..5] [0..1]
 a1(r61): [7..8] [1..2]
 a2(r60): [7..8] [1..3]
 a3(r64): [7..8] [1..6]
+++Allocating 32 bytes for conflict table (uncompressed size 64)
;; a0(r59,l0) conflicts: a1(r61,l0) a2(r60,l0) a3(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a1(r61,l0) conflicts: a0(r59,l0) a2(r60,l0) a3(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a2(r60,l0) conflicts: a0(r59,l0) a1(r61,l0) a3(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a3(r64,l0) conflicts: a0(r59,l0) a1(r61,l0) a2(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=2, blocks=6, points=9
    allocnos=8, copies=0, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 2
    all: 0r59 1r61 2r60 3r64
    modified regnos: 59 60 61 64
    border:
    Pressure: GENERAL_REGS=4
      Pushing a2(r60,l0)
      Pushing a3(r64,l0)
      Pushing a1(r61,l0)
      Pushing a0(r59,l0)
      Popping a0(r59,l0)  -- assign reg 0
      Popping a1(r61,l0)  -- assign reg 1
      Popping a3(r64,l0)  -- assign reg 5
      Popping a2(r60,l0)  -- assign reg 2
Disposition:
    0:r59  l0     0    2:r60  l0     2    1:r61  l0     1    3:r64  l0     5
New iteration of spill/restore move
+++Costs: overall -540, reg -540, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 7, dead_or_set: 5, 64
insn=7, live_throughout: 7, 64, dead_or_set: 
insn=10, live_throughout: 7, 64, dead_or_set: 
insn=11, live_throughout: 7, 64, dead_or_set: 
insn=15, live_throughout: 7, 64, dead_or_set: 59
insn=12, live_throughout: 7, 59, 64, dead_or_set: 
insn=13, live_throughout: 7, 59, 64, dead_or_set: 
insn=18, live_throughout: 7, 64, dead_or_set: 
insn=22, live_throughout: 7, 64, dead_or_set: 60
insn=23, live_throughout: 7, 60, 64, dead_or_set: 61
insn=24, live_throughout: 7, 60, 61, 64, dead_or_set: 59
insn=35, live_throughout: 7, 59, 60, 61, 64, dead_or_set: 
insn=26, live_throughout: 7, 59, 60, 61, 64, dead_or_set: 
insn=27, live_throughout: 7, 60, 61, 64, dead_or_set: 59
insn=28, live_throughout: 7, 59, 60, 61, 64, dead_or_set: 
insn=29, live_throughout: 7, 60, 61, 64, dead_or_set: 59
insn=30, live_throughout: 7, 59, 60, 61, 64, dead_or_set: 
insn=31, live_throughout: 7, 59, 60, 64, dead_or_set: 61
insn=33, live_throughout: 7, 59, 60, 61, 64, dead_or_set: 
insn=34, live_throughout: 7, 59, 60, 61, 64, dead_or_set: 
insn=36, live_throughout: 7, 59, 60, 61, 64, dead_or_set: 
insn=37, live_throughout: 7, 59, 60, 61, 64, dead_or_set: 
insn=38, live_throughout: 7, 59, dead_or_set: 
insn=44, live_throughout: 7, dead_or_set: 0, 59
insn=50, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 29
changing reg in insn 27
changing reg in insn 24
changing reg in insn 15
changing reg in insn 29
changing reg in insn 27
changing reg in insn 28
changing reg in insn 44
changing reg in insn 34
changing reg in insn 30
changing reg in insn 22
changing reg in insn 29
changing reg in insn 31
changing reg in insn 23
changing reg in insn 36
changing reg in insn 33
changing reg in insn 31
changing reg in insn 3
changing reg in insn 36
changing reg in insn 12
Spilling for insn 22.

Reloads for insn # 22
Reload 0: reload_in (QI) = (mem/s/j:QI (const:DI (plus:DI (symbol_ref:DI ("_base_to_int") [flags 0x2]  <var_decl 0x7f9012470be0 _base_to_int>)
                                                            (const_int 67 [0x43]))) [0 _base_to_int+67 S1 A8])
	Q_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s/j:QI (const:DI (plus:DI (symbol_ref:DI ("_base_to_int") [flags 0x2]  <var_decl 0x7f9012470be0 _base_to_int>)
                                                            (const_int 67 [0x43]))) [0 _base_to_int+67 S1 A8])
deleting insn with uid = 3.
deleting insn with uid = 44.


try_optimize_cfg iteration 1

deleting insn with uid = 18.
Deleted label in block 3.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


kmer_int_type_t get_maximum_kmer_intval(unsigned int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 5[di] 17[flags]
;;  ref usage 	r0={5d,7u} r1={3d,3u} r2={2d,1u} r4={1d} r5={1d,2u} r7={1d,5u} r17={5d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r39={1d} 
;;    total ref usage 49{29d,20u,0e} in 20{20 regular + 0 call} insns.
(note 2 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 2 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(debug_insn 7 4 10 2 sequenceUtil.cpp:252 (var_location:QI c (const_int 67 [0x43])) -1 (nil))

(debug_insn 10 7 11 2 (var_location:SI i (const_int 0 [0x0])) -1 (nil))

(debug_insn 11 10 15 2 (var_location:DI max_kmer (const_int 0 [0x0])) -1 (nil))

(insn 15 11 12 2 sequenceUtil.cpp:254 (set (reg/v:DI 0 ax [orig:59 max_kmer.591 ] [59])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 12 15 13 2 sequenceUtil.cpp:254 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 5 di [orig:64 kmer_length ] [64])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn 13 12 19 2 sequenceUtil.cpp:254 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 38)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]


;; Succ edge  5 [9.0%] 
;; Succ edge  3 [91.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	

;; Pred edge  2 [91.0%]  (fallthru)
(note 19 13 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 21 19 22 3 NOTE_INSN_DELETED)

(insn 22 21 23 3 sequenceUtil.cpp:254 (set (reg:DI 2 cx [orig:60 pretmp.576 ] [60])
        (zero_extend:DI (mem/s/j:QI (const:DI (plus:DI (symbol_ref:DI ("_base_to_int") [flags 0x2]  <var_decl 0x7f9012470be0 _base_to_int>)
                        (const_int 67 [0x43]))) [0 _base_to_int+67 S1 A8]))) 125 {zero_extendqidi2} (nil))

(insn 23 22 24 3 sequenceUtil.cpp:254 (set (reg/v:SI 1 dx [orig:61 i ] [61])
        (const_int 0 [0x0])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 24 23 35 3 sequenceUtil.cpp:254 (set (reg/v:DI 0 ax [orig:59 max_kmer.591 ] [59])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  4 [91.0%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 35 24 25 4 15 "" [1 uses])

(note 25 35 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(debug_insn 26 25 27 4 sequenceUtil.cpp:255 (var_location:SI val (zero_extend:SI (mem/s/j:QI (const:DI (plus:DI (symbol_ref:DI ("_base_to_int") [flags 0x2]  <var_decl 0x7f9012470be0 _base_to_int>)
                    (const_int 67 [0x43]))) [0 _base_to_int+67 S1 A8]))) -1 (nil))

(insn 27 26 28 4 sequenceUtil.cpp:256 (parallel [
            (set (reg/v:DI 0 ax [orig:59 max_kmer.591 ] [59])
                (ashift:DI (reg/v:DI 0 ax [orig:59 max_kmer.591 ] [59])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 491 {*ashldi3_1_rex64} (nil))

(debug_insn 28 27 29 4 sequenceUtil.cpp:256 (var_location:DI max_kmer (reg/v:DI 0 ax [orig:59 max_kmer.591 ] [59])) -1 (nil))

(insn 29 28 30 4 sequenceUtil.cpp:257 (parallel [
            (set (reg/v:DI 0 ax [orig:59 max_kmer.591 ] [59])
                (ior:DI (reg/v:DI 0 ax [orig:59 max_kmer.591 ] [59])
                    (reg:DI 2 cx [orig:60 pretmp.576 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) 393 {*iordi_1_rex64} (nil))

(debug_insn 30 29 31 4 sequenceUtil.cpp:257 (var_location:DI max_kmer (reg/v:DI 0 ax [orig:59 max_kmer.591 ] [59])) -1 (nil))

(insn 31 30 33 4 sequenceUtil.cpp:254 (parallel [
            (set (reg/v:SI 1 dx [orig:61 i ] [61])
                (plus:SI (reg/v:SI 1 dx [orig:61 i ] [61])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 286 {*addsi_1} (nil))

(debug_insn 33 31 34 4 (var_location:SI i (reg/v:SI 1 dx [orig:61 i ] [61])) -1 (nil))

(debug_insn 34 33 36 4 (var_location:DI max_kmer (reg/v:DI 0 ax [orig:59 max_kmer.591 ] [59])) -1 (nil))

(insn 36 34 37 4 sequenceUtil.cpp:254 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 5 di [orig:64 kmer_length ] [64])
            (reg/v:SI 1 dx [orig:61 i ] [61]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn 37 36 38 4 sequenceUtil.cpp:254 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 35)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 4 5)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 7 [sp]


;; Succ edge  4 [91.0%]  (dfs_back)
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
;; Pred edge  2 [9.0%] 
(code_label 38 37 39 5 14 "" [1 uses])

(note 39 38 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 50 39 58 5 sequenceUtil.cpp:260 (use (reg/i:DI 0 ax)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 58 50 0 NOTE_INSN_DELETED)


;; Function kmer_int_type_t get_DS_kmer_val(kmer_int_type_t, unsigned int) (_Z15get_DS_kmer_valyj)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r68,l0) best AREG, cover GENERAL_REGS
    a11 (r67,l1) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r65,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r65,l0) best SIREG, cover GENERAL_REGS
    a9 (r64,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r64,l0) best DIREG, cover GENERAL_REGS
    a8 (r62,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r61,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r60,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r68,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:630
  a1(r64,l0) costs: AREG:162,162 DREG:162,162 CREG:162,162 BREG:162,162 SIREG:162,162 DIREG:72,72 AD_REGS:162,162 CLOBBERED_REGS:162,162 Q_REGS:162,162 NON_Q_REGS:162,162 LEGACY_REGS:162,162 GENERAL_REGS:162,162 SSE_FIRST_REG:4725,4725 SSE_REGS:4725,4725 MMX_REGS:4725,4725 MEM:1305
  a2(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4563,28223 SSE_REGS:4563,28223 MMX_REGS:4563,28223 MEM:1224
  a3(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1053,36543 SSE_REGS:1053,36543 MMX_REGS:1053,36543 MEM:324
  a4(r61,l0) costs: AREG:162,1982 DREG:162,1982 CREG:162,1982 BREG:162,1982 SIREG:162,1982 DIREG:162,1982 AD_REGS:162,1982 CLOBBERED_REGS:162,1982 Q_REGS:162,1982 NON_Q_REGS:162,1982 LEGACY_REGS:162,1982 GENERAL_REGS:162,1982 SSE_FIRST_REG:1215,38525 SSE_REGS:1215,38525 MMX_REGS:1215,38525 MEM:405
  a5(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-90,-90 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 MEM:720
  a6(r60,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:35490,35490 SSE_REGS:35490,35490 MMX_REGS:35490,35490 MEM:8190
  a7(r61,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 SSE_FIRST_REG:37310,37310 SSE_REGS:37310,37310 MMX_REGS:37310,37310 MEM:10010
  a8(r62,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 MEM:7280
  a9(r64,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 MEM:0
  a10(r65,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 MEM:2730
  a11(r67,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 SSE_FIRST_REG:25480,25480 SSE_REGS:25480,25480 MMX_REGS:25480,25480 MEM:8190


Pass 1 for finding allocno costs

    r68: preferred AREG, alternative GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS
    r65: preferred SIREG, alternative GENERAL_REGS
    r64: preferred DIREG, alternative GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS

  a0(r68,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:630
  a1(r64,l0) costs: AREG:162,162 DREG:162,162 CREG:162,162 BREG:162,162 SIREG:162,162 DIREG:72,72 AD_REGS:162,162 CLOBBERED_REGS:162,162 Q_REGS:162,162 NON_Q_REGS:162,162 LEGACY_REGS:162,162 GENERAL_REGS:162,162 SSE_FIRST_REG:4725,4725 SSE_REGS:4725,4725 MMX_REGS:4725,4725 MEM:1305
  a2(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4563,28223 SSE_REGS:4563,28223 MMX_REGS:4563,28223 MEM:1224
  a3(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1053,36543 SSE_REGS:1053,36543 MMX_REGS:1053,36543 MEM:324
  a4(r61,l0) costs: AREG:162,1982 DREG:162,1982 CREG:162,1982 BREG:162,1982 SIREG:162,1982 DIREG:162,1982 AD_REGS:162,1982 CLOBBERED_REGS:162,1982 Q_REGS:162,1982 NON_Q_REGS:162,1982 LEGACY_REGS:162,1982 GENERAL_REGS:162,1982 SSE_FIRST_REG:1215,38525 SSE_REGS:1215,38525 MMX_REGS:1215,38525 MEM:405
  a5(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-90,-90 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,14170 SSE_REGS:2340,14170 MMX_REGS:2340,14170 MEM:720
  a6(r60,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:35490,35490 SSE_REGS:35490,35490 MMX_REGS:35490,35490 MEM:8190
  a7(r61,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 SSE_FIRST_REG:37310,37310 SSE_REGS:37310,37310 MMX_REGS:37310,37310 MEM:10010
  a8(r62,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23660,23660 SSE_REGS:23660,23660 MMX_REGS:23660,23660 MEM:7280
  a9(r64,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:0,0 MEM:0
  a10(r65,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 MEM:2730
  a11(r67,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 SSE_FIRST_REG:25480,25480 SSE_REGS:25480,25480 MMX_REGS:25480,25480 MEM:8190

   Insn 62(l0): point = 0
   Insn 56(l0): point = 2
   Insn 51(l0): point = 4
   Insn 50(l0): point = 6
   Insn 27(l0): point = 9
   Insn 26(l0): point = 11
   Insn 25(l0): point = 13
   Insn 18(l0): point = 16
   Insn 17(l0): point = 18
   Insn 20(l0): point = 20
   Insn 4(l0): point = 22
   Insn 3(l0): point = 24
   Insn 45(l1): point = 27
   Insn 44(l1): point = 29
   Insn 38(l1): point = 31
   Insn 36(l1): point = 33
   Insn 34(l1): point = 35
   Insn 33(l1): point = 37
 a0(r68): [3..4]
 a1(r64): [5..24]
 a2(r62): [16..20] [5..9]
 a3(r60): [9..11]
 a4(r61): [9..13]
 a5(r65): [9..22]
 a6(r60): [27..39]
 a7(r61): [27..39]
 a8(r62): [27..39]
 a9(r64): [27..39]
 a10(r65): [27..39]
 a11(r67): [36..37]
 Rebuilding regno allocno list for 67
Compressing live ranges: from 40 to 14 - 35%
Ranges after the compression:
 a0(r68): [0..1]
 a1(r64): [10..13] [2..9]
 a2(r62): [10..13] [6..7] [2..3]
 a3(r60): [10..13] [3..4]
 a4(r61): [10..13] [3..5]
 a5(r65): [10..13] [3..8]
 a11(r67): [11..12]
+++Allocating 48 bytes for conflict table (uncompressed size 96)
;; a0(r68,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a1(r64,l0) conflicts: a2(r62,l0) a3(r60,l0) a4(r61,l0) a5(r65,l0) a11(r67,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4
;; a2(r62,l0) conflicts: a1(r64,l0) a3(r60,l0) a4(r61,l0) a5(r65,l0) a11(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a3(r60,l0) conflicts: a1(r64,l0) a2(r62,l0) a4(r61,l0) a5(r65,l0) a11(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r61,l0) conflicts: a1(r64,l0) a2(r62,l0) a3(r60,l0) a5(r65,l0) a11(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r65,l0) conflicts: a1(r64,l0) a2(r62,l0) a3(r60,l0) a4(r61,l0) a11(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a11(r67,l0) conflicts: a1(r64,l0) a2(r62,l0) a3(r60,l0) a4(r61,l0) a5(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r68)<->a2(r62)@11:shuffle
  cp1:a0(r68)<->a1(r64)@11:shuffle
  regions=2, blocks=6, points=14
    allocnos=12, copies=2, conflicts=0, ranges=13

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 2
    all: 0r68 1r64 2r62 3r60 4r61 5r65 11r67
    modified regnos: 60 61 62 64 65 67 68
    border:
    Pressure: GENERAL_REGS=6
    Reg 64 of GENERAL_REGS has 1 regs less
      Pushing a0(r68,l0)
      Pushing a5(r65,l0)
      Pushing a11(r67,l0)
      Pushing a2(r62,l0)
      Pushing a4(r61,l0)
      Pushing a3(r60,l0)
      Pushing a1(r64,l0)
      Popping a1(r64,l0)  -- assign reg 5
      Popping a3(r60,l0)  -- assign reg 1
      Popping a4(r61,l0)  -- assign reg 2
      Popping a2(r62,l0)  -- assign reg 0
      Popping a11(r67,l0)  -- assign reg 37
      Popping a5(r65,l0)  -- assign reg 4
      Popping a0(r68,l0)  -- assign reg 0
Disposition:
    3:r60  l0     1    4:r61  l0     2    2:r62  l0     0    1:r64  l0     5
    5:r65  l0     4   11:r67  l0    37    0:r68  l0     0
New iteration of spill/restore move
+++Costs: overall 3154, reg 3154, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 4, 7, dead_or_set: 5, 64
insn=4, live_throughout: 7, 64, dead_or_set: 4, 65
insn=9, live_throughout: 7, 64, 65, dead_or_set: 
insn=11, live_throughout: 7, 64, 65, dead_or_set: 
insn=14, live_throughout: 7, 64, 65, dead_or_set: 
insn=15, live_throughout: 7, 64, 65, dead_or_set: 
insn=16, live_throughout: 7, 64, 65, dead_or_set: 
insn=20, live_throughout: 7, 64, 65, dead_or_set: 62
insn=17, live_throughout: 7, 62, 64, 65, dead_or_set: 
insn=18, live_throughout: 7, 62, 64, 65, dead_or_set: 
insn=23, live_throughout: 7, 64, 65, dead_or_set: 
insn=25, live_throughout: 7, 64, 65, dead_or_set: 61
insn=26, live_throughout: 7, 61, 64, 65, dead_or_set: 60
insn=27, live_throughout: 7, 60, 61, 64, 65, dead_or_set: 62
insn=43, live_throughout: 7, 60, 61, 62, 64, 65, dead_or_set: 
insn=29, live_throughout: 7, 60, 61, 62, 64, 65, dead_or_set: 
insn=31, live_throughout: 7, 60, 61, 62, 64, 65, dead_or_set: 
insn=33, live_throughout: 7, 60, 61, 62, 64, 65, dead_or_set: 67
insn=34, live_throughout: 7, 60, 61, 64, 65, dead_or_set: 62, 67
insn=35, live_throughout: 7, 60, 61, 62, 64, 65, dead_or_set: 
insn=36, live_throughout: 7, 60, 62, 64, 65, dead_or_set: 61
insn=37, live_throughout: 7, 60, 61, 62, 64, 65, dead_or_set: 
insn=38, live_throughout: 7, 61, 62, 64, 65, dead_or_set: 60
insn=40, live_throughout: 7, 60, 61, 62, 64, 65, dead_or_set: 
insn=41, live_throughout: 7, 60, 61, 62, 64, 65, dead_or_set: 
insn=42, live_throughout: 7, 60, 61, 62, 64, 65, dead_or_set: 
insn=44, live_throughout: 7, 60, 61, 62, 64, 65, dead_or_set: 
insn=45, live_throughout: 7, 60, 61, 62, 64, 65, dead_or_set: 
insn=46, live_throughout: 7, 62, 64, dead_or_set: 
insn=48, live_throughout: 7, 62, 64, dead_or_set: 
insn=49, live_throughout: 7, 62, 64, dead_or_set: 
insn=50, live_throughout: 7, 62, 64, dead_or_set: 
insn=51, live_throughout: 7, dead_or_set: 62, 64, 68
insn=56, live_throughout: 7, dead_or_set: 0, 68
insn=62, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 38
changing reg in insn 26
changing reg in insn 44
changing reg in insn 40
changing reg in insn 38
changing reg in insn 36
changing reg in insn 25
changing reg in insn 33
changing reg in insn 42
changing reg in insn 37
changing reg in insn 36
changing reg in insn 34
changing reg in insn 27
changing reg in insn 20
changing reg in insn 34
changing reg in insn 31
changing reg in insn 51
changing reg in insn 50
changing reg in insn 49
changing reg in insn 48
changing reg in insn 41
changing reg in insn 35
changing reg in insn 3
changing reg in insn 51
changing reg in insn 50
changing reg in insn 49
changing reg in insn 25
changing reg in insn 11
changing reg in insn 4
changing reg in insn 44
changing reg in insn 17
changing reg in insn 9
changing reg in insn 33
changing reg in insn 34
changing reg in insn 51
changing reg in insn 56
Spilling for insn 25.
Spilling for insn 33.

Reloads for insn # 25
Reload 0: reload_in (DI) = (reg/v:DI 5 di [orig:64 kmer_val ] [64])
	reload_out (DI) = (reg/v:DI 2 cx [orig:61 kmer ] [61])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg/v:DI 5 di [orig:64 kmer_val ] [64])
	reload_out_reg: (reg/v:DI 2 cx [orig:61 kmer ] [61])
	reload_reg_rtx: (reg/v:DI 2 cx [orig:61 kmer ] [61])

Reloads for insn # 33
Reload 0: reload_in (DI) = (reg/v:DI 2 cx [orig:61 kmer ] [61])
	reload_out (DI) = (reg:DI 37 r8 [67])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg/v:DI 2 cx [orig:61 kmer ] [61])
	reload_out_reg: (reg:DI 37 r8 [67])
	reload_reg_rtx: (reg:DI 37 r8 [67])
deleting insn with uid = 3.
deleting insn with uid = 4.
deleting insn with uid = 56.


try_optimize_cfg iteration 1

deleting insn with uid = 23.
Deleted label in block 3.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


kmer_int_type_t get_DS_kmer_val(kmer_int_type_t, unsigned int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 17[flags] 37[r8]
;;  ref usage 	r0={5d,10u} r1={3d,3u} r2={4d,6u} r4={1d,3u} r5={1d,5u} r7={1d,5u} r17={6d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={3d,2u} r38={1d} r39={1d} 
;;    total ref usage 71{34d,37u,0e} in 31{31 regular + 0 call} insns.
(note 2 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 9 2 NOTE_INSN_FUNCTION_BEG)

(debug_insn 9 5 11 2 (var_location:SI kmer_length (reg/v:SI 4 si [orig:65 kmer_length ] [65])) -1 (nil))

(debug_insn 11 9 14 2 sequenceUtil.cpp:184 (var_location:DI D.4294967179 (not:DI (reg/v:DI 5 di [orig:64 kmer_val ] [64]))) -1 (nil))

(debug_insn 14 11 15 2 (var_location:SI i (const_int 0 [0x0])) -1 (nil))

(debug_insn 15 14 16 2 (var_location:DI rev_kmer (const_int 0 [0x0])) -1 (nil))

(debug_insn 16 15 20 2 (var_location:DI kmer (debug_expr:DI D#117)) -1 (nil))

(insn 20 16 17 2 sequenceUtil.cpp:185 (set (reg/v:DI 0 ax [orig:62 rev_kmer ] [62])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 17 20 18 2 sequenceUtil.cpp:185 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 4 si [orig:65 kmer_length ] [65])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn 18 17 24 2 sequenceUtil.cpp:185 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 46)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 0 [ax] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 4 [si] 5 [di] 7 [sp]


;; Succ edge  5 [9.0%] 
;; Succ edge  3 [91.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	

;; Pred edge  2 [91.0%]  (fallthru)
(note 24 18 71 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 71 24 25 3 sequenceUtil.cpp:184 (set (reg/v:DI 2 cx [orig:61 kmer ] [61])
        (reg/v:DI 5 di [orig:64 kmer_val ] [64])) 89 {*movdi_1_rex64} (nil))

(insn 25 71 26 3 sequenceUtil.cpp:184 (set (reg/v:DI 2 cx [orig:61 kmer ] [61])
        (not:DI (reg/v:DI 2 cx [orig:61 kmer ] [61]))) 477 {*one_cmpldi2_1_rex64} (nil))

(insn 26 25 27 3 sequenceUtil.cpp:184 (set (reg/v:SI 1 dx [orig:60 i ] [60])
        (const_int 0 [0x0])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 27 26 43 3 sequenceUtil.cpp:184 (set (reg/v:DI 0 ax [orig:62 rev_kmer ] [62])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]

;; Pred edge  4 [91.0%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 43 27 28 4 21 "" [1 uses])

(note 28 43 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(debug_insn 29 28 30 4 sequenceUtil.cpp:187 (var_location:SI base (and:SI (subreg:SI (reg/v:DI 2 cx [orig:61 kmer ] [61]) 0)
        (const_int 3 [0x3]))) -1 (nil))

(note 30 29 31 4 NOTE_INSN_DELETED)

(debug_insn 31 30 32 4 sequenceUtil.cpp:188 (var_location:DI rev_kmer (ashift:DI (reg/v:DI 0 ax [orig:62 rev_kmer ] [62])
        (const_int 2 [0x2]))) -1 (nil))

(note 32 31 72 4 NOTE_INSN_DELETED)

(insn 72 32 33 4 sequenceUtil.cpp:189 (set (reg:DI 37 r8 [67])
        (reg/v:DI 2 cx [orig:61 kmer ] [61])) 89 {*movdi_1_rex64} (nil))

(insn 33 72 34 4 sequenceUtil.cpp:189 (parallel [
            (set (reg:DI 37 r8 [67])
                (and:DI (reg:DI 37 r8 [67])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 375 {*anddi_1_rex64} (nil))

(insn 34 33 35 4 sequenceUtil.cpp:189 (set (reg/v:DI 0 ax [orig:62 rev_kmer ] [62])
        (plus:DI (mult:DI (reg/v:DI 0 ax [orig:62 rev_kmer ] [62])
                (const_int 4 [0x4]))
            (reg:DI 37 r8 [67]))) 274 {*lea_2_rex64} (nil))

(debug_insn 35 34 36 4 sequenceUtil.cpp:189 (var_location:DI rev_kmer (reg/v:DI 0 ax [orig:62 rev_kmer ] [62])) -1 (nil))

(insn 36 35 37 4 sequenceUtil.cpp:190 (parallel [
            (set (reg/v:DI 2 cx [orig:61 kmer ] [61])
                (lshiftrt:DI (reg/v:DI 2 cx [orig:61 kmer ] [61])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 550 {*lshrdi3_1_rex64} (nil))

(debug_insn 37 36 38 4 sequenceUtil.cpp:190 (var_location:DI kmer (reg/v:DI 2 cx [orig:61 kmer ] [61])) -1 (nil))

(insn 38 37 40 4 sequenceUtil.cpp:185 (parallel [
            (set (reg/v:SI 1 dx [orig:60 i ] [60])
                (plus:SI (reg/v:SI 1 dx [orig:60 i ] [60])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 286 {*addsi_1} (nil))

(debug_insn 40 38 41 4 (var_location:SI i (reg/v:SI 1 dx [orig:60 i ] [60])) -1 (nil))

(debug_insn 41 40 42 4 (var_location:DI rev_kmer (reg/v:DI 0 ax [orig:62 rev_kmer ] [62])) -1 (nil))

(debug_insn 42 41 44 4 (var_location:DI kmer (reg/v:DI 2 cx [orig:61 kmer ] [61])) -1 (nil))

(insn 44 42 45 4 sequenceUtil.cpp:185 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 4 si [orig:65 kmer_length ] [65])
            (reg/v:SI 1 dx [orig:60 i ] [60]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn 45 44 46 4 sequenceUtil.cpp:185 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 43)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 4 5)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]


;; Succ edge  4 [91.0%]  (dfs_back)
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
;; Pred edge  2 [9.0%] 
(code_label 46 45 47 5 20 "" [1 uses])

(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(debug_insn 48 47 49 5 sequenceUtil.cpp:398 (var_location:DI rev_kmer (reg/v:DI 0 ax [orig:62 rev_kmer ] [62])) -1 (nil))

(debug_insn 49 48 50 5 (var_location:DI kmer_val (umax:DI (reg/v:DI 0 ax [orig:62 rev_kmer ] [62])
        (reg/v:DI 5 di [orig:64 kmer_val ] [64]))) -1 (nil))

(insn 50 49 51 5 sequenceUtil.cpp:185 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 0 ax [orig:62 rev_kmer ] [62])
            (reg/v:DI 5 di [orig:64 kmer_val ] [64]))) 2 {cmpdi_1_insn_rex64} (nil))

(insn 51 50 62 5 sequenceUtil.cpp:185 (set (reg:DI 0 ax [68])
        (if_then_else:DI (geu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (reg/v:DI 0 ax [orig:62 rev_kmer ] [62])
            (reg/v:DI 5 di [orig:64 kmer_val ] [64]))) 899 {*movdicc_c_rex64} (nil))

(insn 62 51 70 5 sequenceUtil.cpp:405 (use (reg/i:DI 0 ax)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 70 62 0 NOTE_INSN_DELETED)


;; Function (static initializers for sequenceUtil.cpp) (_GLOBAL__I__int_to_base)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 37(l0): point = 0
   Insn 36(l0): point = 2
   Insn 35(l0): point = 4
   Insn 34(l0): point = 6
   Insn 28(l0): point = 8
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 8(l0): point = 18
   Insn 7(l0): point = 20
Compressing live ranges: from 23 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=3
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 
insn=6, live_throughout: 7, dead_or_set: 
insn=7, live_throughout: 7, dead_or_set: 5
insn=8, live_throughout: 7, dead_or_set: 5
insn=9, live_throughout: 7, dead_or_set: 1
insn=10, live_throughout: 1, 7, dead_or_set: 4
insn=11, live_throughout: 1, 4, 7, dead_or_set: 5
insn=12, live_throughout: 7, dead_or_set: 0, 1, 4, 5
insn=13, live_throughout: 7, dead_or_set: 
insn=14, live_throughout: 7, dead_or_set: 
insn=15, live_throughout: 7, dead_or_set: 
insn=16, live_throughout: 7, dead_or_set: 
insn=17, live_throughout: 7, dead_or_set: 
insn=18, live_throughout: 7, dead_or_set: 
insn=19, live_throughout: 7, dead_or_set: 
insn=20, live_throughout: 7, dead_or_set: 
insn=21, live_throughout: 7, dead_or_set: 
insn=22, live_throughout: 7, dead_or_set: 
insn=23, live_throughout: 7, dead_or_set: 
insn=24, live_throughout: 7, dead_or_set: 
insn=25, live_throughout: 7, dead_or_set: 
insn=26, live_throughout: 7, dead_or_set: 
insn=28, live_throughout: 7, dead_or_set: 
insn=32, live_throughout: 7, dead_or_set: 
insn=33, live_throughout: 7, dead_or_set: 
insn=34, live_throughout: 7, dead_or_set: 1
insn=35, live_throughout: 1, 7, dead_or_set: 4
insn=36, live_throughout: 1, 4, 7, dead_or_set: 5
insn=37, live_throughout: 7, dead_or_set: 0, 1, 4, 5
Spilling for insn 28.

Reloads for insn # 28
Reload 0: reload_out (DI) = (mem/s/f/c:DI (symbol_ref:DI ("currAccession") [flags 0x2]  <var_decl 0x7f9012470c80 currAccession>) [32 currAccession._M_dataplus._M_p+0 S8 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/c:DI (symbol_ref:DI ("currAccession") [flags 0x2]  <var_decl 0x7f9012470c80 currAccession>) [32 currAccession._M_dataplus._M_p+0 S8 A64])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


(static initializers for sequenceUtil.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={4d} r1={6d,2u} r2={4d} r4={6d,2u} r5={7d,3u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={3d} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={4d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 168{156d,12u,0e} in 29{26 regular + 3 call} insns.
(note 1 0 2 NOTE_INSN_DELETED)

(note 2 1 4 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(debug_insn 5 4 6 2 (var_location:SI __initialize_p (const_int 1 [0x1])) -1 (nil))

(debug_insn 6 5 7 2 (var_location:SI __priority (const_int 65535 [0xffff])) -1 (nil))

(insn 7 6 8 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/iostream:72 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f9012b86e60 __ioinit>)) 89 {*movdi_1_rex64} (nil))

(call_insn 8 7 9 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/iostream:72 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f901305ea00 __comp_ctor >) [0 S1 A8])
        (const_int 0 [0x0])) 646 {*call_0} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 9 8 10 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/iostream:72 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x40]  <var_decl 0x7f9011dc15a0 __dso_handle>)) 89 {*movdi_1_rex64} (nil))

(insn 10 9 11 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/iostream:72 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f9012b86e60 __ioinit>)) 89 {*movdi_1_rex64} (nil))

(insn 11 10 12 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/iostream:72 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f901305ec00 __comp_dtor >)) 89 {*movdi_1_rex64} (nil))

(call_insn 12 11 13 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/iostream:72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f9011dc4200 __cxa_atexit>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(debug_insn 13 12 14 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/iostream:72 (var_location:DI this (symbol_ref:DI ("currAccession") [flags 0x2]  <var_decl 0x7f9012470c80 currAccession>)) -1 (nil))

(debug_insn 14 13 15 2 (var_location:DI this (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 15 14 16 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/allocator.h:101 (var_location:DI this (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 16 15 17 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:178 (var_location:DI __p (symbol_ref:DI ("_ZNSs4_Rep20_S_empty_rep_storageE") [flags 0x40]  <var_decl 0x7f90132c3280 _S_empty_rep_storage>)) -1 (nil))

(debug_insn 17 16 18 2 (var_location:DI this (symbol_ref:DI ("_ZNSs4_Rep20_S_empty_rep_storageE") [flags 0x40]  <var_decl 0x7f90132c3280 _S_empty_rep_storage>)) -1 (nil))

(debug_insn 18 17 19 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2147 (var_location:DI D.4294967278 (symbol_ref:DI ("currAccession") [flags 0x2]  <var_decl 0x7f9012470c80 currAccession>)) -1 (nil))

(debug_insn 19 18 20 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2147 (var_location:DI this (debug_expr:DI D#18)) -1 (nil))

(debug_insn 20 19 21 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2147 (var_location:DI __dat (plus:DI (symbol_ref:DI ("_ZNSs4_Rep20_S_empty_rep_storageE") [flags 0x40]  <var_decl 0x7f90132c3280 _S_empty_rep_storage>)
        (const_int 24 [0x18]))) -1 (nil))

(debug_insn 21 20 22 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2147 (var_location:DI __a (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 22 21 23 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:260 (var_location:DI D.4294967282 (debug_expr:DI D#18)) -1 (nil))

(debug_insn 23 22 24 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:260 (var_location:DI this (debug_expr:DI D#14)) -1 (nil))

(debug_insn 24 23 25 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:260 (var_location:DI __a (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 25 24 26 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/allocator.h:104 (var_location:DI this (debug_expr:DI D#14)) -1 (nil))

(debug_insn 26 25 28 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/allocator.h:104 (var_location:DI D.39176 (clobber (const_int 0 [0x0]))) -1 (nil))

(insn 28 26 32 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:260 (set (mem/s/f/c:DI (symbol_ref:DI ("currAccession") [flags 0x2]  <var_decl 0x7f9012470c80 currAccession>) [32 currAccession._M_dataplus._M_p+0 S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("_ZNSs4_Rep20_S_empty_rep_storageE") [flags 0x40]  <var_decl 0x7f90132c3280 _S_empty_rep_storage>)
                (const_int 24 [0x18])))) 89 {*movdi_1_rex64} (nil))

(debug_insn 32 28 33 2 (var_location:DI this (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 33 32 34 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/allocator.h:109 (var_location:DI this (clobber (const_int 0 [0x0]))) -1 (nil))

(insn 34 33 35 2 sequenceUtil.cpp:28 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x40]  <var_decl 0x7f9011dc15a0 __dso_handle>)) 89 {*movdi_1_rex64} (nil))

(insn 35 34 36 2 sequenceUtil.cpp:28 (set (reg:DI 4 si)
        (symbol_ref:DI ("currAccession") [flags 0x2]  <var_decl 0x7f9012470c80 currAccession>)) 89 {*movdi_1_rex64} (nil))

(insn 36 35 37 2 sequenceUtil.cpp:28 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x7f901329ba00 __comp_dtor >)) 89 {*movdi_1_rex64} (nil))

(call_insn/j 37 36 38 2 sequenceUtil.cpp:28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f9011dc4200 __cxa_atexit>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 38 37 47)

(note 47 38 0 NOTE_INSN_DELETED)


;; Function static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>] (_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a6 (r66,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r64,l0) best DREG, cover GENERAL_REGS
    a5 (r63,l0) best SIREG, cover GENERAL_REGS
    a4 (r62,l0) best DIREG, cover GENERAL_REGS
    a0 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r59,l0) best AREG, cover GENERAL_REGS
    a1 (r58,l0) best AREG, cover GENERAL_REGS

  a0(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25324,25324 SSE_REGS:25324,25324 MMX_REGS:25324,25324 MEM:5859
  a1(r58,l0) costs: AREG:-999,-999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37830,37830 SSE_REGS:37830,37830 MMX_REGS:37830,37830 MEM:10262
  a2(r59,l0) costs: AREG:-531,-531 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24739,24739 SSE_REGS:24739,24739 MMX_REGS:24739,24739 MEM:7003
  a3(r64,l0) costs: AREG:0,0 DREG:-1531,-1531 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19903,19903 SSE_REGS:19903,19903 MMX_REGS:19903,19903 MEM:5593
  a4(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-379,-379 DIREG:-1000,-1000 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:51571,51571 SSE_REGS:51571,51571 MMX_REGS:51571,51571 MEM:13971
  a5(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33917,33917 SSE_REGS:33917,33917 MMX_REGS:33917,33917 MEM:8918
  a6(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:920


Pass 1 for finding allocno costs

    r66: preferred GENERAL_REGS, alternative NO_REGS
    r64: preferred DREG, alternative GENERAL_REGS
    r63: preferred SIREG, alternative GENERAL_REGS
    r62: preferred DIREG, alternative GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS
    r59: preferred AREG, alternative GENERAL_REGS
    r58: preferred AREG, alternative GENERAL_REGS

  a0(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25324,25324 SSE_REGS:25324,25324 MMX_REGS:25324,25324 MEM:5859
  a1(r58,l0) costs: AREG:-999,-999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37830,37830 SSE_REGS:37830,37830 MMX_REGS:37830,37830 MEM:10262
  a2(r59,l0) costs: AREG:-531,-531 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24739,24739 SSE_REGS:24739,24739 MMX_REGS:24739,24739 MEM:7003
  a3(r64,l0) costs: AREG:0,0 DREG:-1531,-1531 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19903,19903 SSE_REGS:19903,19903 MMX_REGS:19903,19903 MEM:5593
  a4(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-379,-379 DIREG:-1000,-1000 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:51571,51571 SSE_REGS:51571,51571 MMX_REGS:51571,51571 MEM:13971
  a5(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33917,33917 SSE_REGS:33917,33917 MMX_REGS:33917,33917 MEM:8918
  a6(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:920

   Insn 146(l0): point = 0
   Insn 124(l0): point = 2
   Insn 117(l0): point = 4
   Insn 114(l0): point = 6
   Insn 113(l0): point = 8
   Insn 112(l0): point = 10
   Insn 111(l0): point = 12
   Insn 110(l0): point = 14
   Insn 144(l0): point = 17
   Insn 97(l0): point = 20
   Insn 96(l0): point = 22
   Insn 88(l0): point = 24
   Insn 85(l0): point = 26
   Insn 84(l0): point = 28
   Insn 83(l0): point = 30
   Insn 82(l0): point = 32
   Insn 81(l0): point = 34
   Insn 79(l0): point = 36
   Insn 134(l0): point = 39
   Insn 128(l0): point = 41
   Insn 66(l0): point = 44
   Insn 62(l0): point = 46
   Insn 61(l0): point = 48
   Insn 58(l0): point = 51
   Insn 57(l0): point = 53
   Insn 49(l0): point = 56
   Insn 48(l0): point = 58
   Insn 47(l0): point = 60
   Insn 46(l0): point = 62
   Insn 141(l0): point = 65
   Insn 36(l0): point = 67
   Insn 35(l0): point = 69
   Insn 30(l0): point = 72
   Insn 29(l0): point = 74
   Insn 27(l0): point = 77
   Insn 26(l0): point = 79
   Insn 24(l0): point = 82
   Insn 23(l0): point = 84
   Insn 13(l0): point = 87
   Insn 12(l0): point = 89
   Insn 17(l0): point = 91
   Insn 4(l0): point = 93
   Insn 3(l0): point = 95
   Insn 2(l0): point = 97
 a0(r60): [45..71] [17..36] [0..2]
 a1(r58): [87..91] [42..71] [17..24] [0..4]
 a2(r59): [47..71] [17..26] [0..6]
 a3(r64): [77..93] [35..38] [15..16]
 a4(r62): [77..97] [70..71] [61..64] [0..38]
 a5(r63): [80..95] [37..38]
 a6(r66): [68..69]
Compressing live ranges: from 100 to 29 - 29%
Ranges after the compression:
 a0(r60): [14..21] [6..10] [0..1]
 a1(r58): [24..25] [13..21] [6..7] [0..2]
 a2(r59): [15..21] [6..8] [0..3]
 a3(r64): [22..26] [9..12] [4..5]
 a4(r62): [22..28] [20..21] [16..17] [0..12]
 a5(r63): [23..27] [11..12]
 a6(r66): [18..19]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r60,l0) conflicts: a2(r59,l0) a1(r58,l0) a4(r62,l0) a3(r64,l0) a6(r66,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5
;; a1(r58,l0) conflicts: a0(r60,l0) a2(r59,l0) a4(r62,l0) a3(r64,l0) a5(r63,l0) a6(r66,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5
;; a2(r59,l0) conflicts: a0(r60,l0) a1(r58,l0) a4(r62,l0) a6(r66,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5
;; a3(r64,l0) conflicts: a0(r60,l0) a1(r58,l0) a4(r62,l0) a5(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r62,l0) conflicts: a0(r60,l0) a2(r59,l0) a1(r58,l0) a3(r64,l0) a5(r63,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5
;; a5(r63,l0) conflicts: a1(r58,l0) a4(r62,l0) a3(r64,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a6(r66,l0) conflicts: a0(r60,l0) a2(r59,l0) a1(r58,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r60)<->a5(r63)@518:constraint
  regions=1, blocks=14, points=29
    allocnos=7, copies=1, conflicts=0, ranges=20

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 14 13 12 11 10 9 8 7 6 5 4 2
    all: 0r60 1r58 2r59 3r64 4r62 5r63 6r66
    modified regnos: 58 59 60 62 63 64 66
    border:
    Pressure: GENERAL_REGS=6
    Reg 60 of GENERAL_REGS has 4 regs less
    Reg 58 of GENERAL_REGS has 4 regs less
    Reg 59 of GENERAL_REGS has 4 regs less
    Reg 62 of GENERAL_REGS has 4 regs less
    Reg 63 of GENERAL_REGS has 1 regs less
      Pushing a6(r66,l0)
      Pushing a3(r64,l0)
      Pushing a5(r63,l0)
      Pushing a2(r59,l0)
      Pushing a0(r60,l0)
      Pushing a1(r58,l0)
      Pushing a4(r62,l0)
      Popping a4(r62,l0)  -- assign reg 3
      Popping a1(r58,l0)  -- assign reg 6
      Popping a0(r60,l0)  -- assign reg 41
      Popping a2(r59,l0)  -- assign reg 42
      Popping a5(r63,l0)  -- assign reg 4
      Popping a3(r64,l0)  -- assign reg 1
      Popping a6(r66,l0)  -- assign reg 0
Disposition:
    1:r58  l0     6    2:r59  l0    42    0:r60  l0    41    4:r62  l0     3
    5:r63  l0     4    3:r64  l0     1    6:r66  l0     0
New iteration of spill/restore move
+++Costs: overall -7593, reg -7593, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 4, 7, dead_or_set: 5, 62
insn=3, live_throughout: 1, 7, 62, dead_or_set: 4, 63
insn=4, live_throughout: 7, 62, 63, dead_or_set: 1, 64
insn=17, live_throughout: 7, 62, 63, 64, dead_or_set: 58
insn=12, live_throughout: 7, 58, 62, 63, 64, dead_or_set: 
insn=13, live_throughout: 7, 58, 62, 63, 64, dead_or_set: 
insn=20, live_throughout: 7, 62, 63, 64, dead_or_set: 
insn=22, live_throughout: 7, 62, 63, 64, dead_or_set: 
insn=23, live_throughout: 7, 62, 63, 64, dead_or_set: 
insn=24, live_throughout: 7, 62, 63, 64, dead_or_set: 
insn=26, live_throughout: 7, 62, 64, dead_or_set: 63
insn=27, live_throughout: 7, 62, 64, dead_or_set: 
insn=29, live_throughout: 7, dead_or_set: 5
insn=30, live_throughout: 7, dead_or_set: 5
insn=95, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=33, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=34, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=35, live_throughout: 7, 58, 59, 60, dead_or_set: 62, 66
insn=36, live_throughout: 7, 58, 59, 60, dead_or_set: 66
insn=141, live_throughout: 7, 58, 59, 60, dead_or_set: 
insn=98, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=40, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=41, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=42, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=46, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 1
insn=47, live_throughout: 1, 7, 58, 59, 60, dead_or_set: 4, 62
insn=48, live_throughout: 1, 4, 7, 58, 59, 60, dead_or_set: 5
insn=49, live_throughout: 7, 58, 59, 60, dead_or_set: 0, 1, 4, 5
insn=52, live_throughout: 7, 58, 59, 60, dead_or_set: 
insn=54, live_throughout: 7, 58, 59, 60, dead_or_set: 
insn=55, live_throughout: 7, 58, 59, 60, dead_or_set: 
insn=56, live_throughout: 7, 58, 59, 60, dead_or_set: 
insn=57, live_throughout: 7, 58, 59, 60, dead_or_set: 
insn=58, live_throughout: 7, 58, 59, 60, dead_or_set: 
insn=60, live_throughout: 7, 58, 59, 60, dead_or_set: 
insn=61, live_throughout: 7, 58, 59, 60, dead_or_set: 
insn=62, live_throughout: 7, 58, 60, dead_or_set: 59
insn=63, live_throughout: 7, 58, 60, dead_or_set: 
insn=64, live_throughout: 7, 58, 60, dead_or_set: 
insn=65, live_throughout: 7, 58, 60, dead_or_set: 
insn=66, live_throughout: 7, 58, dead_or_set: 60
insn=67, live_throughout: 7, 58, dead_or_set: 
insn=128, live_throughout: 7, dead_or_set: 0, 58
insn=134, live_throughout: 0, 7, dead_or_set: 
insn=72, live_throughout: 7, 62, 63, 64, dead_or_set: 
insn=74, live_throughout: 7, 62, 63, 64, dead_or_set: 
insn=75, live_throughout: 7, 62, 63, 64, dead_or_set: 
insn=76, live_throughout: 7, 62, 63, 64, dead_or_set: 
insn=77, live_throughout: 7, 62, 63, 64, dead_or_set: 
insn=78, live_throughout: 7, 62, 63, 64, dead_or_set: 
insn=79, live_throughout: 7, 62, 64, dead_or_set: 60, 63
insn=80, live_throughout: 7, 60, 62, 64, dead_or_set: 
insn=81, live_throughout: 7, 60, 62, dead_or_set: 1, 64
insn=82, live_throughout: 1, 7, 60, 62, dead_or_set: 4
insn=83, live_throughout: 1, 4, 7, 60, 62, dead_or_set: 5
insn=84, live_throughout: 7, 60, 62, dead_or_set: 0, 1, 4, 5
insn=85, live_throughout: 7, 60, 62, dead_or_set: 0, 59
insn=86, live_throughout: 7, 59, 60, 62, dead_or_set: 
insn=87, live_throughout: 7, 59, 60, 62, dead_or_set: 
insn=88, live_throughout: 7, 59, 60, 62, dead_or_set: 58
insn=89, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=90, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=91, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=92, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=93, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=94, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=96, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=97, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=144, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
insn=102, live_throughout: 7, 62, 64, dead_or_set: 
insn=104, live_throughout: 7, 62, 64, dead_or_set: 
insn=105, live_throughout: 7, 62, 64, dead_or_set: 
insn=106, live_throughout: 7, 62, 64, dead_or_set: 
insn=107, live_throughout: 7, 62, 64, dead_or_set: 
insn=108, live_throughout: 7, 62, 64, dead_or_set: 
insn=109, live_throughout: 7, 62, 64, dead_or_set: 
insn=110, live_throughout: 7, 62, dead_or_set: 1, 64
insn=111, live_throughout: 1, 7, 62, dead_or_set: 4
insn=112, live_throughout: 1, 4, 7, 62, dead_or_set: 5
insn=113, live_throughout: 7, 62, dead_or_set: 0, 1, 4, 5
insn=114, live_throughout: 7, 62, dead_or_set: 0, 59
insn=115, live_throughout: 7, 59, 62, dead_or_set: 
insn=116, live_throughout: 7, 59, 62, dead_or_set: 
insn=117, live_throughout: 7, 59, 62, dead_or_set: 58
insn=118, live_throughout: 7, 58, 59, 62, dead_or_set: 
insn=119, live_throughout: 7, 58, 59, 62, dead_or_set: 
insn=120, live_throughout: 7, 58, 59, 62, dead_or_set: 
insn=121, live_throughout: 7, 58, 59, 62, dead_or_set: 
insn=122, live_throughout: 7, 58, 59, 62, dead_or_set: 
insn=123, live_throughout: 7, 58, 59, 62, dead_or_set: 
insn=124, live_throughout: 7, 58, 59, 62, dead_or_set: 60
insn=146, live_throughout: 7, 58, 59, 60, 62, dead_or_set: 
init_insns for 66: (insn_list:REG_DEP_TRUE 36 (nil))
changing reg in insn 117
changing reg in insn 88
changing reg in insn 17
changing reg in insn 128
changing reg in insn 48
changing reg in insn 121
changing reg in insn 118
changing reg in insn 92
changing reg in insn 89
changing reg in insn 66
changing reg in insn 64
changing reg in insn 40
changing reg in insn 33
changing reg in insn 114
changing reg in insn 85
changing reg in insn 36
changing reg in insn 117
changing reg in insn 116
changing reg in insn 115
changing reg in insn 88
changing reg in insn 87
changing reg in insn 86
changing reg in insn 62
changing reg in insn 61
changing reg in insn 60
changing reg in insn 57
changing reg in insn 54
changing reg in insn 35
changing reg in insn 124
changing reg in insn 79
changing reg in insn 46
changing reg in insn 96
changing reg in insn 94
changing reg in insn 83
changing reg in insn 80
changing reg in insn 66
changing reg in insn 64
changing reg in insn 62
changing reg in insn 55
changing reg in insn 42
changing reg in insn 2
changing reg in insn 47
changing reg in insn 93
changing reg in insn 90
changing reg in insn 79
changing reg in insn 77
changing reg in insn 74
changing reg in insn 41
changing reg in insn 35
changing reg in insn 34
changing reg in insn 23
changing reg in insn 22
changing reg in insn 12
changing reg in insn 3
changing reg in insn 79
changing reg in insn 78
changing reg in insn 75
changing reg in insn 26
changing reg in insn 12
changing reg in insn 4
changing reg in insn 110
changing reg in insn 81
changing reg in insn 35
changing reg in insn 36
Spilling for insn 35.
Spilling for insn 36.
Spilling for insn 61.
Spilling for insn 62.
Spilling for insn 66.
Spilling for insn 79.

Reloads for insn # 35
Reload 0: reload_in (QI) = (mem:QI (reg/v/f:DI 3 bx [orig:62 __beg ] [62]) [0 S1 A8])
	Q_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem:QI (reg/v/f:DI 3 bx [orig:62 __beg ] [62]) [0 S1 A8])

Reloads for insn # 36
Reload 0: reload_out (QI) = (mem:QI (plus:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
                                                        (const_int 24 [0x18])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (plus:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
                                                        (const_int 24 [0x18])) [0 S1 A8])

Reloads for insn # 61
Reload 0: reload_out (SI) = (mem/s:SI (plus:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
                                                        (const_int 16 [0x10])) [5 <variable>.D.11486._M_refcount+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:SI (plus:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
                                                        (const_int 16 [0x10])) [5 <variable>.D.11486._M_refcount+0 S4 A64])

Reloads for insn # 62
Reload 0: reload_out (DI) = (mem/s:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59]) [14 <variable>.D.11486._M_length+0 S8 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59]) [14 <variable>.D.11486._M_length+0 S8 A64])

Reloads for insn # 66
Reload 0: reload_out (QI) = (mem:QI (plus:DI (reg/f:DI 6 bp [orig:58 D.39749 ] [58])
                                                        (reg/v:DI 41 r12 [orig:60 __dnew ] [60])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (plus:DI (reg/f:DI 6 bp [orig:58 D.39749 ] [58])
                                                        (reg/v:DI 41 r12 [orig:60 __dnew ] [60])) [0 S1 A8])

Reloads for insn # 79
Reload 0: reload_in (DI) = (reg/v/f:DI 4 si [orig:63 __end ] [63])
	reload_out (DI) = (reg/v:DI 41 r12 [orig:60 __dnew ] [60])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg/v/f:DI 4 si [orig:63 __end ] [63])
	reload_out_reg: (reg/v:DI 41 r12 [orig:60 __dnew ] [60])
	reload_reg_rtx: (reg/v:DI 41 r12 [orig:60 __dnew ] [60])
deleting insn with uid = 3.
deleting insn with uid = 4.
deleting insn with uid = 81.
deleting insn with uid = 110.


try_optimize_cfg iteration 1

deleting insn with uid = 20.
Deleted label in block 3.
Forwarding edge 11->12 to 6 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 113.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 17 count 23 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 17 count 26 (  1.9)


static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
;;  ref usage 	r0={7d,5u} r1={6d,3u} r2={5d} r3={1d,12u} r4={8d,8u} r5={9d,5u} r6={3d,10u} r7={1d,17u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={12d,5u} r18={4d} r19={4d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={5d} r40={4d} r41={3d,11u} r42={2d,12u,1d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 309{220d,88u,1e} in 82{78 regular + 4 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 17 [flags]
;; live  in  	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 17 [flags]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 6 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:123 (set (reg/v/f:DI 3 bx [orig:62 __beg ] [62])
        (reg:DI 5 di [ __beg ])) 89 {*movdi_1_rex64} (nil))

(note 6 2 17 2 NOTE_INSN_FUNCTION_BEG)

(insn 17 6 12 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:215 (set (reg/f:DI 6 bp [orig:58 D.39749 ] [58])
        (const:DI (plus:DI (symbol_ref:DI ("_ZNSs4_Rep20_S_empty_rep_storageE") [flags 0x40]  <var_decl 0x7f90132c3280 _S_empty_rep_storage>)
                (const_int 24 [0x18])))) 89 {*movdi_1_rex64} (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("_ZNSs4_Rep20_S_empty_rep_storageE") [flags 0x40]  <var_decl 0x7f90132c3280 _S_empty_rep_storage>)
                (const_int 24 [0x18])))
        (nil)))

(insn 12 17 13 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 3 bx [orig:62 __beg ] [62])
            (reg/v/f:DI 4 si [orig:63 __end ] [63]))) 2 {cmpdi_1_insn_rex64} (nil))

(jump_insn 13 12 21 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:128 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 67)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 3 10)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  10 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 21 13 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(debug_insn 22 21 23 3 (var_location:DI __ptr (reg/v/f:DI 3 bx [orig:62 __beg ] [62])) -1 (nil))

(insn 23 22 24 3 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 3 bx [orig:62 __beg ] [62])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 24 23 25 3 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 3 -> ( 4 11)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]


;; Succ edge  4 [15.0%]  (fallthru)
;; Succ edge  11 [85.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  3 [15.0%]  (fallthru)
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 4 si [orig:63 __end ] [63])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 27 26 28 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:132 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 4 -> ( 5 13)
;; lr  out 	 1 [dx] 3 [bx] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 7 [sp]


;; Succ edge  5 [85.0%]  (fallthru)
;; Succ edge  13 [15.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	

;; Pred edge  4 [85.0%]  (fallthru)
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 5 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:134 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <string_cst 0x7f901197d730>)) 89 {*movdi_1_rex64} (nil))

(call_insn 30 29 31 5 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:134 (call (mem:QI (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7f9013bc4500 __throw_logic_error>) [0 S1 A8])
        (const_int 0 [0x0])) 646 {*call_0} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 5 -> ()
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]



(barrier 31 30 95)

;; Start of basic block ( 12) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  12 [100.0%] 
(code_label 95 31 32 6 36 "" [1 uses])

(note 32 95 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(debug_insn 33 32 34 6 (var_location:DI __c1 (reg/f:DI 6 bp [orig:58 D.39749 ] [58])) -1 (nil))

(debug_insn 34 33 35 6 (var_location:DI __c2 (reg/v/f:DI 3 bx [orig:62 __beg ] [62])) -1 (nil))

(insn 35 34 36 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/char_traits.h:247 (set (reg:QI 0 ax [66])
        (mem:QI (reg/v/f:DI 3 bx [orig:62 __beg ] [62]) [0 S1 A8])) 62 {*movqi_1} (expr_list:REG_EQUIV (mem:QI (plus:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
                (const_int 24 [0x18])) [0 S1 A8])
        (nil)))

(insn 36 35 141 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/char_traits.h:247 (set (mem:QI (plus:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
                (const_int 24 [0x18])) [0 S1 A8])
        (reg:QI 0 ax [66])) 62 {*movqi_1} (nil))

(jump_insn 141 36 142 6 (set (pc)
        (label_ref 52)) 638 {jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  8 [100.0%] 

(barrier 142 141 98)

;; Start of basic block ( 11 13) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	

;; Pred edge  11 [61.2%] 
;; Pred edge  13 [100.0%] 
(code_label 98 142 39 7 37 "" [2 uses])

(note 39 98 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(debug_insn 40 39 41 7 (var_location:DI __s1 (reg/f:DI 6 bp [orig:58 D.39749 ] [58])) -1 (nil))

(debug_insn 41 40 42 7 (var_location:DI __s2 (reg/v/f:DI 3 bx [orig:62 __beg ] [62])) -1 (nil))

(debug_insn 42 41 46 7 (var_location:DI __n (reg/v:DI 41 r12 [orig:60 __dnew ] [60])) -1 (nil))

(insn 46 42 47 7 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/char_traits.h:275 (set (reg:DI 1 dx)
        (reg/v:DI 41 r12 [orig:60 __dnew ] [60])) 89 {*movdi_1_rex64} (nil))

(insn 47 46 48 7 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/char_traits.h:275 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:62 __beg ] [62])) 89 {*movdi_1_rex64} (nil))

(insn 48 47 49 7 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/char_traits.h:275 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:58 D.39749 ] [58])) 89 {*movdi_1_rex64} (nil))

(call_insn 49 48 52 7 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/char_traits.h:275 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f9011be1f00 memcpy>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 52 49 53 8 35 "" [1 uses])

(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(debug_insn 54 53 55 8 (var_location:DI this (reg/v/f:DI 42 r13 [orig:59 __r ] [59])) -1 (nil))

(debug_insn 55 54 56 8 (var_location:DI __n (reg/v:DI 41 r12 [orig:60 __dnew ] [60])) -1 (nil))

(debug_insn 56 55 57 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:178 (var_location:DI __p (symbol_ref:DI ("_ZNSs4_Rep20_S_empty_rep_storageE") [flags 0x40]  <var_decl 0x7f90132c3280 _S_empty_rep_storage>)) -1 (nil))

(insn 57 56 58 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:202 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
            (symbol_ref:DI ("_ZNSs4_Rep20_S_empty_rep_storageE") [flags 0x40]  <var_decl 0x7f90132c3280 _S_empty_rep_storage>))) 2 {cmpdi_1_insn_rex64} (nil))

(jump_insn 58 57 59 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:202 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  9 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	

;; Pred edge  8 [0.0%]  (fallthru)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(debug_insn 60 59 61 9 (var_location:DI this (reg/v/f:DI 42 r13 [orig:59 __r ] [59])) -1 (nil))

(insn 61 60 62 9 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:196 (set (mem/s:SI (plus:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
                (const_int 16 [0x10])) [5 <variable>.D.11486._M_refcount+0 S4 A64])
        (const_int 0 [0x0])) 47 {*movsi_1} (nil))

(insn 62 61 63 9 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:206 (set (mem/s:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59]) [14 <variable>.D.11486._M_length+0 S8 A64])
        (reg/v:DI 41 r12 [orig:60 __dnew ] [60])) 89 {*movdi_1_rex64} (nil))

(debug_insn 63 62 64 9 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:206 (var_location:DI this (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 64 63 65 9 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:207 (var_location:DI __c1 (plus:DI (reg/f:DI 6 bp [orig:58 D.39749 ] [58])
        (reg/v:DI 41 r12 [orig:60 __dnew ] [60]))) -1 (nil))

(debug_insn 65 64 66 9 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:207 (var_location:DI __c2 (clobber (const_int 0 [0x0]))) -1 (nil))

(insn 66 65 67 9 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/char_traits.h:247 (set (mem:QI (plus:DI (reg/f:DI 6 bp [orig:58 D.39749 ] [58])
                (reg/v:DI 41 r12 [orig:60 __dnew ] [60])) [0 S1 A8])
        (const_int 0 [0x0])) 62 {*movqi_1} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9 2) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
(code_label 67 66 68 10 32 "" [2 uses])

(note 68 67 128 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 128 68 134 10 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:149 (set (reg/i:DI 0 ax)
        (reg/f:DI 6 bp [orig:58 D.39749 ] [58])) 89 {*movdi_1_rex64} (nil))

(insn 134 128 72 10 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:149 (use (reg/i:DI 0 ax)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 6 [bp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  3 [85.0%] 
(code_label 72 134 73 11 33 "" [1 uses])

(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(debug_insn 74 73 75 11 (var_location:DI __first (reg/v/f:DI 3 bx [orig:62 __beg ] [62])) -1 (nil))

(debug_insn 75 74 76 11 (var_location:DI __last (reg/v/f:DI 4 si [orig:63 __end ] [63])) -1 (nil))

(debug_insn 76 75 77 11 (var_location:DI D.39759 (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 77 76 78 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_iterator_base_funcs.h:114 (var_location:DI __first (reg/v/f:DI 3 bx [orig:62 __beg ] [62])) -1 (nil))

(debug_insn 78 77 149 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_iterator_base_funcs.h:114 (var_location:DI __last (reg/v/f:DI 4 si [orig:63 __end ] [63])) -1 (nil))

(insn 149 78 79 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:137 (set (reg/v:DI 41 r12 [orig:60 __dnew ] [60])
        (reg/v/f:DI 4 si [orig:63 __end ] [63])) 89 {*movdi_1_rex64} (nil))

(insn 79 149 80 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:137 (parallel [
            (set (reg/v:DI 41 r12 [orig:60 __dnew ] [60])
                (minus:DI (reg/v:DI 41 r12 [orig:60 __dnew ] [60])
                    (reg/v/f:DI 3 bx [orig:62 __beg ] [62])))
            (clobber (reg:CC 17 flags))
        ]) 313 {*subdi_1_rex64} (nil))

(debug_insn 80 79 82 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:137 (var_location:DI __dnew (reg/v:DI 41 r12 [orig:60 __dnew ] [60])) -1 (nil))

(insn 82 80 83 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (set (reg:DI 4 si)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 83 82 84 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (set (reg:DI 5 di)
        (reg/v:DI 41 r12 [orig:60 __dnew ] [60])) 89 {*movdi_1_rex64} (nil))

(call_insn 84 83 85 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSs4_Rep9_S_createEmmRKSaIcE") [flags 0x41]  <function_decl 0x7f90132c9400 _S_create>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 85 84 86 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (set (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (nil))

(debug_insn 86 85 87 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (var_location:DI __r (reg/v/f:DI 42 r13 [orig:59 __r ] [59])) -1 (nil))

(debug_insn 87 86 88 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (var_location:DI this (reg/v/f:DI 42 r13 [orig:59 __r ] [59])) -1 (nil))

(insn 88 87 89 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:215 (parallel [
            (set (reg/f:DI 6 bp [orig:58 D.39749 ] [58])
                (plus:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 281 {*adddi_1_rex64} (nil))

(debug_insn 89 88 90 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:215 (var_location:DI __p (reg/f:DI 6 bp [orig:58 D.39749 ] [58])) -1 (nil))

(debug_insn 90 89 91 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:215 (var_location:DI __k1 (reg/v/f:DI 3 bx [orig:62 __beg ] [62])) -1 (nil))

(debug_insn 91 90 92 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:215 (var_location:DI __k2 (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 92 91 93 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:385 (var_location:DI __d (reg/f:DI 6 bp [orig:58 D.39749 ] [58])) -1 (nil))

(debug_insn 93 92 94 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:385 (var_location:DI __s (reg/v/f:DI 3 bx [orig:62 __beg ] [62])) -1 (nil))

(debug_insn 94 93 96 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:385 (var_location:DI __n (reg/v:DI 41 r12 [orig:60 __dnew ] [60])) -1 (nil))

(insn 96 94 97 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:341 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 41 r12 [orig:60 __dnew ] [60])
            (const_int 1 [0x1]))) 2 {cmpdi_1_insn_rex64} (nil))

(jump_insn 97 96 143 11 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:341 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 98)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 6116 [0x17e4])
        (nil)))
;; End of basic block 11 -> ( 12 7)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  12 [38.8%]  (fallthru)
;; Succ edge  7 [61.2%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [38.8%]  (fallthru)
(note 143 97 144 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 144 143 145 12 (set (pc)
        (label_ref 95)) 638 {jump} (nil))
;; End of basic block 12 -> ( 6)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  6 [100.0%] 

(barrier 145 144 102)

;; Start of basic block ( 4) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  4 [15.0%] 
(code_label 102 145 103 13 34 "" [1 uses])

(note 103 102 104 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(debug_insn 104 103 105 13 (var_location:DI __first (const_int 0 [0x0])) -1 (nil))

(debug_insn 105 104 106 13 (var_location:DI __last (const_int 0 [0x0])) -1 (nil))

(debug_insn 106 105 107 13 (var_location:DI D.39759 (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 107 106 108 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_iterator_base_funcs.h:114 (var_location:DI __first (const_int 0 [0x0])) -1 (nil))

(debug_insn 108 107 109 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_iterator_base_funcs.h:114 (var_location:DI __last (const_int 0 [0x0])) -1 (nil))

(debug_insn 109 108 111 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:137 (var_location:DI __dnew (const_int 0 [0x0])) -1 (nil))

(insn 111 109 112 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (set (reg:DI 4 si)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(insn 112 111 113 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (set (reg:DI 5 di)
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(call_insn 113 112 114 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSs4_Rep9_S_createEmmRKSaIcE") [flags 0x41]  <function_decl 0x7f90132c9400 _S_create>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))

(insn 114 113 115 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (set (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (nil))

(debug_insn 115 114 116 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (var_location:DI __r (reg/v/f:DI 42 r13 [orig:59 __r ] [59])) -1 (nil))

(debug_insn 116 115 117 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.tcc:139 (var_location:DI this (reg/v/f:DI 42 r13 [orig:59 __r ] [59])) -1 (nil))

(insn 117 116 118 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:215 (parallel [
            (set (reg/f:DI 6 bp [orig:58 D.39749 ] [58])
                (plus:DI (reg/v/f:DI 42 r13 [orig:59 __r ] [59])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 281 {*adddi_1_rex64} (nil))

(debug_insn 118 117 119 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:215 (var_location:DI __p (reg/f:DI 6 bp [orig:58 D.39749 ] [58])) -1 (nil))

(debug_insn 119 118 120 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:215 (var_location:DI __k1 (const_int 0 [0x0])) -1 (nil))

(debug_insn 120 119 121 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:215 (var_location:DI __k2 (const_int 0 [0x0])) -1 (nil))

(debug_insn 121 120 122 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:385 (var_location:DI __d (reg/f:DI 6 bp [orig:58 D.39749 ] [58])) -1 (nil))

(debug_insn 122 121 123 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:385 (var_location:DI __s (const_int 0 [0x0])) -1 (nil))

(debug_insn 123 122 124 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:385 (var_location:DI __n (const_int 0 [0x0])) -1 (nil))

(insn 124 123 146 13 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:215 (set (reg/v:DI 41 r12 [orig:60 __dnew ] [60])
        (const_int 0 [0x0])) 89 {*movdi_1_rex64} (nil))

(jump_insn 146 124 147 13 (set (pc)
        (label_ref 98)) 638 {jump} (nil))
;; End of basic block 13 -> ( 7)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  7 [100.0%] 

(barrier 147 146 148)

(note 148 147 0 NOTE_INSN_DELETED)


;; Function float compute_entropy(kmer_int_type_t, unsigned int) (_Z15compute_entropyyj)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 19 count 21 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 19 count 26 (  1.9)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a7 (r129,l0) best SSE_REGS, cover SSE_REGS
    a1 (r127,l0) best SSE_REGS, cover SSE_REGS
    a2 (r125,l0) best SSE_REGS, cover SSE_REGS
    a5 (r122,l0) best SSE_FIRST_REG, cover SSE_REGS
    a6 (r120,l0) best SSE_REGS, cover SSE_REGS
    a9 (r118,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r116,l0) best SSE_REGS, cover SSE_REGS
    a11 (r114,l0) best SSE_REGS, cover SSE_REGS
    a14 (r111,l0) best SSE_FIRST_REG, cover SSE_REGS
    a15 (r109,l0) best SSE_REGS, cover SSE_REGS
    a16 (r107,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r105,l0) best SSE_REGS, cover SSE_REGS
    a18 (r103,l0) best SSE_REGS, cover SSE_REGS
    a21 (r100,l0) best SSE_FIRST_REG, cover SSE_REGS
    a22 (r98,l0) best SSE_REGS, cover SSE_REGS
    a23 (r96,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r91,l0) best SSE_REGS, cover SSE_REGS
    a27 (r88,l0) best SSE_FIRST_REG, cover SSE_REGS
    a28 (r86,l0) best SSE_REGS, cover SSE_REGS
    a29 (r84,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r79,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r75,l1) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r74,l1) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r74,l0) best SIREG, cover GENERAL_REGS
    a36 (r73,l1) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r73,l0) best DIREG, cover GENERAL_REGS
    a8 (r71,l0) best SSE_REGS, cover SSE_REGS
    a3 (r70,l0) best SSE_FIRST_REG, cover SSE_REGS
    a0 (r69,l0) best SSE_FIRST_REG, cover SSE_REGS
    a35 (r68,l1) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r68,l0) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r67,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r66,l0) best SSE_REGS, cover SSE_REGS
    a30 (r65,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r64,l0) best SSE_REGS, cover SSE_REGS
    a25 (r63,l0) best SSE_FIRST_REG, cover SSE_REGS
    a20 (r62,l0) best SSE_REGS, cover SSE_REGS
    a19 (r61,l0) best SSE_FIRST_REG, cover SSE_REGS
    a13 (r60,l0) best SSE_REGS, cover SSE_REGS
    a12 (r59,l0) best SSE_FIRST_REG, cover SSE_REGS

  a0(r69,l0) costs: AREG:3402,3402 DREG:3402,3402 CREG:3402,3402 BREG:3402,3402 SIREG:3402,3402 DIREG:3402,3402 AD_REGS:3402,3402 CLOBBERED_REGS:3402,3402 Q_REGS:3402,3402 NON_Q_REGS:3402,3402 LEGACY_REGS:3402,3402 GENERAL_REGS:3402,3402 FP_TOP_REG:5274,5274 FP_SECOND_REG:5274,5274 FLOAT_REGS:5274,5274 SSE_FIRST_REG:-90,-90 SSE_REGS:0,0 MMX_REGS:6678,6678 MEM:2784
  a1(r127,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:884,884 MEM:390
  a2(r125,l0) costs: AREG:2028,2028 DREG:2028,2028 CREG:2028,2028 BREG:2028,2028 SIREG:2028,2028 DIREG:2028,2028 AD_REGS:2028,2028 CLOBBERED_REGS:2028,2028 Q_REGS:2028,2028 NON_Q_REGS:2028,2028 LEGACY_REGS:2028,2028 GENERAL_REGS:2028,2028 FP_TOP_REG:3276,3276 FP_SECOND_REG:3276,3276 FLOAT_REGS:3276,3276 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MEM:1196
  a3(r70,l0) costs: AREG:442,442 DREG:442,442 CREG:442,442 BREG:442,442 SIREG:442,442 DIREG:442,442 AD_REGS:442,442 CLOBBERED_REGS:442,442 Q_REGS:442,442 NON_Q_REGS:442,442 LEGACY_REGS:442,442 GENERAL_REGS:442,442 FP_TOP_REG:650,650 FP_SECOND_REG:650,650 FLOAT_REGS:650,650 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a4(r66,l0) costs: AREG:5356,5356 DREG:5356,5356 CREG:5356,5356 BREG:5356,5356 SIREG:5356,5356 DIREG:5356,5356 AD_REGS:5356,5356 CLOBBERED_REGS:5356,5356 Q_REGS:5356,5356 NON_Q_REGS:5356,5356 LEGACY_REGS:5356,5356 GENERAL_REGS:5356,5356 FP_TOP_REG:8652,8652 FP_SECOND_REG:8652,8652 FLOAT_REGS:8652,8652 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:7004,7004 MEM:3244
  a5(r122,l0) costs: AREG:442,442 DREG:442,442 CREG:442,442 BREG:442,442 SIREG:442,442 DIREG:442,442 AD_REGS:442,442 CLOBBERED_REGS:442,442 Q_REGS:442,442 NON_Q_REGS:442,442 LEGACY_REGS:442,442 GENERAL_REGS:442,442 FP_TOP_REG:650,650 FP_SECOND_REG:650,650 FLOAT_REGS:650,650 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a6(r120,l0) costs: AREG:1014,1014 DREG:1014,1014 CREG:1014,1014 BREG:1014,1014 SIREG:1014,1014 DIREG:1014,1014 AD_REGS:1014,1014 CLOBBERED_REGS:1014,1014 Q_REGS:1014,1014 NON_Q_REGS:1014,1014 LEGACY_REGS:1014,1014 GENERAL_REGS:1014,1014 FP_TOP_REG:1638,1638 FP_SECOND_REG:1638,1638 FLOAT_REGS:1638,1638 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:1664,1664 MEM:702
  a7(r129,l0) costs: AREG:5018,5018 DREG:5018,5018 CREG:5018,5018 BREG:5018,5018 SIREG:5018,5018 DIREG:5018,5018 AD_REGS:5018,5018 CLOBBERED_REGS:5018,5018 Q_REGS:5018,5018 NON_Q_REGS:5018,5018 LEGACY_REGS:5018,5018 GENERAL_REGS:5018,5018 FP_TOP_REG:8106,8106 FP_SECOND_REG:8106,8106 FLOAT_REGS:8106,8106 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:8902,8902 MEM:3332
  a8(r71,l0) costs: AREG:5850,5850 DREG:5850,5850 CREG:5850,5850 BREG:5850,5850 SIREG:5850,5850 DIREG:5850,5850 AD_REGS:5850,5850 CLOBBERED_REGS:5850,5850 Q_REGS:5850,5850 NON_Q_REGS:5850,5850 LEGACY_REGS:5850,5850 GENERAL_REGS:5850,5850 FP_TOP_REG:9450,9450 FP_SECOND_REG:9450,9450 FLOAT_REGS:9450,9450 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:7650,7650 MEM:3240
  a9(r118,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:720
  a10(r116,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:884,884 MEM:390
  a11(r114,l0) costs: AREG:2028,2028 DREG:2028,2028 CREG:2028,2028 BREG:2028,2028 SIREG:2028,2028 DIREG:2028,2028 AD_REGS:2028,2028 CLOBBERED_REGS:2028,2028 Q_REGS:2028,2028 NON_Q_REGS:2028,2028 LEGACY_REGS:2028,2028 GENERAL_REGS:2028,2028 FP_TOP_REG:3276,3276 FP_SECOND_REG:3276,3276 FLOAT_REGS:3276,3276 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MEM:1196
  a12(r59,l0) costs: AREG:442,442 DREG:442,442 CREG:442,442 BREG:442,442 SIREG:442,442 DIREG:442,442 AD_REGS:442,442 CLOBBERED_REGS:442,442 Q_REGS:442,442 NON_Q_REGS:442,442 LEGACY_REGS:442,442 GENERAL_REGS:442,442 FP_TOP_REG:650,650 FP_SECOND_REG:650,650 FLOAT_REGS:650,650 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a13(r60,l0) costs: AREG:5356,5356 DREG:5356,5356 CREG:5356,5356 BREG:5356,5356 SIREG:5356,5356 DIREG:5356,5356 AD_REGS:5356,5356 CLOBBERED_REGS:5356,5356 Q_REGS:5356,5356 NON_Q_REGS:5356,5356 LEGACY_REGS:5356,5356 GENERAL_REGS:5356,5356 FP_TOP_REG:8652,8652 FP_SECOND_REG:8652,8652 FLOAT_REGS:8652,8652 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:7004,7004 MEM:3244
  a14(r111,l0) costs: AREG:442,442 DREG:442,442 CREG:442,442 BREG:442,442 SIREG:442,442 DIREG:442,442 AD_REGS:442,442 CLOBBERED_REGS:442,442 Q_REGS:442,442 NON_Q_REGS:442,442 LEGACY_REGS:442,442 GENERAL_REGS:442,442 FP_TOP_REG:650,650 FP_SECOND_REG:650,650 FLOAT_REGS:650,650 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a15(r109,l0) costs: AREG:1014,1014 DREG:1014,1014 CREG:1014,1014 BREG:1014,1014 SIREG:1014,1014 DIREG:1014,1014 AD_REGS:1014,1014 CLOBBERED_REGS:1014,1014 Q_REGS:1014,1014 NON_Q_REGS:1014,1014 LEGACY_REGS:1014,1014 GENERAL_REGS:1014,1014 FP_TOP_REG:1638,1638 FP_SECOND_REG:1638,1638 FLOAT_REGS:1638,1638 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:1664,1664 MEM:702
  a16(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:720
  a17(r105,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:884,884 MEM:390
  a18(r103,l0) costs: AREG:2028,2028 DREG:2028,2028 CREG:2028,2028 BREG:2028,2028 SIREG:2028,2028 DIREG:2028,2028 AD_REGS:2028,2028 CLOBBERED_REGS:2028,2028 Q_REGS:2028,2028 NON_Q_REGS:2028,2028 LEGACY_REGS:2028,2028 GENERAL_REGS:2028,2028 FP_TOP_REG:3276,3276 FP_SECOND_REG:3276,3276 FLOAT_REGS:3276,3276 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MEM:1196
  a19(r61,l0) costs: AREG:442,442 DREG:442,442 CREG:442,442 BREG:442,442 SIREG:442,442 DIREG:442,442 AD_REGS:442,442 CLOBBERED_REGS:442,442 Q_REGS:442,442 NON_Q_REGS:442,442 LEGACY_REGS:442,442 GENERAL_REGS:442,442 FP_TOP_REG:650,650 FP_SECOND_REG:650,650 FLOAT_REGS:650,650 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a20(r62,l0) costs: AREG:5356,5356 DREG:5356,5356 CREG:5356,5356 BREG:5356,5356 SIREG:5356,5356 DIREG:5356,5356 AD_REGS:5356,5356 CLOBBERED_REGS:5356,5356 Q_REGS:5356,5356 NON_Q_REGS:5356,5356 LEGACY_REGS:5356,5356 GENERAL_REGS:5356,5356 FP_TOP_REG:8652,8652 FP_SECOND_REG:8652,8652 FLOAT_REGS:8652,8652 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:7004,7004 MEM:3244
  a21(r100,l0) costs: AREG:442,442 DREG:442,442 CREG:442,442 BREG:442,442 SIREG:442,442 DIREG:442,442 AD_REGS:442,442 CLOBBERED_REGS:442,442 Q_REGS:442,442 NON_Q_REGS:442,442 LEGACY_REGS:442,442 GENERAL_REGS:442,442 FP_TOP_REG:650,650 FP_SECOND_REG:650,650 FLOAT_REGS:650,650 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a22(r98,l0) costs: AREG:1014,1014 DREG:1014,1014 CREG:1014,1014 BREG:1014,1014 SIREG:1014,1014 DIREG:1014,1014 AD_REGS:1014,1014 CLOBBERED_REGS:1014,1014 Q_REGS:1014,1014 NON_Q_REGS:1014,1014 LEGACY_REGS:1014,1014 GENERAL_REGS:1014,1014 FP_TOP_REG:1638,1638 FP_SECOND_REG:1638,1638 FLOAT_REGS:1638,1638 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:1664,1664 MEM:702
  a23(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:720
  a24(r91,l0) costs: AREG:2028,2028 DREG:2028,2028 CREG:2028,2028 BREG:2028,2028 SIREG:2028,2028 DIREG:2028,2028 AD_REGS:2028,2028 CLOBBERED_REGS:2028,2028 Q_REGS:2028,2028 NON_Q_REGS:2028,2028 LEGACY_REGS:2028,2028 GENERAL_REGS:2028,2028 FP_TOP_REG:3276,3276 FP_SECOND_REG:3276,3276 FLOAT_REGS:3276,3276 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MEM:1196
  a25(r63,l0) costs: AREG:442,442 DREG:442,442 CREG:442,442 BREG:442,442 SIREG:442,442 DIREG:442,442 AD_REGS:442,442 CLOBBERED_REGS:442,442 Q_REGS:442,442 NON_Q_REGS:442,442 LEGACY_REGS:442,442 GENERAL_REGS:442,442 FP_TOP_REG:650,650 FP_SECOND_REG:650,650 FLOAT_REGS:650,650 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a26(r64,l0) costs: AREG:5356,5356 DREG:5356,5356 CREG:5356,5356 BREG:5356,5356 SIREG:5356,5356 DIREG:5356,5356 AD_REGS:5356,5356 CLOBBERED_REGS:5356,5356 Q_REGS:5356,5356 NON_Q_REGS:5356,5356 LEGACY_REGS:5356,5356 GENERAL_REGS:5356,5356 FP_TOP_REG:8652,8652 FP_SECOND_REG:8652,8652 FLOAT_REGS:8652,8652 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:7004,7004 MEM:3244
  a27(r88,l0) costs: AREG:442,442 DREG:442,442 CREG:442,442 BREG:442,442 SIREG:442,442 DIREG:442,442 AD_REGS:442,442 CLOBBERED_REGS:442,442 Q_REGS:442,442 NON_Q_REGS:442,442 LEGACY_REGS:442,442 GENERAL_REGS:442,442 FP_TOP_REG:650,650 FP_SECOND_REG:650,650 FLOAT_REGS:650,650 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a28(r86,l0) costs: AREG:1014,1014 DREG:1014,1014 CREG:1014,1014 BREG:1014,1014 SIREG:1014,1014 DIREG:1014,1014 AD_REGS:1014,1014 CLOBBERED_REGS:1014,1014 Q_REGS:1014,1014 NON_Q_REGS:1014,1014 LEGACY_REGS:1014,1014 GENERAL_REGS:1014,1014 FP_TOP_REG:1638,1638 FP_SECOND_REG:1638,1638 FLOAT_REGS:1638,1638 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:1664,1664 MEM:702
  a29(r84,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:720
  a30(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:954
  a31(r79,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:720
  a32(r74,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-90,-90 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3510,15340 SSE_REGS:3510,15340 MMX_REGS:3510,15340 MEM:990
  a33(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1170,36660 SSE_REGS:1170,36660 MMX_REGS:1170,36660 MEM:360
  a34(r73,l0) costs: AREG:0,1820 DREG:0,1820 CREG:0,1820 BREG:0,1820 SIREG:0,1820 DIREG:-90,1730 AD_REGS:0,1820 CLOBBERED_REGS:0,1820 Q_REGS:0,1820 NON_Q_REGS:0,1820 LEGACY_REGS:0,1820 GENERAL_REGS:0,1820 MEM:360
  a35(r68,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:35490,35490 SSE_REGS:35490,35490 MMX_REGS:35490,35490 MEM:8190
  a36(r73,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 MEM:10010
  a37(r74,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 MEM:2730
  a38(r75,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:35490,35490 SSE_REGS:35490,35490 MMX_REGS:35490,35490 MEM:10920
  a39(r67,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 SSE_FIRST_REG:25480,25480 SSE_REGS:25480,25480 MMX_REGS:25480,25480 MEM:7280


Pass 1 for finding allocno costs

    r129: preferred SSE_REGS, alternative NO_REGS
    r127: preferred SSE_REGS, alternative NO_REGS
    r125: preferred SSE_REGS, alternative NO_REGS
    r122: preferred SSE_FIRST_REG, alternative SSE_REGS
    r120: preferred SSE_REGS, alternative NO_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS
    r116: preferred SSE_REGS, alternative NO_REGS
    r114: preferred SSE_REGS, alternative NO_REGS
    r111: preferred SSE_FIRST_REG, alternative SSE_REGS
    r109: preferred SSE_REGS, alternative NO_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS
    r105: preferred SSE_REGS, alternative NO_REGS
    r103: preferred SSE_REGS, alternative NO_REGS
    r100: preferred SSE_FIRST_REG, alternative SSE_REGS
    r98: preferred SSE_REGS, alternative NO_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS
    r91: preferred SSE_REGS, alternative NO_REGS
    r88: preferred SSE_FIRST_REG, alternative SSE_REGS
    r86: preferred SSE_REGS, alternative NO_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS
    r74: preferred SIREG, alternative GENERAL_REGS
    r73: preferred DIREG, alternative GENERAL_REGS
    r71: preferred SSE_REGS, alternative NO_REGS
    r70: preferred SSE_FIRST_REG, alternative SSE_REGS
    r69: preferred SSE_FIRST_REG, alternative SSE_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS
    r66: preferred SSE_REGS, alternative NO_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS
    r64: preferred SSE_REGS, alternative NO_REGS
    r63: preferred SSE_FIRST_REG, alternative SSE_REGS
    r62: preferred SSE_REGS, alternative NO_REGS
    r61: preferred SSE_FIRST_REG, alternative SSE_REGS
    r60: preferred SSE_REGS, alternative NO_REGS
    r59: preferred SSE_FIRST_REG, alternative SSE_REGS

  a0(r69,l0) costs: AREG:5382,5382 DREG:5382,5382 CREG:5382,5382 BREG:5382,5382 SIREG:5382,5382 DIREG:5382,5382 AD_REGS:5382,5382 CLOBBERED_REGS:5382,5382 Q_REGS:5382,5382 NON_Q_REGS:5382,5382 LEGACY_REGS:5382,5382 GENERAL_REGS:5382,5382 FP_TOP_REG:8694,8694 FP_SECOND_REG:8694,8694 FLOAT_REGS:8694,8694 SSE_FIRST_REG:-90,-90 SSE_REGS:0,0 MMX_REGS:7038,7038 MEM:3144
  a1(r127,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:884,884 MEM:390
  a2(r125,l0) costs: AREG:2028,2028 DREG:2028,2028 CREG:2028,2028 BREG:2028,2028 SIREG:2028,2028 DIREG:2028,2028 AD_REGS:2028,2028 CLOBBERED_REGS:2028,2028 Q_REGS:2028,2028 NON_Q_REGS:2028,2028 LEGACY_REGS:2028,2028 GENERAL_REGS:2028,2028 FP_TOP_REG:3276,3276 FP_SECOND_REG:3276,3276 FLOAT_REGS:3276,3276 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MEM:1196
  a3(r70,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a4(r66,l0) costs: AREG:5356,5356 DREG:5356,5356 CREG:5356,5356 BREG:5356,5356 SIREG:5356,5356 DIREG:5356,5356 AD_REGS:5356,5356 CLOBBERED_REGS:5356,5356 Q_REGS:5356,5356 NON_Q_REGS:5356,5356 LEGACY_REGS:5356,5356 GENERAL_REGS:5356,5356 FP_TOP_REG:8652,8652 FP_SECOND_REG:8652,8652 FLOAT_REGS:8652,8652 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:7004,7004 MEM:3244
  a5(r122,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:416
  a6(r120,l0) costs: AREG:1352,1352 DREG:1352,1352 CREG:1352,1352 BREG:1352,1352 SIREG:1352,1352 DIREG:1352,1352 AD_REGS:1352,1352 CLOBBERED_REGS:1352,1352 Q_REGS:1352,1352 NON_Q_REGS:1352,1352 LEGACY_REGS:1352,1352 GENERAL_REGS:1352,1352 FP_TOP_REG:2184,2184 FP_SECOND_REG:2184,2184 FLOAT_REGS:2184,2184 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:1768,1768 MEM:806
  a7(r129,l0) costs: AREG:7358,7358 DREG:7358,7358 CREG:7358,7358 BREG:7358,7358 SIREG:7358,7358 DIREG:7358,7358 AD_REGS:7358,7358 CLOBBERED_REGS:7358,7358 Q_REGS:7358,7358 NON_Q_REGS:7358,7358 LEGACY_REGS:7358,7358 GENERAL_REGS:7358,7358 FP_TOP_REG:11886,11886 FP_SECOND_REG:11886,11886 FLOAT_REGS:11886,11886 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:9622,9622 MEM:4052
  a8(r71,l0) costs: AREG:5850,5850 DREG:5850,5850 CREG:5850,5850 BREG:5850,5850 SIREG:5850,5850 DIREG:5850,5850 AD_REGS:5850,5850 CLOBBERED_REGS:5850,5850 Q_REGS:5850,5850 NON_Q_REGS:5850,5850 LEGACY_REGS:5850,5850 GENERAL_REGS:5850,5850 FP_TOP_REG:9450,9450 FP_SECOND_REG:9450,9450 FLOAT_REGS:9450,9450 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:7650,7650 MEM:3240
  a9(r118,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:720
  a10(r116,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:884,884 MEM:390
  a11(r114,l0) costs: AREG:2028,2028 DREG:2028,2028 CREG:2028,2028 BREG:2028,2028 SIREG:2028,2028 DIREG:2028,2028 AD_REGS:2028,2028 CLOBBERED_REGS:2028,2028 Q_REGS:2028,2028 NON_Q_REGS:2028,2028 LEGACY_REGS:2028,2028 GENERAL_REGS:2028,2028 FP_TOP_REG:3276,3276 FP_SECOND_REG:3276,3276 FLOAT_REGS:3276,3276 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MEM:1196
  a12(r59,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a13(r60,l0) costs: AREG:5356,5356 DREG:5356,5356 CREG:5356,5356 BREG:5356,5356 SIREG:5356,5356 DIREG:5356,5356 AD_REGS:5356,5356 CLOBBERED_REGS:5356,5356 Q_REGS:5356,5356 NON_Q_REGS:5356,5356 LEGACY_REGS:5356,5356 GENERAL_REGS:5356,5356 FP_TOP_REG:8652,8652 FP_SECOND_REG:8652,8652 FLOAT_REGS:8652,8652 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:7004,7004 MEM:3244
  a14(r111,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:416
  a15(r109,l0) costs: AREG:1352,1352 DREG:1352,1352 CREG:1352,1352 BREG:1352,1352 SIREG:1352,1352 DIREG:1352,1352 AD_REGS:1352,1352 CLOBBERED_REGS:1352,1352 Q_REGS:1352,1352 NON_Q_REGS:1352,1352 LEGACY_REGS:1352,1352 GENERAL_REGS:1352,1352 FP_TOP_REG:2184,2184 FP_SECOND_REG:2184,2184 FLOAT_REGS:2184,2184 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:1768,1768 MEM:806
  a16(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:720
  a17(r105,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:884,884 MEM:390
  a18(r103,l0) costs: AREG:2028,2028 DREG:2028,2028 CREG:2028,2028 BREG:2028,2028 SIREG:2028,2028 DIREG:2028,2028 AD_REGS:2028,2028 CLOBBERED_REGS:2028,2028 Q_REGS:2028,2028 NON_Q_REGS:2028,2028 LEGACY_REGS:2028,2028 GENERAL_REGS:2028,2028 FP_TOP_REG:3276,3276 FP_SECOND_REG:3276,3276 FLOAT_REGS:3276,3276 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MEM:1196
  a19(r61,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a20(r62,l0) costs: AREG:5356,5356 DREG:5356,5356 CREG:5356,5356 BREG:5356,5356 SIREG:5356,5356 DIREG:5356,5356 AD_REGS:5356,5356 CLOBBERED_REGS:5356,5356 Q_REGS:5356,5356 NON_Q_REGS:5356,5356 LEGACY_REGS:5356,5356 GENERAL_REGS:5356,5356 FP_TOP_REG:8652,8652 FP_SECOND_REG:8652,8652 FLOAT_REGS:8652,8652 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:7004,7004 MEM:3244
  a21(r100,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:416
  a22(r98,l0) costs: AREG:1352,1352 DREG:1352,1352 CREG:1352,1352 BREG:1352,1352 SIREG:1352,1352 DIREG:1352,1352 AD_REGS:1352,1352 CLOBBERED_REGS:1352,1352 Q_REGS:1352,1352 NON_Q_REGS:1352,1352 LEGACY_REGS:1352,1352 GENERAL_REGS:1352,1352 FP_TOP_REG:2184,2184 FP_SECOND_REG:2184,2184 FLOAT_REGS:2184,2184 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:1768,1768 MEM:806
  a23(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:720
  a24(r91,l0) costs: AREG:2028,2028 DREG:2028,2028 CREG:2028,2028 BREG:2028,2028 SIREG:2028,2028 DIREG:2028,2028 AD_REGS:2028,2028 CLOBBERED_REGS:2028,2028 Q_REGS:2028,2028 NON_Q_REGS:2028,2028 LEGACY_REGS:2028,2028 GENERAL_REGS:2028,2028 FP_TOP_REG:3276,3276 FP_SECOND_REG:3276,3276 FLOAT_REGS:3276,3276 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MEM:1196
  a25(r63,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:390
  a26(r64,l0) costs: AREG:5356,5356 DREG:5356,5356 CREG:5356,5356 BREG:5356,5356 SIREG:5356,5356 DIREG:5356,5356 AD_REGS:5356,5356 CLOBBERED_REGS:5356,5356 Q_REGS:5356,5356 NON_Q_REGS:5356,5356 LEGACY_REGS:5356,5356 GENERAL_REGS:5356,5356 FP_TOP_REG:8652,8652 FP_SECOND_REG:8652,8652 FLOAT_REGS:8652,8652 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:7004,7004 MEM:3244
  a27(r88,l0) costs: AREG:676,676 DREG:676,676 CREG:676,676 BREG:676,676 SIREG:676,676 DIREG:676,676 AD_REGS:676,676 CLOBBERED_REGS:676,676 Q_REGS:676,676 NON_Q_REGS:676,676 LEGACY_REGS:676,676 GENERAL_REGS:676,676 FP_TOP_REG:1092,1092 FP_SECOND_REG:1092,1092 FLOAT_REGS:1092,1092 SSE_FIRST_REG:-26,-26 SSE_REGS:0,0 MEM:416
  a28(r86,l0) costs: AREG:1352,1352 DREG:1352,1352 CREG:1352,1352 BREG:1352,1352 SIREG:1352,1352 DIREG:1352,1352 AD_REGS:1352,1352 CLOBBERED_REGS:1352,1352 Q_REGS:1352,1352 NON_Q_REGS:1352,1352 LEGACY_REGS:1352,1352 GENERAL_REGS:1352,1352 FP_TOP_REG:2184,2184 FP_SECOND_REG:2184,2184 FLOAT_REGS:2184,2184 SSE_FIRST_REG:0,0 SSE_REGS:0,0 MMX_REGS:1768,1768 MEM:806
  a29(r84,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:720
  a30(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:954
  a31(r79,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2340,2340 MEM:720
  a32(r74,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-90,-90 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3510,15340 SSE_REGS:3510,15340 MMX_REGS:3510,15340 MEM:990
  a33(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1170,36660 SSE_REGS:1170,36660 MMX_REGS:1170,36660 MEM:360
  a34(r73,l0) costs: AREG:0,1820 DREG:0,1820 CREG:0,1820 BREG:0,1820 SIREG:0,1820 DIREG:-90,1730 AD_REGS:0,1820 CLOBBERED_REGS:0,1820 Q_REGS:0,1820 NON_Q_REGS:0,1820 LEGACY_REGS:0,1820 GENERAL_REGS:0,1820 MEM:360
  a35(r68,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:35490,35490 SSE_REGS:35490,35490 MMX_REGS:35490,35490 MEM:8190
  a36(r73,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 MEM:10010
  a37(r74,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11830,11830 SSE_REGS:11830,11830 MMX_REGS:11830,11830 MEM:2730
  a38(r75,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:35490,35490 SSE_REGS:35490,35490 MMX_REGS:35490,35490 MEM:10920
  a39(r67,l1) costs: AREG:1820,1820 DREG:1820,1820 CREG:1820,1820 BREG:1820,1820 SIREG:1820,1820 DIREG:1820,1820 AD_REGS:1820,1820 CLOBBERED_REGS:1820,1820 Q_REGS:1820,1820 NON_Q_REGS:1820,1820 LEGACY_REGS:1820,1820 GENERAL_REGS:1820,1820 SSE_FIRST_REG:25480,25480 SSE_REGS:25480,25480 MMX_REGS:25480,25480 MEM:7280

   Insn 197(l0): point = 0
   Insn 191(l0): point = 2
   Insn 179(l0): point = 5
   Insn 178(l0): point = 7
   Insn 177(l0): point = 9
   Insn 175(l0): point = 11
   Insn 174(l0): point = 13
   Insn 172(l0): point = 15
   Insn 171(l0): point = 17
   Insn 170(l0): point = 19
   Insn 169(l0): point = 21
   Insn 168(l0): point = 23
   Insn 167(l0): point = 25
   Insn 162(l0): point = 28
   Insn 161(l0): point = 30
   Insn 158(l0): point = 32
   Insn 157(l0): point = 34
   Insn 156(l0): point = 36
   Insn 148(l0): point = 39
   Insn 147(l0): point = 41
   Insn 146(l0): point = 43
   Insn 144(l0): point = 45
   Insn 143(l0): point = 47
   Insn 141(l0): point = 49
   Insn 140(l0): point = 51
   Insn 139(l0): point = 53
   Insn 138(l0): point = 55
   Insn 137(l0): point = 57
   Insn 136(l0): point = 59
   Insn 131(l0): point = 62
   Insn 130(l0): point = 64
   Insn 127(l0): point = 66
   Insn 126(l0): point = 68
   Insn 125(l0): point = 70
   Insn 117(l0): point = 73
   Insn 116(l0): point = 75
   Insn 115(l0): point = 77
   Insn 113(l0): point = 79
   Insn 112(l0): point = 81
   Insn 110(l0): point = 83
   Insn 109(l0): point = 85
   Insn 108(l0): point = 87
   Insn 107(l0): point = 89
   Insn 106(l0): point = 91
   Insn 105(l0): point = 93
   Insn 100(l0): point = 96
   Insn 99(l0): point = 98
   Insn 96(l0): point = 100
   Insn 95(l0): point = 102
   Insn 94(l0): point = 104
   Insn 86(l0): point = 107
   Insn 84(l0): point = 109
   Insn 83(l0): point = 111
   Insn 81(l0): point = 113
   Insn 80(l0): point = 115
   Insn 78(l0): point = 117
   Insn 77(l0): point = 119
   Insn 76(l0): point = 121
   Insn 75(l0): point = 123
   Insn 74(l0): point = 125
   Insn 73(l0): point = 127
   Insn 66(l0): point = 130
   Insn 65(l0): point = 132
   Insn 68(l0): point = 134
   Insn 64(l0): point = 136
   Insn 62(l0): point = 138
   Insn 61(l0): point = 140
   Insn 60(l0): point = 142
   Insn 50(l0): point = 144
   Insn 47(l0): point = 146
   Insn 42(l0): point = 149
   Insn 16(l0): point = 152
   Insn 15(l0): point = 154
   Insn 18(l0): point = 156
   Insn 23(l0): point = 158
   Insn 11(l0): point = 160
   Insn 10(l0): point = 162
   Insn 9(l0): point = 164
   Insn 8(l0): point = 166
   Insn 4(l0): point = 168
   Insn 3(l0): point = 170
   Insn 40(l1): point = 173
   Insn 39(l1): point = 175
   Insn 34(l1): point = 177
   Insn 33(l1): point = 179
   Insn 29(l1): point = 181
   Insn 27(l1): point = 183
   Insn 25(l1): point = 185
 a0(r69): [130..134] [3..109]
 a1(r127): [6..7]
 a2(r125): [8..13]
 a3(r70): [12..15]
 a4(r66): [14..34]
 a5(r122): [20..21]
 a6(r120): [22..25]
 a7(r129): [31..136]
 a8(r71): [33..144]
 a9(r118): [35..36]
 a10(r116): [40..41]
 a11(r114): [42..47]
 a12(r59): [46..49]
 a13(r60): [48..68]
 a14(r111): [54..55]
 a15(r109): [56..59]
 a16(r107): [69..70]
 a17(r105): [74..75]
 a18(r103): [76..81]
 a19(r61): [80..83]
 a20(r62): [82..102]
 a21(r100): [88..89]
 a22(r98): [90..93]
 a23(r96): [103..104]
 a24(r91): [110..115]
 a25(r63): [114..117]
 a26(r64): [116..140]
 a27(r88): [122..123]
 a28(r86): [124..127]
 a29(r84): [141..142]
 a30(r65): [152..156] [143..149]
 a31(r79): [145..146]
 a32(r74): [147..168]
 a33(r68): [152..158]
 a34(r73): [152..170]
 a35(r68): [173..187]
 a36(r73): [173..187]
 a37(r74): [173..187]
 a38(r75): [180..181]
 a39(r67): [182..185]
 Rebuilding regno allocno list for 75
 Rebuilding regno allocno list for 67
Compressing live ranges: from 188 to 78 - 41%
Ranges after the compression:
 a0(r69): [55..56] [0..45]
 a1(r127): [1..2]
 a2(r125): [3..5]
 a3(r70): [4..7]
 a4(r66): [6..14]
 a5(r122): [8..9]
 a6(r120): [10..11]
 a7(r129): [12..57]
 a8(r71): [13..62]
 a9(r118): [15..16]
 a10(r116): [17..18]
 a11(r114): [19..21]
 a12(r59): [20..23]
 a13(r60): [22..28]
 a14(r111): [24..25]
 a15(r109): [26..27]
 a16(r107): [29..30]
 a17(r105): [31..32]
 a18(r103): [33..35]
 a19(r61): [34..37]
 a20(r62): [36..42]
 a21(r100): [38..39]
 a22(r98): [40..41]
 a23(r96): [43..44]
 a24(r91): [46..48]
 a25(r63): [47..50]
 a26(r64): [49..58]
 a27(r88): [51..52]
 a28(r86): [53..54]
 a29(r84): [59..60]
 a30(r65): [67..68] [61..66]
 a31(r79): [63..64]
 a32(r74): [72..77] [65..70]
 a33(r68): [72..77] [67..69]
 a34(r73): [72..77] [67..71]
 a38(r75): [73..74]
 a39(r67): [75..76]
+++Allocating 264 bytes for conflict table (uncompressed size 320)
;; a0(r69,l0) conflicts: a1(r127,l0) a2(r125,l0) a3(r70,l0) a4(r66,l0) a5(r122,l0) a6(r120,l0) a7(r129,l0) a8(r71,l0) a10(r116,l0) a11(r114,l0) a12(r59,l0) a13(r60,l0) a14(r111,l0) a15(r109,l0) a17(r105,l0) a18(r103,l0) a19(r61,l0) a20(r62,l0) a21(r100,l0) a22(r98,l0) a26(r64,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21
;; a1(r127,l0) conflicts: a0(r69,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a2(r125,l0) conflicts: a0(r69,l0) a3(r70,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a3(r70,l0) conflicts: a0(r69,l0) a2(r125,l0) a4(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r66,l0) conflicts: a0(r69,l0) a3(r70,l0) a5(r122,l0) a6(r120,l0) a7(r129,l0) a8(r71,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21
;; a5(r122,l0) conflicts: a0(r69,l0) a4(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r120,l0) conflicts: a0(r69,l0) a4(r66,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a7(r129,l0) conflicts: a0(r69,l0) a4(r66,l0) a8(r71,l0) a10(r116,l0) a11(r114,l0) a12(r59,l0) a13(r60,l0) a14(r111,l0) a15(r109,l0) a17(r105,l0) a18(r103,l0) a19(r61,l0) a20(r62,l0) a21(r100,l0) a22(r98,l0) a24(r91,l0) a25(r63,l0) a26(r64,l0) a27(r88,l0) a28(r86,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21
;; a8(r71,l0) conflicts: a0(r69,l0) a4(r66,l0) a7(r129,l0) a10(r116,l0) a11(r114,l0) a12(r59,l0) a13(r60,l0) a14(r111,l0) a15(r109,l0) a17(r105,l0) a18(r103,l0) a19(r61,l0) a20(r62,l0) a21(r100,l0) a22(r98,l0) a24(r91,l0) a25(r63,l0) a26(r64,l0) a27(r88,l0) a28(r86,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21
;; a9(r118,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a10(r116,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a11(r114,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0) a12(r59,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a12(r59,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0) a11(r114,l0) a13(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a13(r60,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0) a12(r59,l0) a14(r111,l0) a15(r109,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21
;; a14(r111,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0) a13(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a15(r109,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0) a13(r60,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a16(r107,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a17(r105,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a18(r103,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0) a19(r61,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a19(r61,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0) a18(r103,l0) a20(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a20(r62,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0) a19(r61,l0) a21(r100,l0) a22(r98,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21
;; a21(r100,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0) a20(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a22(r98,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0) a20(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a23(r96,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a24(r91,l0) conflicts: a7(r129,l0) a8(r71,l0) a25(r63,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a25(r63,l0) conflicts: a7(r129,l0) a8(r71,l0) a24(r91,l0) a26(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a26(r64,l0) conflicts: a0(r69,l0) a7(r129,l0) a8(r71,l0) a25(r63,l0) a27(r88,l0) a28(r86,l0)
;;     total conflict hard regs: 21
;;     conflict hard regs: 21
;; a27(r88,l0) conflicts: a7(r129,l0) a8(r71,l0) a26(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a28(r86,l0) conflicts: a7(r129,l0) a8(r71,l0) a26(r64,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a29(r84,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a30(r65,l0) conflicts: a31(r79,l0) a32(r74,l0) a33(r68,l0) a34(r73,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a31(r79,l0) conflicts: a30(r65,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a32(r74,l0) conflicts: a30(r65,l0) a33(r68,l0) a34(r73,l0) a38(r75,l0) a39(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a33(r68,l0) conflicts: a30(r65,l0) a32(r74,l0) a34(r73,l0) a38(r75,l0) a39(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a34(r73,l0) conflicts: a30(r65,l0) a32(r74,l0) a33(r68,l0) a38(r75,l0) a39(r67,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4
;; a38(r75,l0) conflicts: a32(r74,l0) a33(r68,l0) a34(r73,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a39(r67,l0) conflicts: a32(r74,l0) a33(r68,l0) a34(r73,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a5(r122)<->a6(r120)@3:shuffle
  cp1:a2(r125)<->a4(r66)@3:shuffle
  cp2:a1(r127)<->a2(r125)@3:shuffle
  cp3:a4(r66)<->a9(r118)@11:shuffle
  cp4:a14(r111)<->a15(r109)@3:shuffle
  cp5:a11(r114)<->a13(r60)@3:shuffle
  cp6:a10(r116)<->a11(r114)@3:shuffle
  cp7:a13(r60)<->a16(r107)@11:shuffle
  cp8:a21(r100)<->a22(r98)@3:shuffle
  cp9:a18(r103)<->a20(r62)@3:shuffle
  cp10:a17(r105)<->a18(r103)@3:shuffle
  cp11:a20(r62)<->a23(r96)@11:shuffle
  cp12:a27(r88)<->a28(r86)@3:shuffle
  cp13:a24(r91)<->a26(r64)@3:shuffle
  cp14:a0(r69)<->a24(r91)@3:shuffle
  cp15:a31(r79)<->a32(r74)@11:shuffle
  cp16:a8(r71)<->a31(r79)@11:shuffle
  cp17:a29(r84)<->a30(r65)@11:shuffle
  cp18:a26(r64)<->a29(r84)@11:shuffle
  cp19:a38(r75)<->a39(r67)@113:shuffle
  regions=2, blocks=14, points=78
    allocnos=40, copies=20, conflicts=0, ranges=42

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 15 14 13 12 11 10 9 8 6 5 4 2
    all: 0r69 1r127 2r125 3r70 4r66 5r122 6r120 7r129 8r71 9r118 10r116 11r114 12r59 13r60 14r111 15r109 16r107 17r105 18r103 19r61 20r62 21r100 22r98 23r96 24r91 25r63 26r64 27r88 28r86 29r84 30r65 31r79 32r74 33r68 34r73 38r75 39r67
    modified regnos: 59 60 61 62 63 64 65 66 67 68 69 70 71 73 74 75 79 84 86 88 91 96 98 100 103 105 107 109 111 114 116 118 120 122 125 127 129
    border:
    Pressure: GENERAL_REGS=4 SSE_REGS=5
    Reg 69 of SSE_REGS has 1 regs less
    Reg 66 of SSE_REGS has 1 regs less
    Reg 129 of SSE_REGS has 1 regs less
    Reg 71 of SSE_REGS has 1 regs less
    Reg 60 of SSE_REGS has 1 regs less
    Reg 62 of SSE_REGS has 1 regs less
    Reg 64 of SSE_REGS has 1 regs less
    Reg 73 of GENERAL_REGS has 1 regs less
      Pushing a27(r88,l0)
      Pushing a25(r63,l0)
      Pushing a21(r100,l0)
      Pushing a19(r61,l0)
      Pushing a17(r105,l0)
      Pushing a14(r111,l0)
      Pushing a12(r59,l0)
      Pushing a10(r116,l0)
      Pushing a5(r122,l0)
      Pushing a3(r70,l0)
      Pushing a1(r127,l0)
      Pushing a28(r86,l0)
      Pushing a22(r98,l0)
      Pushing a15(r109,l0)
      Pushing a6(r120,l0)
      Pushing a24(r91,l0)
      Pushing a18(r103,l0)
      Pushing a11(r114,l0)
      Pushing a2(r125,l0)
      Pushing a26(r64,l0)
      Pushing a20(r62,l0)
      Pushing a13(r60,l0)
      Pushing a4(r66,l0)
      Pushing a0(r69,l0)
      Pushing a8(r71,l0)
      Pushing a7(r129,l0)
      Pushing a31(r79,l0)
      Pushing a29(r84,l0)
      Pushing a23(r96,l0)
      Pushing a16(r107,l0)
      Pushing a9(r118,l0)
      Pushing a30(r65,l0)
      Pushing a32(r74,l0)
      Pushing a39(r67,l0)
      Pushing a38(r75,l0)
      Pushing a33(r68,l0)
      Pushing a34(r73,l0)
      Popping a34(r73,l0)  -- assign reg 5
      Popping a33(r68,l0)  -- assign reg 0
      Popping a38(r75,l0)  -- assign reg 1
      Popping a39(r67,l0)  -- assign reg 1
      Popping a32(r74,l0)  -- assign reg 4
      Popping a30(r65,l0)  -- assign reg 1
      Popping a9(r118,l0)  -- assign reg 0
      Popping a16(r107,l0)  -- assign reg 0
      Popping a23(r96,l0)  -- assign reg 0
      Popping a29(r84,l0)  -- assign reg 1
      Popping a31(r79,l0)  -- assign reg 4
      Popping a7(r129,l0)  -- assign reg 22
      Popping a8(r71,l0)  -- assign reg 23
      Popping a0(r69,l0)  -- assign reg 24
      Popping a4(r66,l0)  -- assign reg 25
      Popping a13(r60,l0)  -- assign reg 25
      Popping a20(r62,l0)  -- assign reg 25
      Popping a26(r64,l0)  -- assign reg 25
      Popping a2(r125,l0)  -- assign reg 25
      Popping a11(r114,l0)  -- assign reg 25
      Popping a18(r103,l0)  -- assign reg 25
      Popping a24(r91,l0)  -- assign reg 24
      Popping a6(r120,l0)  -- assign reg 21
      Popping a15(r109,l0)  -- assign reg 21
      Popping a22(r98,l0)  -- assign reg 21
      Popping a28(r86,l0)  -- assign reg 21
      Popping a1(r127,l0)  -- assign reg 25
      Popping a3(r70,l0)  -- assign reg 21
      Popping a5(r122,l0)  -- assign reg 21
      Popping a10(r116,l0)  -- assign reg 25
      Popping a12(r59,l0)  -- assign reg 21
      Popping a14(r111,l0)  -- assign reg 21
      Popping a17(r105,l0)  -- assign reg 25
      Popping a19(r61,l0)  -- assign reg 21
      Popping a21(r100,l0)  -- assign reg 21
      Popping a25(r63,l0)  -- assign reg 21
      Popping a27(r88,l0)  -- assign reg 21
Disposition:
   12:r59  l0    21   13:r60  l0    25   19:r61  l0    21   20:r62  l0    25
   25:r63  l0    21   26:r64  l0    25   30:r65  l0     1    4:r66  l0    25
   39:r67  l0     1   33:r68  l0     0    0:r69  l0    24    3:r70  l0    21
    8:r71  l0    23   34:r73  l0     5   32:r74  l0     4   38:r75  l0     1
   31:r79  l0     4   29:r84  l0     1   28:r86  l0    21   27:r88  l0    21
   24:r91  l0    24   23:r96  l0     0   22:r98  l0    21   21:r100 l0    21
   18:r103 l0    25   17:r105 l0    25   16:r107 l0     0   15:r109 l0    21
   14:r111 l0    21   11:r114 l0    25   10:r116 l0    25    9:r118 l0     0
    6:r120 l0    21    5:r122 l0    21    2:r125 l0    25    1:r127 l0    25
    7:r129 l0    22
New iteration of spill/restore move
+++Costs: overall 6064, reg 6064, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 4, 7, dead_or_set: 5, 73
insn=4, live_throughout: 7, 73, dead_or_set: 4, 74
insn=8, live_throughout: 7, 73, 74, dead_or_set: 
insn=9, live_throughout: 7, 73, 74, dead_or_set: 
insn=10, live_throughout: 7, 73, 74, dead_or_set: 
insn=11, live_throughout: 7, 73, 74, dead_or_set: 
insn=13, live_throughout: 7, 73, 74, dead_or_set: 
insn=14, live_throughout: 7, 73, 74, dead_or_set: 
insn=23, live_throughout: 7, 73, 74, dead_or_set: 68
insn=18, live_throughout: 7, 68, 73, 74, dead_or_set: 65
insn=15, live_throughout: 7, 65, 68, 73, 74, dead_or_set: 
insn=16, live_throughout: 7, 65, 68, 73, 74, dead_or_set: 
insn=218, live_throughout: 7, 68, 73, 74, dead_or_set: 
insn=25, live_throughout: 7, 68, 73, 74, dead_or_set: 67
insn=26, live_throughout: 7, 67, 68, 73, 74, dead_or_set: 
insn=27, live_throughout: 7, 67, 68, 74, dead_or_set: 73
insn=28, live_throughout: 7, 67, 68, 73, 74, dead_or_set: 
insn=29, live_throughout: 7, 68, 73, 74, dead_or_set: 67, 75
insn=33, live_throughout: 7, 68, 73, 74, dead_or_set: 75
insn=34, live_throughout: 7, 73, 74, dead_or_set: 68
insn=36, live_throughout: 7, 68, 73, 74, dead_or_set: 
insn=37, live_throughout: 7, 68, 73, 74, dead_or_set: 
insn=39, live_throughout: 7, 68, 73, 74, dead_or_set: 
insn=40, live_throughout: 7, 68, 73, 74, dead_or_set: 
insn=42, live_throughout: 7, 74, dead_or_set: 65
insn=43, live_throughout: 7, 65, 74, dead_or_set: 
insn=45, live_throughout: 7, 65, 74, dead_or_set: 
insn=46, live_throughout: 7, 65, 74, dead_or_set: 
insn=47, live_throughout: 7, 65, dead_or_set: 74, 79
insn=50, live_throughout: 7, 65, dead_or_set: 71, 79
insn=60, live_throughout: 7, 71, dead_or_set: 65, 84
insn=61, live_throughout: 7, 71, dead_or_set: 64, 84
insn=62, live_throughout: 7, 71, dead_or_set: 64
insn=63, live_throughout: 7, 64, 71, dead_or_set: 
insn=64, live_throughout: 7, 64, 71, dead_or_set: 129
insn=68, live_throughout: 7, 64, 71, 129, dead_or_set: 69
insn=65, live_throughout: 7, 64, 69, 71, 129, dead_or_set: 
insn=66, live_throughout: 7, 64, 69, 71, 129, dead_or_set: 
insn=71, live_throughout: 7, 64, 71, 129, dead_or_set: 
insn=73, live_throughout: 7, 64, 71, 129, dead_or_set: 86
insn=74, live_throughout: 7, 64, 71, 129, dead_or_set: 86
insn=75, live_throughout: 7, 64, 71, 129, dead_or_set: 86, 88
insn=76, live_throughout: 7, 64, 71, 129, dead_or_set: 21, 88
insn=77, live_throughout: 7, 64, 71, 129, dead_or_set: 21
insn=78, live_throughout: 7, 64, 71, 129, dead_or_set: 21, 63
insn=79, live_throughout: 7, 63, 64, 71, 129, dead_or_set: 
insn=80, live_throughout: 7, 63, 71, 129, dead_or_set: 64, 91
insn=81, live_throughout: 7, 71, 129, dead_or_set: 63, 91
insn=83, live_throughout: 7, 71, 129, dead_or_set: 91
insn=84, live_throughout: 7, 71, 129, dead_or_set: 69, 91
insn=86, live_throughout: 7, 71, 129, dead_or_set: 69
insn=87, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=88, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=92, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=93, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=94, live_throughout: 7, 69, 71, 129, dead_or_set: 96
insn=95, live_throughout: 7, 69, 71, 129, dead_or_set: 62, 96
insn=96, live_throughout: 7, 69, 71, 129, dead_or_set: 62
insn=97, live_throughout: 7, 62, 69, 71, 129, dead_or_set: 
insn=99, live_throughout: 7, 62, 69, 71, 129, dead_or_set: 
insn=100, live_throughout: 7, 62, 69, 71, 129, dead_or_set: 
insn=210, live_throughout: 7, 62, 69, 71, 129, dead_or_set: 
insn=105, live_throughout: 7, 62, 69, 71, 129, dead_or_set: 98
insn=106, live_throughout: 7, 62, 69, 71, 129, dead_or_set: 98
insn=107, live_throughout: 7, 62, 69, 71, 129, dead_or_set: 98, 100
insn=108, live_throughout: 7, 62, 69, 71, 129, dead_or_set: 21, 100
insn=109, live_throughout: 7, 62, 69, 71, 129, dead_or_set: 21
insn=110, live_throughout: 7, 62, 69, 71, 129, dead_or_set: 21, 61
insn=111, live_throughout: 7, 61, 62, 69, 71, 129, dead_or_set: 
insn=112, live_throughout: 7, 61, 69, 71, 129, dead_or_set: 62, 103
insn=113, live_throughout: 7, 69, 71, 129, dead_or_set: 61, 103
insn=115, live_throughout: 7, 69, 71, 129, dead_or_set: 103
insn=116, live_throughout: 7, 69, 71, 129, dead_or_set: 103, 105
insn=117, live_throughout: 7, 71, 129, dead_or_set: 69, 105
insn=118, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=119, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=123, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=124, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=125, live_throughout: 7, 69, 71, 129, dead_or_set: 107
insn=126, live_throughout: 7, 69, 71, 129, dead_or_set: 60, 107
insn=127, live_throughout: 7, 69, 71, 129, dead_or_set: 60
insn=128, live_throughout: 7, 60, 69, 71, 129, dead_or_set: 
insn=130, live_throughout: 7, 60, 69, 71, 129, dead_or_set: 
insn=131, live_throughout: 7, 60, 69, 71, 129, dead_or_set: 
insn=211, live_throughout: 7, 60, 69, 71, 129, dead_or_set: 
insn=136, live_throughout: 7, 60, 69, 71, 129, dead_or_set: 109
insn=137, live_throughout: 7, 60, 69, 71, 129, dead_or_set: 109
insn=138, live_throughout: 7, 60, 69, 71, 129, dead_or_set: 109, 111
insn=139, live_throughout: 7, 60, 69, 71, 129, dead_or_set: 21, 111
insn=140, live_throughout: 7, 60, 69, 71, 129, dead_or_set: 21
insn=141, live_throughout: 7, 60, 69, 71, 129, dead_or_set: 21, 59
insn=142, live_throughout: 7, 59, 60, 69, 71, 129, dead_or_set: 
insn=143, live_throughout: 7, 59, 69, 71, 129, dead_or_set: 60, 114
insn=144, live_throughout: 7, 69, 71, 129, dead_or_set: 59, 114
insn=146, live_throughout: 7, 69, 71, 129, dead_or_set: 114
insn=147, live_throughout: 7, 69, 71, 129, dead_or_set: 114, 116
insn=148, live_throughout: 7, 71, 129, dead_or_set: 69, 116
insn=149, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=150, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=154, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=155, live_throughout: 7, 69, 71, 129, dead_or_set: 
insn=156, live_throughout: 7, 69, 71, 129, dead_or_set: 118
insn=157, live_throughout: 7, 69, 71, 129, dead_or_set: 66, 118
insn=158, live_throughout: 7, 69, 129, dead_or_set: 66, 71
insn=159, live_throughout: 7, 66, 69, 129, dead_or_set: 
insn=161, live_throughout: 7, 66, 69, dead_or_set: 129
insn=162, live_throughout: 7, 66, 69, dead_or_set: 
insn=212, live_throughout: 7, 66, 69, dead_or_set: 
insn=167, live_throughout: 7, 66, 69, dead_or_set: 120
insn=168, live_throughout: 7, 66, 69, dead_or_set: 120
insn=169, live_throughout: 7, 66, 69, dead_or_set: 120, 122
insn=170, live_throughout: 7, 66, 69, dead_or_set: 21, 122
insn=171, live_throughout: 7, 66, 69, dead_or_set: 21
insn=172, live_throughout: 7, 66, 69, dead_or_set: 21, 70
insn=173, live_throughout: 7, 66, 69, 70, dead_or_set: 
insn=174, live_throughout: 7, 69, 70, dead_or_set: 66, 125
insn=175, live_throughout: 7, 69, dead_or_set: 70, 125
insn=177, live_throughout: 7, 69, dead_or_set: 125
insn=178, live_throughout: 7, 69, dead_or_set: 125, 127
insn=179, live_throughout: 7, dead_or_set: 69, 127
insn=180, live_throughout: 7, 69, dead_or_set: 
insn=181, live_throughout: 7, 69, dead_or_set: 
insn=185, live_throughout: 7, 69, dead_or_set: 
insn=186, live_throughout: 7, 69, dead_or_set: 
insn=191, live_throughout: 7, dead_or_set: 21, 69
insn=197, live_throughout: 7, 21, dead_or_set: 
init_insns for 129: (insn_list:REG_DEP_TRUE 64 (nil))
changing reg in insn 141
changing reg in insn 144
changing reg in insn 142
changing reg in insn 127
changing reg in insn 126
changing reg in insn 127
changing reg in insn 137
changing reg in insn 143
changing reg in insn 130
changing reg in insn 142
changing reg in insn 128
changing reg in insn 137
changing reg in insn 130
changing reg in insn 110
changing reg in insn 113
changing reg in insn 111
changing reg in insn 96
changing reg in insn 95
changing reg in insn 96
changing reg in insn 106
changing reg in insn 112
changing reg in insn 99
changing reg in insn 111
changing reg in insn 97
changing reg in insn 106
changing reg in insn 99
changing reg in insn 78
changing reg in insn 81
changing reg in insn 79
changing reg in insn 62
changing reg in insn 61
changing reg in insn 62
changing reg in insn 74
changing reg in insn 80
changing reg in insn 65
changing reg in insn 79
changing reg in insn 63
changing reg in insn 74
changing reg in insn 65
changing reg in insn 42
changing reg in insn 18
changing reg in insn 60
changing reg in insn 158
changing reg in insn 157
changing reg in insn 158
changing reg in insn 168
changing reg in insn 174
changing reg in insn 161
changing reg in insn 173
changing reg in insn 159
changing reg in insn 168
changing reg in insn 161
changing reg in insn 25
changing reg in insn 29
changing reg in insn 26
changing reg in insn 34
changing reg in insn 23
changing reg in insn 39
changing reg in insn 36
changing reg in insn 34
changing reg in insn 86
changing reg in insn 84
changing reg in insn 68
changing reg in insn 179
changing reg in insn 148
changing reg in insn 117
changing reg in insn 86
changing reg in insn 191
changing reg in insn 186
changing reg in insn 180
changing reg in insn 179
changing reg in insn 155
changing reg in insn 149
changing reg in insn 148
changing reg in insn 124
changing reg in insn 118
changing reg in insn 117
changing reg in insn 93
changing reg in insn 87
changing reg in insn 172
changing reg in insn 175
changing reg in insn 173
changing reg in insn 50
changing reg in insn 62
changing reg in insn 96
changing reg in insn 127
changing reg in insn 158
changing reg in insn 27
changing reg in insn 3
changing reg in insn 37
changing reg in insn 28
changing reg in insn 27
changing reg in insn 14
changing reg in insn 4
changing reg in insn 47
changing reg in insn 39
changing reg in insn 15
changing reg in insn 29
changing reg in insn 33
changing reg in insn 33
changing reg in insn 47
changing reg in insn 50
changing reg in insn 60
changing reg in insn 61
changing reg in insn 74
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 81
changing reg in insn 80
changing reg in insn 83
changing reg in insn 81
changing reg in insn 83
changing reg in insn 84
changing reg in insn 94
changing reg in insn 95
changing reg in insn 106
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 107
changing reg in insn 108
changing reg in insn 113
changing reg in insn 112
changing reg in insn 115
changing reg in insn 113
changing reg in insn 115
changing reg in insn 116
changing reg in insn 116
changing reg in insn 117
changing reg in insn 125
changing reg in insn 126
changing reg in insn 137
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 138
changing reg in insn 139
changing reg in insn 144
changing reg in insn 143
changing reg in insn 146
changing reg in insn 144
changing reg in insn 146
changing reg in insn 147
changing reg in insn 147
changing reg in insn 148
changing reg in insn 156
changing reg in insn 157
changing reg in insn 168
changing reg in insn 167
changing reg in insn 168
changing reg in insn 169
changing reg in insn 169
changing reg in insn 170
changing reg in insn 175
changing reg in insn 174
changing reg in insn 177
changing reg in insn 175
changing reg in insn 177
changing reg in insn 178
changing reg in insn 178
changing reg in insn 179
changing reg in insn 64
changing reg in insn 86
changing reg in insn 68
changing reg in insn 161
changing reg in insn 130
changing reg in insn 99
changing reg in insn 65
23 uses a new slot
22 uses a new slot
24 uses a new slot
25 uses a new slot
23 uses a slot from prev iteration
22 uses a slot from prev iteration
24 uses a slot from prev iteration
25 uses a slot from prev iteration
Spilling for insn 8.
Spilling for insn 9.
Spilling for insn 10.
Spilling for insn 11.
Spilling for insn 25.
Spilling for insn 33.
Spilling for insn 42.
Spilling for insn 64.
Spilling for insn 73.
Spilling for insn 226.
Spilling for insn 227.
Spilling for insn 228.
Spilling for insn 229.
Spilling for insn 83.
Spilling for insn 230.
Spilling for insn 231.
Spilling for insn 94.
Spilling for insn 105.
Spilling for insn 232.
Spilling for insn 233.
Spilling for insn 234.
Spilling for insn 235.
Spilling for insn 236.
Spilling for insn 115.
Spilling for insn 237.
Spilling for insn 239.
Spilling for insn 238.
Spilling for insn 125.
Spilling for insn 136.
Spilling for insn 240.
Spilling for insn 241.
Spilling for insn 242.
Spilling for insn 243.
Spilling for insn 244.
Spilling for insn 146.
Spilling for insn 245.
Spilling for insn 247.
Spilling for insn 246.
Spilling for insn 156.
Spilling for insn 167.
Spilling for insn 248.
Spilling for insn 249.
Spilling for insn 250.
Spilling for insn 177.
Spilling for insn 251.

Reloads for insn # 8
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 64 [0x40])) [0 counts+0 S1 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 64 [0x40])) [0 counts+0 S1 A128])

Reloads for insn # 9
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 65 [0x41])) [0 counts+1 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 65 [0x41])) [0 counts+1 S1 A8])

Reloads for insn # 10
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 66 [0x42])) [0 counts+2 S1 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 66 [0x42])) [0 counts+2 S1 A16])

Reloads for insn # 11
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 67 [0x43])) [0 counts+3 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 67 [0x43])) [0 counts+3 S1 A8])

Reloads for insn # 25
Reload 0: reload_in (SI) = (reg:SI 5 di)
	reload_out (SI) = (reg/v:SI 1 dx [orig:67 c ] [67])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0), can't combine
	reload_in_reg: (subreg:SI (reg/v:DI 5 di [orig:73 kmer ] [73]) 0)
	reload_out_reg: (reg/v:SI 1 dx [orig:67 c ] [67])
	reload_reg_rtx: (reg/v:SI 1 dx [orig:67 c ] [67])

Reloads for insn # 33
Reload 0: reload_in (QI) = (mem/s/j:QI (plus:DI (plus:DI (reg/f:DI 7 sp)
                                                            (reg:DI 1 dx [orig:75 c ] [75]))
                                                        (const_int 64 [0x40])) [0 counts S1 A8])
	reload_out (QI) = (mem/s/j:QI (plus:DI (plus:DI (reg/f:DI 7 sp)
                                                            (reg:DI 1 dx [orig:75 c ] [75]))
                                                        (const_int 64 [0x40])) [0 counts S1 A8])
	Q_REGS, RELOAD_OTHER (opnum = 0), optional
	reload_in_reg: (mem/s/j:QI (plus:DI (plus:DI (reg/f:DI 7 sp)
                                                            (reg:DI 1 dx [orig:75 c ] [75]))
                                                        (const_int 64 [0x40])) [0 counts S1 A8])
	reload_out_reg: (mem/s/j:QI (plus:DI (plus:DI (reg/f:DI 7 sp)
                                                            (reg:DI 1 dx [orig:75 c ] [75]))
                                                        (const_int 64 [0x40])) [0 counts S1 A8])

Reloads for insn # 42
Reload 0: reload_in (QI) = (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 64 [0x40])) [0 counts+0 S1 A128])
	Q_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 64 [0x40])) [0 counts+0 S1 A128])

Reloads for insn # 64
Reload 0: reload_in (SF) = (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [95 S4 A32])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [95 S4 A32])

Reloads for insn # 73
Reload 0: reload_in (SF) = (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])

Reloads for insn # 226
Reload 0: reload_out (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])

Reloads for insn # 227
Reload 0: reload_out (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])

Reloads for insn # 228
Reload 0: reload_out (SF) = (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])

Reloads for insn # 229
Reload 0: reload_in (SF) = (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])

Reloads for insn # 83
Reload 0: reload_in (DF) = (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 2), optional
	reload_in_reg: (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64])

Reloads for insn # 230
Reload 0: reload_in (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])

Reloads for insn # 231
Reload 0: reload_in (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])

Reloads for insn # 94
Reload 0: reload_in (QI) = (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 65 [0x41])) [0 counts+1 S1 A8])
	Q_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 65 [0x41])) [0 counts+1 S1 A8])

Reloads for insn # 105
Reload 0: reload_in (SF) = (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])

Reloads for insn # 232
Reload 0: reload_out (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])

Reloads for insn # 233
Reload 0: reload_out (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])

Reloads for insn # 234
Reload 0: reload_out (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])

Reloads for insn # 235
Reload 0: reload_out (SF) = (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])

Reloads for insn # 236
Reload 0: reload_in (SF) = (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])

Reloads for insn # 115
Reload 0: reload_in (DF) = (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 2), optional
	reload_in_reg: (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64])

Reloads for insn # 237
Reload 0: reload_in (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])

Reloads for insn # 239
Reload 0: reload_in (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])

Reloads for insn # 238
Reload 0: reload_in (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])

Reloads for insn # 125
Reload 0: reload_in (QI) = (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 66 [0x42])) [0 counts+2 S1 A16])
	Q_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 66 [0x42])) [0 counts+2 S1 A16])

Reloads for insn # 136
Reload 0: reload_in (SF) = (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])

Reloads for insn # 240
Reload 0: reload_out (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])

Reloads for insn # 241
Reload 0: reload_out (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])

Reloads for insn # 242
Reload 0: reload_out (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])

Reloads for insn # 243
Reload 0: reload_out (SF) = (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])

Reloads for insn # 244
Reload 0: reload_in (SF) = (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])

Reloads for insn # 146
Reload 0: reload_in (DF) = (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 2), optional
	reload_in_reg: (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64])

Reloads for insn # 245
Reload 0: reload_in (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])

Reloads for insn # 247
Reload 0: reload_in (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 48 [0x30])) [97 S4 A128])

Reloads for insn # 246
Reload 0: reload_in (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 32 [0x20])) [97 S4 A128])

Reloads for insn # 156
Reload 0: reload_in (QI) = (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 67 [0x43])) [0 counts+3 S1 A8])
	Q_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 67 [0x43])) [0 counts+3 S1 A8])

Reloads for insn # 167
Reload 0: reload_in (SF) = (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])

Reloads for insn # 248
Reload 0: reload_out (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])

Reloads for insn # 249
Reload 0: reload_out (SF) = (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])

Reloads for insn # 250
Reload 0: reload_in (SF) = (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])

Reloads for insn # 177
Reload 0: reload_in (DF) = (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 2), optional
	reload_in_reg: (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64])

Reloads for insn # 251
Reload 0: reload_in (SF) = (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])
	SSE_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                                                        (const_int 16 [0x10])) [97 S4 A128])
deleting insn with uid = 3.
deleting insn with uid = 4.
deleting insn with uid = 76.
deleting insn with uid = 78.
deleting insn with uid = 108.
deleting insn with uid = 110.
deleting insn with uid = 139.
deleting insn with uid = 141.
deleting insn with uid = 170.
deleting insn with uid = 172.


try_optimize_cfg iteration 1

deleting insn with uid = 71.
Deleted label in block 6.
deleting insn with uid = 210.
Deleted label in block 8.
deleting insn with uid = 211.
Deleted label in block 10.
deleting insn with uid = 212.
Deleted label in block 12.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 109.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 171.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 19 count 22 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 19 count 26 (  1.9)


float compute_entropy(kmer_int_type_t, unsigned int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 7 [sp] 21 [xmm0]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4]
;;  ref usage 	r0={10d,6u} r1={11d,7u} r2={5d} r4={6d,4u} r5={6d,5u} r7={1d,57u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={14d,6u} r18={4d} r19={4d} r21={18d,22u} r22={9d,9u} r23={9d,7u} r24={17d,19u} r25={29d,36u,8d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={5d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r93={1d} 
;;    total ref usage 460{273d,178u,9e} in 133{129 regular + 4 call} insns.
(note 2 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 sequenceUtil.cpp:338 (set (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 counts+0 S1 A128])
        (const_int 0 [0x0])) 62 {*movqi_1} (nil))

(insn 9 8 10 2 sequenceUtil.cpp:338 (set (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 65 [0x41])) [0 counts+1 S1 A8])
        (const_int 0 [0x0])) 62 {*movqi_1} (nil))

(insn 10 9 11 2 sequenceUtil.cpp:338 (set (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 66 [0x42])) [0 counts+2 S1 A16])
        (const_int 0 [0x0])) 62 {*movqi_1} (nil))

(insn 11 10 13 2 sequenceUtil.cpp:338 (set (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 67 [0x43])) [0 counts+3 S1 A8])
        (const_int 0 [0x0])) 62 {*movqi_1} (nil))

(debug_insn 13 11 14 2 (var_location:SI i (const_int 0 [0x0])) -1 (nil))

(debug_insn 14 13 23 2 (var_location:DI kmer (reg/v:DI 5 di [orig:73 kmer ] [73])) -1 (nil))

(insn 23 14 18 2 sequenceUtil.cpp:340 (set (reg/v:SI 0 ax [orig:68 i ] [68])
        (const_int 0 [0x0])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 18 23 15 2 sequenceUtil.cpp:340 (set (reg:QI 1 dx [orig:65 prephitmp.698 ] [65])
        (const_int 0 [0x0])) 62 {*movqi_1} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 15 18 16 2 sequenceUtil.cpp:340 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 4 si [orig:74 kmer_length ] [74])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn 16 15 218 2 sequenceUtil.cpp:340 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 43)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]


;; Succ edge  5 [9.0%] 
;; Succ edge  3 [91.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  3 [91.0%]  (dfs_back)
;; Pred edge  2 [91.0%]  (fallthru)
(code_label 218 16 217 3 60 "" [1 uses])

(note 217 218 252 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 252 217 25 3 sequenceUtil.cpp:342 (set (reg/v:SI 1 dx [orig:67 c ] [67])
        (reg:SI 5 di)) 47 {*movsi_1} (nil))

(insn 25 252 26 3 sequenceUtil.cpp:342 (parallel [
            (set (reg/v:SI 1 dx [orig:67 c ] [67])
                (and:SI (reg/v:SI 1 dx [orig:67 c ] [67])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 377 {*andsi_1} (nil))

(debug_insn 26 25 27 3 sequenceUtil.cpp:342 (var_location:SI c (reg/v:SI 1 dx [orig:67 c ] [67])) -1 (nil))

(insn 27 26 28 3 sequenceUtil.cpp:343 (parallel [
            (set (reg/v:DI 5 di [orig:73 kmer ] [73])
                (lshiftrt:DI (reg/v:DI 5 di [orig:73 kmer ] [73])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 550 {*lshrdi3_1_rex64} (nil))

(debug_insn 28 27 29 3 sequenceUtil.cpp:343 (var_location:DI kmer (reg/v:DI 5 di [orig:73 kmer ] [73])) -1 (nil))

(insn 29 28 31 3 sequenceUtil.cpp:344 (set (reg:DI 1 dx [orig:75 c ] [75])
        (sign_extend:DI (reg/v:SI 1 dx [orig:67 c ] [67]))) 127 {extendsidi2_rex64} (nil))

(note 31 29 32 3 NOTE_INSN_DELETED)

(note 32 31 33 3 NOTE_INSN_DELETED)

(insn 33 32 34 3 sequenceUtil.cpp:344 (parallel [
            (set (mem/s/j:QI (plus:DI (plus:DI (reg/f:DI 7 sp)
                            (reg:DI 1 dx [orig:75 c ] [75]))
                        (const_int 64 [0x40])) [0 counts S1 A8])
                (plus:QI (mem/s/j:QI (plus:DI (plus:DI (reg/f:DI 7 sp)
                                (reg:DI 1 dx [orig:75 c ] [75]))
                            (const_int 64 [0x40])) [0 counts S1 A8])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 300 {*addqi_1_lea} (nil))

(insn 34 33 36 3 sequenceUtil.cpp:340 (parallel [
            (set (reg/v:SI 0 ax [orig:68 i ] [68])
                (plus:SI (reg/v:SI 0 ax [orig:68 i ] [68])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 286 {*addsi_1} (nil))

(debug_insn 36 34 37 3 (var_location:SI i (reg/v:SI 0 ax [orig:68 i ] [68])) -1 (nil))

(debug_insn 37 36 39 3 (var_location:DI kmer (reg/v:DI 5 di [orig:73 kmer ] [73])) -1 (nil))

(insn 39 37 40 3 sequenceUtil.cpp:340 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 4 si [orig:74 kmer_length ] [74])
            (reg/v:SI 0 ax [orig:68 i ] [68]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn 40 39 41 3 sequenceUtil.cpp:340 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 218)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 3 -> ( 3 4)
;; lr  out 	 0 [ax] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 4 [si] 5 [di] 7 [sp]


;; Succ edge  3 [91.0%]  (dfs_back)
;; Succ edge  4 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 1 [dx]
;; live  kill	

;; Pred edge  3 [9.0%]  (fallthru,loop_exit)
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 4 sequenceUtil.cpp:340 (set (reg:QI 1 dx [orig:65 prephitmp.698 ] [65])
        (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 counts+0 S1 A128])) 62 {*movqi_1} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 1 [dx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 4 [si] 7 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; live  in  	 1 [dx] 4 [si] 7 [sp]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  2 [9.0%] 
(code_label 43 42 44 5 44 "" [1 uses])

(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(debug_insn 45 44 46 5 (var_location:SI i (const_int 0 [0x0])) -1 (nil))

(debug_insn 46 45 47 5 (var_location:SF entropy (const_double:SF 0.0 [0x0.0p+0])) -1 (nil))

(insn 47 46 50 5 sequenceUtil.cpp:351 (set (reg:DI 4 si [orig:79 kmer_length ] [79])
        (zero_extend:DI (reg/v:SI 4 si [orig:74 kmer_length ] [74]))) 123 {zero_extendsidi2_rex64} (nil))

(insn 50 47 60 5 sequenceUtil.cpp:351 (set (reg:SF 23 xmm2 [orig:71 D.32917 ] [71])
        (float:SF (reg:DI 4 si [orig:79 kmer_length ] [79]))) 219 {*floatdisf2_sse_interunit} (nil))

(insn 60 50 61 5 sequenceUtil.cpp:351 (set (reg:SI 1 dx [orig:84 prephitmp.698 ] [84])
        (sign_extend:SI (reg:QI 1 dx [orig:65 prephitmp.698 ] [65]))) 133 {extendqisi2} (nil))

(insn 61 60 62 5 sequenceUtil.cpp:351 (set (reg/v:SF 25 xmm4 [orig:64 prob.718 ] [64])
        (float:SF (reg:SI 1 dx [orig:84 prephitmp.698 ] [84]))) 217 {*floatsisf2_sse_interunit} (nil))

(insn 62 61 63 5 sequenceUtil.cpp:351 (set (reg/v:SF 25 xmm4 [orig:64 prob.718 ] [64])
        (div:SF (reg/v:SF 25 xmm4 [orig:64 prob.718 ] [64])
            (reg:SF 23 xmm2 [orig:71 D.32917 ] [71]))) 760 {*fop_sf_1_sse} (nil))

(debug_insn 63 62 64 5 sequenceUtil.cpp:351 (var_location:SF prob (reg/v:SF 25 xmm4 [orig:64 prob.718 ] [64])) -1 (nil))

(insn 64 63 68 5 sequenceUtil.cpp:353 (set (reg:SF 22 xmm1 [129])
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [95 S4 A32])) 99 {*movsf_1} (expr_list:REG_EQUIV (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 68 64 65 5 sequenceUtil.cpp:353 (set (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])
        (reg:SF 22 xmm1 [129])) 99 {*movsf_1} (nil))

(insn 65 68 66 5 sequenceUtil.cpp:353 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:SF 25 xmm4 [orig:64 prob.718 ] [64])
            (reg:SF 22 xmm1 [129]))) 38 {*cmpfp_iu_sse} (expr_list:REG_EQUAL (compare:CCFPU (reg/v:SF 25 xmm4 [orig:64 prob.718 ] [64])
            (const_double:SF 0.0 [0x0.0p+0]))
        (nil)))

(jump_insn 66 65 72 5 sequenceUtil.cpp:353 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 88)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; live  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]


;; Succ edge  7 [71.0%] 
;; Succ edge  6 [29.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 25 [xmm4]
;; lr  use 	 7 [sp] 22 [xmm1] 23 [xmm2] 25 [xmm4]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 25 [xmm4]
;; live  gen 	 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; live  kill	

;; Pred edge  5 [29.0%]  (fallthru)
(note 72 66 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 6 sequenceUtil.cpp:354 (set (reg:SF 21 xmm0 [86])
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])) 99 {*movsf_1} (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 74 73 75 6 sequenceUtil.cpp:354 (set (reg:SF 21 xmm0 [86])
        (div:SF (reg:SF 21 xmm0 [86])
            (reg/v:SF 25 xmm4 [orig:64 prob.718 ] [64]))) 760 {*fop_sf_1_sse} (expr_list:REG_EQUAL (div:SF (const_double:SF 1.0e+0 [0x0.8p+1])
            (reg/v:SF 25 xmm4 [orig:64 prob.718 ] [64]))
        (nil)))

(insn 75 74 226 6 sequenceUtil.cpp:354 (set (reg:DF 21 xmm0 [88])
        (float_extend:DF (reg:SF 21 xmm0 [86]))) 136 {*extendsfdf2_sse} (nil))

(insn 226 75 227 6 sequenceUtil.cpp:354 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [97 S4 A128])
        (reg:SF 22 xmm1)) 99 {*movsf_1} (nil))

(insn 227 226 228 6 sequenceUtil.cpp:354 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [97 S4 A128])
        (reg:SF 23 xmm2)) 99 {*movsf_1} (nil))

(insn 228 227 77 6 sequenceUtil.cpp:354 (set (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
        (reg:SF 25 xmm4)) 99 {*movsf_1} (nil))

(call_insn 77 228 79 6 sequenceUtil.cpp:354 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("log") [flags 0x41]  <function_decl 0x7f9013e35c00 log>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(debug_insn 79 77 229 6 sequenceUtil.cpp:354 (var_location:SF val (float_truncate:SF (div:DF (mult:DF (float_extend:DF (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128]))
                (reg:DF 21 xmm0 [orig:63 temp.723 ] [63]))
            (const_double:DF 6.9314718055994528622676398299518041312694549560546875e-1 [0x0.b17217f7d1cf78p+0])))) -1 (nil))

(insn 229 79 80 6 sequenceUtil.cpp:355 (set (reg:SF 25 xmm4)
        (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])) 99 {*movsf_1} (nil))

(insn 80 229 81 6 sequenceUtil.cpp:355 (set (reg:DF 24 xmm3 [91])
        (float_extend:DF (reg/v:SF 25 xmm4 [orig:64 prob.718 ] [64]))) 136 {*extendsfdf2_sse} (nil))

(insn 81 80 82 6 sequenceUtil.cpp:355 (set (reg:DF 24 xmm3 [91])
        (mult:DF (reg:DF 24 xmm3 [91])
            (reg:DF 21 xmm0 [orig:63 temp.723 ] [63]))) 750 {*fop_df_comm_sse} (nil))

(note 82 81 83 6 NOTE_INSN_DELETED)

(insn 83 82 84 6 sequenceUtil.cpp:355 (set (reg:DF 24 xmm3 [91])
        (div:DF (reg:DF 24 xmm3 [91])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64]))) 761 {*fop_df_1_sse} (nil))

(insn 84 83 230 6 sequenceUtil.cpp:355 (set (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])
        (float_truncate:SF (reg:DF 24 xmm3 [91]))) 141 {*truncdfsf_fast_sse} (nil))

(insn 230 84 86 6 sequenceUtil.cpp:355 (set (reg:SF 22 xmm1)
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [97 S4 A128])) 99 {*movsf_1} (nil))

(insn 86 230 87 6 sequenceUtil.cpp:355 (set (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])
        (plus:SF (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])
            (reg:SF 22 xmm1 [129]))) 749 {*fop_sf_comm_sse} (expr_list:REG_EQUAL (plus:SF (reg:SF 93)
            (const_double:SF 0.0 [0x0.0p+0]))
        (nil)))

(debug_insn 87 86 231 6 sequenceUtil.cpp:355 (var_location:SF entropy (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])) -1 (nil))

(insn 231 87 88 6 sequenceUtil.cpp:355 (set (reg:SF 23 xmm2)
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [97 S4 A128])) 99 {*movsf_1} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]
;; live  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]
;; lr  use 	 7 [sp] 22 [xmm1] 23 [xmm2]
;; lr  def 	 0 [ax] 17 [flags] 25 [xmm4]
;; live  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]
;; live  gen 	 0 [ax] 17 [flags] 25 [xmm4]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [71.0%] 
(code_label 88 231 89 7 49 "" [1 uses])

(note 89 88 92 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(debug_insn 92 89 93 7 (var_location:SI i (const_int 1 [0x1])) -1 (nil))

(debug_insn 93 92 94 7 (var_location:SF entropy (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])) -1 (nil))

(insn 94 93 95 7 sequenceUtil.cpp:351 (set (reg:SI 0 ax [orig:96 counts+1 ] [96])
        (sign_extend:SI (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                    (const_int 65 [0x41])) [0 counts+1 S1 A8]))) 133 {extendqisi2} (nil))

(insn 95 94 96 7 sequenceUtil.cpp:351 (set (reg/v:SF 25 xmm4 [orig:62 prob.728 ] [62])
        (float:SF (reg:SI 0 ax [orig:96 counts+1 ] [96]))) 217 {*floatsisf2_sse_interunit} (nil))

(insn 96 95 97 7 sequenceUtil.cpp:351 (set (reg/v:SF 25 xmm4 [orig:62 prob.728 ] [62])
        (div:SF (reg/v:SF 25 xmm4 [orig:62 prob.728 ] [62])
            (reg:SF 23 xmm2 [orig:71 D.32917 ] [71]))) 760 {*fop_sf_1_sse} (nil))

(debug_insn 97 96 99 7 sequenceUtil.cpp:351 (var_location:SF prob (reg/v:SF 25 xmm4 [orig:62 prob.728 ] [62])) -1 (nil))

(insn 99 97 100 7 sequenceUtil.cpp:353 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:SF 25 xmm4 [orig:62 prob.728 ] [62])
            (reg:SF 22 xmm1 [129]))) 38 {*cmpfp_iu_sse} (expr_list:REG_EQUAL (compare:CCFPU (reg/v:SF 25 xmm4 [orig:62 prob.728 ] [62])
            (const_double:SF 0.0 [0x0.0p+0]))
        (nil)))

(jump_insn 100 99 104 7 sequenceUtil.cpp:353 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 119)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; live  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]


;; Succ edge  8 [29.0%]  (fallthru)
;; Succ edge  9 [71.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; lr  use 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; live  gen 	 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; live  kill	

;; Pred edge  7 [29.0%]  (fallthru)
(note 104 100 105 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 8 sequenceUtil.cpp:354 (set (reg:SF 21 xmm0 [98])
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])) 99 {*movsf_1} (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 106 105 107 8 sequenceUtil.cpp:354 (set (reg:SF 21 xmm0 [98])
        (div:SF (reg:SF 21 xmm0 [98])
            (reg/v:SF 25 xmm4 [orig:62 prob.728 ] [62]))) 760 {*fop_sf_1_sse} (expr_list:REG_EQUAL (div:SF (const_double:SF 1.0e+0 [0x0.8p+1])
            (reg/v:SF 25 xmm4 [orig:62 prob.728 ] [62]))
        (nil)))

(insn 107 106 232 8 sequenceUtil.cpp:354 (set (reg:DF 21 xmm0 [100])
        (float_extend:DF (reg:SF 21 xmm0 [98]))) 136 {*extendsfdf2_sse} (nil))

(insn 232 107 233 8 sequenceUtil.cpp:354 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [97 S4 A128])
        (reg:SF 22 xmm1)) 99 {*movsf_1} (nil))

(insn 233 232 234 8 sequenceUtil.cpp:354 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [97 S4 A128])
        (reg:SF 23 xmm2)) 99 {*movsf_1} (nil))

(insn 234 233 235 8 sequenceUtil.cpp:354 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [97 S4 A128])
        (reg:SF 24 xmm3)) 99 {*movsf_1} (nil))

(insn 235 234 109 8 sequenceUtil.cpp:354 (set (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
        (reg:SF 25 xmm4)) 99 {*movsf_1} (nil))

(call_insn 109 235 111 8 sequenceUtil.cpp:354 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("log") [flags 0x41]  <function_decl 0x7f9013e35c00 log>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(debug_insn 111 109 236 8 sequenceUtil.cpp:354 (var_location:SF val (float_truncate:SF (div:DF (mult:DF (float_extend:DF (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128]))
                (reg:DF 21 xmm0 [orig:61 temp.733 ] [61]))
            (const_double:DF 6.9314718055994528622676398299518041312694549560546875e-1 [0x0.b17217f7d1cf78p+0])))) -1 (nil))

(insn 236 111 112 8 sequenceUtil.cpp:355 (set (reg:SF 25 xmm4)
        (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])) 99 {*movsf_1} (nil))

(insn 112 236 113 8 sequenceUtil.cpp:355 (set (reg:DF 25 xmm4 [103])
        (float_extend:DF (reg/v:SF 25 xmm4 [orig:62 prob.728 ] [62]))) 136 {*extendsfdf2_sse} (nil))

(insn 113 112 114 8 sequenceUtil.cpp:355 (set (reg:DF 25 xmm4 [103])
        (mult:DF (reg:DF 25 xmm4 [103])
            (reg:DF 21 xmm0 [orig:61 temp.733 ] [61]))) 750 {*fop_df_comm_sse} (nil))

(note 114 113 115 8 NOTE_INSN_DELETED)

(insn 115 114 116 8 sequenceUtil.cpp:355 (set (reg:DF 25 xmm4 [103])
        (div:DF (reg:DF 25 xmm4 [103])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64]))) 761 {*fop_df_1_sse} (nil))

(insn 116 115 237 8 sequenceUtil.cpp:355 (set (reg:SF 25 xmm4 [105])
        (float_truncate:SF (reg:DF 25 xmm4 [103]))) 141 {*truncdfsf_fast_sse} (nil))

(insn 237 116 117 8 sequenceUtil.cpp:355 (set (reg:SF 24 xmm3)
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [97 S4 A128])) 99 {*movsf_1} (nil))

(insn 117 237 118 8 sequenceUtil.cpp:355 (set (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])
        (plus:SF (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])
            (reg:SF 25 xmm4 [105]))) 749 {*fop_sf_comm_sse} (nil))

(debug_insn 118 117 239 8 sequenceUtil.cpp:355 (var_location:SF entropy (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])) -1 (nil))

(insn 239 118 238 8 sequenceUtil.cpp:355 (set (reg:SF 23 xmm2)
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [97 S4 A128])) 99 {*movsf_1} (nil))

(insn 238 239 119 8 sequenceUtil.cpp:355 (set (reg:SF 22 xmm1)
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [97 S4 A128])) 99 {*movsf_1} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]
;; live  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]
;; lr  use 	 7 [sp] 22 [xmm1] 23 [xmm2]
;; lr  def 	 0 [ax] 17 [flags] 25 [xmm4]
;; live  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]
;; live  gen 	 0 [ax] 17 [flags] 25 [xmm4]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [71.0%] 
(code_label 119 238 120 9 50 "" [1 uses])

(note 120 119 123 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(debug_insn 123 120 124 9 (var_location:SI i (const_int 2 [0x2])) -1 (nil))

(debug_insn 124 123 125 9 (var_location:SF entropy (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])) -1 (nil))

(insn 125 124 126 9 sequenceUtil.cpp:351 (set (reg:SI 0 ax [orig:107 counts+2 ] [107])
        (sign_extend:SI (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                    (const_int 66 [0x42])) [0 counts+2 S1 A16]))) 133 {extendqisi2} (nil))

(insn 126 125 127 9 sequenceUtil.cpp:351 (set (reg/v:SF 25 xmm4 [orig:60 prob.739 ] [60])
        (float:SF (reg:SI 0 ax [orig:107 counts+2 ] [107]))) 217 {*floatsisf2_sse_interunit} (nil))

(insn 127 126 128 9 sequenceUtil.cpp:351 (set (reg/v:SF 25 xmm4 [orig:60 prob.739 ] [60])
        (div:SF (reg/v:SF 25 xmm4 [orig:60 prob.739 ] [60])
            (reg:SF 23 xmm2 [orig:71 D.32917 ] [71]))) 760 {*fop_sf_1_sse} (nil))

(debug_insn 128 127 130 9 sequenceUtil.cpp:351 (var_location:SF prob (reg/v:SF 25 xmm4 [orig:60 prob.739 ] [60])) -1 (nil))

(insn 130 128 131 9 sequenceUtil.cpp:353 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:SF 25 xmm4 [orig:60 prob.739 ] [60])
            (reg:SF 22 xmm1 [129]))) 38 {*cmpfp_iu_sse} (expr_list:REG_EQUAL (compare:CCFPU (reg/v:SF 25 xmm4 [orig:60 prob.739 ] [60])
            (const_double:SF 0.0 [0x0.0p+0]))
        (nil)))

(jump_insn 131 130 135 9 sequenceUtil.cpp:353 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 150)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; live  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]


;; Succ edge  10 [29.0%]  (fallthru)
;; Succ edge  11 [71.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; lr  use 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; live  gen 	 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;; live  kill	

;; Pred edge  9 [29.0%]  (fallthru)
(note 135 131 136 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 137 10 sequenceUtil.cpp:354 (set (reg:SF 21 xmm0 [109])
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])) 99 {*movsf_1} (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 137 136 138 10 sequenceUtil.cpp:354 (set (reg:SF 21 xmm0 [109])
        (div:SF (reg:SF 21 xmm0 [109])
            (reg/v:SF 25 xmm4 [orig:60 prob.739 ] [60]))) 760 {*fop_sf_1_sse} (expr_list:REG_EQUAL (div:SF (const_double:SF 1.0e+0 [0x0.8p+1])
            (reg/v:SF 25 xmm4 [orig:60 prob.739 ] [60]))
        (nil)))

(insn 138 137 240 10 sequenceUtil.cpp:354 (set (reg:DF 21 xmm0 [111])
        (float_extend:DF (reg:SF 21 xmm0 [109]))) 136 {*extendsfdf2_sse} (nil))

(insn 240 138 241 10 sequenceUtil.cpp:354 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [97 S4 A128])
        (reg:SF 22 xmm1)) 99 {*movsf_1} (nil))

(insn 241 240 242 10 sequenceUtil.cpp:354 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [97 S4 A128])
        (reg:SF 23 xmm2)) 99 {*movsf_1} (nil))

(insn 242 241 243 10 sequenceUtil.cpp:354 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [97 S4 A128])
        (reg:SF 24 xmm3)) 99 {*movsf_1} (nil))

(insn 243 242 140 10 sequenceUtil.cpp:354 (set (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
        (reg:SF 25 xmm4)) 99 {*movsf_1} (nil))

(call_insn 140 243 142 10 sequenceUtil.cpp:354 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("log") [flags 0x41]  <function_decl 0x7f9013e35c00 log>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(debug_insn 142 140 244 10 sequenceUtil.cpp:354 (var_location:SF val (float_truncate:SF (div:DF (mult:DF (float_extend:DF (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128]))
                (reg:DF 21 xmm0 [orig:59 temp.744 ] [59]))
            (const_double:DF 6.9314718055994528622676398299518041312694549560546875e-1 [0x0.b17217f7d1cf78p+0])))) -1 (nil))

(insn 244 142 143 10 sequenceUtil.cpp:355 (set (reg:SF 25 xmm4)
        (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])) 99 {*movsf_1} (nil))

(insn 143 244 144 10 sequenceUtil.cpp:355 (set (reg:DF 25 xmm4 [114])
        (float_extend:DF (reg/v:SF 25 xmm4 [orig:60 prob.739 ] [60]))) 136 {*extendsfdf2_sse} (nil))

(insn 144 143 145 10 sequenceUtil.cpp:355 (set (reg:DF 25 xmm4 [114])
        (mult:DF (reg:DF 25 xmm4 [114])
            (reg:DF 21 xmm0 [orig:59 temp.744 ] [59]))) 750 {*fop_df_comm_sse} (nil))

(note 145 144 146 10 NOTE_INSN_DELETED)

(insn 146 145 147 10 sequenceUtil.cpp:355 (set (reg:DF 25 xmm4 [114])
        (div:DF (reg:DF 25 xmm4 [114])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64]))) 761 {*fop_df_1_sse} (nil))

(insn 147 146 245 10 sequenceUtil.cpp:355 (set (reg:SF 25 xmm4 [116])
        (float_truncate:SF (reg:DF 25 xmm4 [114]))) 141 {*truncdfsf_fast_sse} (nil))

(insn 245 147 148 10 sequenceUtil.cpp:355 (set (reg:SF 24 xmm3)
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [97 S4 A128])) 99 {*movsf_1} (nil))

(insn 148 245 149 10 sequenceUtil.cpp:355 (set (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])
        (plus:SF (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])
            (reg:SF 25 xmm4 [116]))) 749 {*fop_sf_comm_sse} (nil))

(debug_insn 149 148 247 10 sequenceUtil.cpp:355 (var_location:SF entropy (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])) -1 (nil))

(insn 247 149 246 10 sequenceUtil.cpp:355 (set (reg:SF 23 xmm2)
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [97 S4 A128])) 99 {*movsf_1} (nil))

(insn 246 247 150 10 sequenceUtil.cpp:355 (set (reg:SF 22 xmm1)
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [97 S4 A128])) 99 {*movsf_1} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]
;; live  out 	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]
;; lr  use 	 7 [sp] 22 [xmm1] 23 [xmm2]
;; lr  def 	 0 [ax] 17 [flags] 25 [xmm4]
;; live  in  	 7 [sp] 22 [xmm1] 23 [xmm2] 24 [xmm3]
;; live  gen 	 0 [ax] 17 [flags] 25 [xmm4]
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [71.0%] 
(code_label 150 246 151 11 52 "" [1 uses])

(note 151 150 154 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(debug_insn 154 151 155 11 (var_location:SI i (const_int 3 [0x3])) -1 (nil))

(debug_insn 155 154 156 11 (var_location:SF entropy (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])) -1 (nil))

(insn 156 155 157 11 sequenceUtil.cpp:351 (set (reg:SI 0 ax [orig:118 counts+3 ] [118])
        (sign_extend:SI (mem/s/j:QI (plus:DI (reg/f:DI 7 sp)
                    (const_int 67 [0x43])) [0 counts+3 S1 A8]))) 133 {extendqisi2} (nil))

(insn 157 156 158 11 sequenceUtil.cpp:351 (set (reg/v:SF 25 xmm4 [orig:66 prob ] [66])
        (float:SF (reg:SI 0 ax [orig:118 counts+3 ] [118]))) 217 {*floatsisf2_sse_interunit} (nil))

(insn 158 157 159 11 sequenceUtil.cpp:351 (set (reg/v:SF 25 xmm4 [orig:66 prob ] [66])
        (div:SF (reg/v:SF 25 xmm4 [orig:66 prob ] [66])
            (reg:SF 23 xmm2 [orig:71 D.32917 ] [71]))) 760 {*fop_sf_1_sse} (nil))

(debug_insn 159 158 161 11 sequenceUtil.cpp:351 (var_location:SF prob (reg/v:SF 25 xmm4 [orig:66 prob ] [66])) -1 (nil))

(insn 161 159 162 11 sequenceUtil.cpp:353 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:SF 25 xmm4 [orig:66 prob ] [66])
            (reg:SF 22 xmm1 [129]))) 38 {*cmpfp_iu_sse} (expr_list:REG_EQUAL (compare:CCFPU (reg/v:SF 25 xmm4 [orig:66 prob ] [66])
            (const_double:SF 0.0 [0x0.0p+0]))
        (nil)))

(jump_insn 162 161 166 11 sequenceUtil.cpp:353 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 181)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 7 [sp] 24 [xmm3] 25 [xmm4]
;; live  out 	 7 [sp] 24 [xmm3] 25 [xmm4]


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  13 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 24 [xmm3] 25 [xmm4]
;; lr  use 	 7 [sp] 24 [xmm3] 25 [xmm4]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 24 [xmm3] 25 [xmm4]
;; live  gen 	 21 [xmm0] 24 [xmm3] 25 [xmm4]
;; live  kill	

;; Pred edge  11 [29.0%]  (fallthru)
(note 166 162 167 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 167 166 168 12 sequenceUtil.cpp:354 (set (reg:SF 21 xmm0 [120])
        (mem/u/c/i:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [95 S4 A32])) 99 {*movsf_1} (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 168 167 169 12 sequenceUtil.cpp:354 (set (reg:SF 21 xmm0 [120])
        (div:SF (reg:SF 21 xmm0 [120])
            (reg/v:SF 25 xmm4 [orig:66 prob ] [66]))) 760 {*fop_sf_1_sse} (expr_list:REG_EQUAL (div:SF (const_double:SF 1.0e+0 [0x0.8p+1])
            (reg/v:SF 25 xmm4 [orig:66 prob ] [66]))
        (nil)))

(insn 169 168 248 12 sequenceUtil.cpp:354 (set (reg:DF 21 xmm0 [122])
        (float_extend:DF (reg:SF 21 xmm0 [120]))) 136 {*extendsfdf2_sse} (nil))

(insn 248 169 249 12 sequenceUtil.cpp:354 (set (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [97 S4 A128])
        (reg:SF 24 xmm3)) 99 {*movsf_1} (nil))

(insn 249 248 171 12 sequenceUtil.cpp:354 (set (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])
        (reg:SF 25 xmm4)) 99 {*movsf_1} (nil))

(call_insn 171 249 173 12 sequenceUtil.cpp:354 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("log") [flags 0x41]  <function_decl 0x7f9013e35c00 log>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(debug_insn 173 171 250 12 sequenceUtil.cpp:354 (var_location:SF val (float_truncate:SF (div:DF (mult:DF (float_extend:DF (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128]))
                (reg:DF 21 xmm0 [orig:70 D.32924 ] [70]))
            (const_double:DF 6.9314718055994528622676398299518041312694549560546875e-1 [0x0.b17217f7d1cf78p+0])))) -1 (nil))

(insn 250 173 174 12 sequenceUtil.cpp:355 (set (reg:SF 25 xmm4)
        (mem/c:SF (reg/f:DI 7 sp) [97 S4 A128])) 99 {*movsf_1} (nil))

(insn 174 250 175 12 sequenceUtil.cpp:355 (set (reg:DF 25 xmm4 [125])
        (float_extend:DF (reg/v:SF 25 xmm4 [orig:66 prob ] [66]))) 136 {*extendsfdf2_sse} (nil))

(insn 175 174 176 12 sequenceUtil.cpp:355 (set (reg:DF 25 xmm4 [125])
        (mult:DF (reg:DF 25 xmm4 [125])
            (reg:DF 21 xmm0 [orig:70 D.32924 ] [70]))) 750 {*fop_df_comm_sse} (nil))

(note 176 175 177 12 NOTE_INSN_DELETED)

(insn 177 176 178 12 sequenceUtil.cpp:355 (set (reg:DF 25 xmm4 [125])
        (div:DF (reg:DF 25 xmm4 [125])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [96 S8 A64]))) 761 {*fop_df_1_sse} (nil))

(insn 178 177 251 12 sequenceUtil.cpp:355 (set (reg:SF 25 xmm4 [127])
        (float_truncate:SF (reg:DF 25 xmm4 [125]))) 141 {*truncdfsf_fast_sse} (nil))

(insn 251 178 179 12 sequenceUtil.cpp:355 (set (reg:SF 24 xmm3)
        (mem/c:SF (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [97 S4 A128])) 99 {*movsf_1} (nil))

(insn 179 251 180 12 sequenceUtil.cpp:355 (set (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])
        (plus:SF (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])
            (reg:SF 25 xmm4 [127]))) 749 {*fop_sf_comm_sse} (nil))

(debug_insn 180 179 181 12 sequenceUtil.cpp:355 (var_location:SF entropy (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])) -1 (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 7 [sp] 24 [xmm3]
;; live  out 	 7 [sp] 24 [xmm3]


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 24 [xmm3]
;; lr  use 	 7 [sp] 24 [xmm3]
;; lr  def 	 21 [xmm0]
;; live  in  	 7 [sp] 24 [xmm3]
;; live  gen 	 21 [xmm0]
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  11 [71.0%] 
(code_label 181 180 182 13 54 "" [1 uses])

(note 182 181 185 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(debug_insn 185 182 186 13 (var_location:SI i (const_int 4 [0x4])) -1 (nil))

(debug_insn 186 185 191 13 (var_location:SF entropy (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])) -1 (nil))

(insn 191 186 197 13 sequenceUtil.cpp:360 (set (reg/i:SF 21 xmm0)
        (reg/v:SF 24 xmm3 [orig:69 entropy ] [69])) 99 {*movsf_1} (nil))

(insn 197 191 225 13 sequenceUtil.cpp:360 (use (reg/i:SF 21 xmm0)) -1 (nil))
;; End of basic block 13 -> ( 1)
;; lr  out 	 7 [sp] 21 [xmm0]
;; live  out 	 7 [sp] 21 [xmm0]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 225 197 0 NOTE_INSN_DELETED)


;; Function std::_Rb_tree_iterator<_Val> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(const std::_Rb_tree_node_base*, const std::_Rb_tree_node_base*, const _Val&) [with _Key = char, _Val = std::pair<const char, int>, _KeyOfValue = std::_Select1st<std::pair<const char, int> >, _Compare = std::less<char>, _Alloc = std::allocator<std::pair<const char, int> >] (_ZNSt8_Rb_treeIcSt4pairIKciESt10_Select1stIS2_ESt4lessIcESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a4 (r77,l0) best CREG, cover GENERAL_REGS
    a5 (r72,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r70,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r69,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r67,l0) best CREG, cover GENERAL_REGS
    a3 (r66,l0) best DREG, cover GENERAL_REGS
    a9 (r65,l0) best SIREG, cover GENERAL_REGS
    a1 (r64,l0) best DIREG, cover GENERAL_REGS
    a0 (r61,l0) best AREG, cover GENERAL_REGS
    a2 (r58,l0) best DIREG, cover GENERAL_REGS

  a0(r61,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:63674,63674 SSE_REGS:63674,63674 MMX_REGS:63674,63674 MEM:16592
  a1(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:52000,52000 SSE_REGS:52000,52000 MMX_REGS:52000,52000 MEM:16000
  a2(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25987,25987 SSE_REGS:25987,25987 MMX_REGS:25987,25987 MEM:6996
  a3(r66,l0) costs: AREG:0,0 DREG:-2000,-2000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29601,29601 SSE_REGS:29601,29601 MMX_REGS:29601,29601 MEM:7958
  a4(r77,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27950,27950 SSE_REGS:27950,27950 MMX_REGS:27950,27950 MEM:7450
  a5(r72,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23348,23348 SSE_REGS:23348,23348 MMX_REGS:23348,23348 MEM:3592
  a6(r67,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:39650,39650 SSE_REGS:39650,39650 MMX_REGS:39650,39650 MEM:12200
  a7(r70,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:762
  a8(r69,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:508
  a9(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 MEM:8000


Pass 1 for finding allocno costs

    r77: preferred CREG, alternative GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS
    r67: preferred CREG, alternative GENERAL_REGS
    r66: preferred DREG, alternative GENERAL_REGS
    r65: preferred SIREG, alternative GENERAL_REGS
    r64: preferred DIREG, alternative GENERAL_REGS
    r61: preferred AREG, alternative GENERAL_REGS
    r58: preferred DIREG, alternative GENERAL_REGS

  a0(r61,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:63674,63674 SSE_REGS:63674,63674 MMX_REGS:63674,63674 MEM:16592
  a1(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:52000,52000 SSE_REGS:52000,52000 MMX_REGS:52000,52000 MEM:16000
  a2(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25987,25987 SSE_REGS:25987,25987 MMX_REGS:25987,25987 MEM:6996
  a3(r66,l0) costs: AREG:0,0 DREG:-2000,-2000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29601,29601 SSE_REGS:29601,29601 MMX_REGS:29601,29601 MEM:7958
  a4(r77,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27950,27950 SSE_REGS:27950,27950 MMX_REGS:27950,27950 MEM:7450
  a5(r72,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23348,23348 SSE_REGS:23348,23348 MMX_REGS:23348,23348 MEM:3592
  a6(r67,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:39650,39650 SSE_REGS:39650,39650 MMX_REGS:39650,39650 MEM:12200
  a7(r70,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:762
  a8(r69,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:508
  a9(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 MEM:8000

   Insn 103(l0): point = 0
   Insn 97(l0): point = 2
   Insn 89(l0): point = 4
   Insn 88(l0): point = 6
   Insn 87(l0): point = 8
   Insn 86(l0): point = 10
   Insn 85(l0): point = 12
   Insn 84(l0): point = 14
   Insn 75(l0): point = 17
   Insn 74(l0): point = 19
   Insn 72(l0): point = 22
   Insn 71(l0): point = 24
   Insn 54(l0): point = 26
   Insn 53(l0): point = 28
   Insn 52(l0): point = 30
   Insn 39(l0): point = 33
   Insn 113(l0): point = 36
   Insn 34(l0): point = 38
   Insn 33(l0): point = 40
   Insn 32(l0): point = 42
   Insn 31(l0): point = 44
   Insn 15(l0): point = 47
   Insn 14(l0): point = 49
   Insn 10(l0): point = 52
   Insn 9(l0): point = 54
   Insn 109(l0): point = 56
   Insn 5(l0): point = 58
   Insn 4(l0): point = 60
   Insn 3(l0): point = 62
   Insn 2(l0): point = 64
 a0(r61): [3..26]
 a1(r64): [5..64]
 a2(r58): [36..38] [9..33]
 a3(r66): [13..60]
 a4(r77): [15..56]
 a5(r72): [18..19]
 a6(r67): [20..58]
 a7(r70): [39..40]
 a8(r69): [43..44]
 a9(r65): [55..62]
Compressing live ranges: from 67 to 22 - 32%
Ranges after the compression:
 a0(r61): [0..8]
 a1(r64): [1..21]
 a2(r58): [10..11] [2..9]
 a3(r66): [3..19]
 a4(r77): [4..17]
 a5(r72): [5..6]
 a6(r67): [7..18]
 a7(r70): [12..13]
 a8(r69): [14..15]
 a9(r65): [16..20]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r61,l0) conflicts: a1(r64,l0) a2(r58,l0) a3(r66,l0) a4(r77,l0) a5(r72,l0) a6(r67,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5
;; a1(r64,l0) conflicts: a0(r61,l0) a2(r58,l0) a3(r66,l0) a4(r77,l0) a5(r72,l0) a6(r67,l0) a7(r70,l0) a8(r69,l0) a9(r65,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5
;; a2(r58,l0) conflicts: a0(r61,l0) a1(r64,l0) a3(r66,l0) a4(r77,l0) a5(r72,l0) a6(r67,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5
;; a3(r66,l0) conflicts: a0(r61,l0) a1(r64,l0) a2(r58,l0) a4(r77,l0) a5(r72,l0) a6(r67,l0) a7(r70,l0) a8(r69,l0) a9(r65,l0)
;;     total conflict hard regs: 0 2 5
;;     conflict hard regs: 0 2 5
;; a4(r77,l0) conflicts: a0(r61,l0) a1(r64,l0) a2(r58,l0) a3(r66,l0) a5(r72,l0) a6(r67,l0) a7(r70,l0) a8(r69,l0) a9(r65,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5
;; a5(r72,l0) conflicts: a0(r61,l0) a1(r64,l0) a2(r58,l0) a3(r66,l0) a4(r77,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r67,l0) conflicts: a0(r61,l0) a1(r64,l0) a2(r58,l0) a3(r66,l0) a4(r77,l0) a7(r70,l0) a8(r69,l0) a9(r65,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5
;; a7(r70,l0) conflicts: a1(r64,l0) a3(r66,l0) a4(r77,l0) a6(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r69,l0) conflicts: a1(r64,l0) a3(r66,l0) a4(r77,l0) a6(r67,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r65,l0) conflicts: a1(r64,l0) a3(r66,l0) a4(r77,l0) a6(r67,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

  cp0:a2(r58)<->a7(r70)@15:shuffle
  regions=1, blocks=9, points=22
    allocnos=10, copies=1, conflicts=0, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r61 1r64 2r58 3r66 4r77 5r72 6r67 7r70 8r69 9r65
    modified regnos: 58 61 64 65 66 67 69 70 72 77
    border:
    Pressure: GENERAL_REGS=6
    Reg 61 of GENERAL_REGS has 4 regs less
    Reg 64 of GENERAL_REGS has 5 regs less
    Reg 58 of GENERAL_REGS has 5 regs less
    Reg 66 of GENERAL_REGS has 3 regs less
    Reg 77 of GENERAL_REGS has 2 regs less
    Reg 67 of GENERAL_REGS has 2 regs less
    Reg 65 of GENERAL_REGS has 2 regs less
      Pushing a8(r69,l0)
      Pushing a7(r70,l0)
      Pushing a5(r72,l0)
      Pushing a9(r65,l0)
      Pushing a6(r67,l0)
      Pushing a4(r77,l0)
      Pushing a3(r66,l0)
      Pushing a0(r61,l0)
      Pushing a2(r58,l0)
      Pushing a1(r64,l0)
      Popping a1(r64,l0)  -- assign reg 3
      Popping a2(r58,l0)  -- assign reg 6
      Popping a0(r61,l0)  -- assign reg 41
      Popping a3(r66,l0)  -- assign reg 42
      Popping a4(r77,l0)  -- assign reg 43
      Popping a6(r67,l0)  -- assign reg 44
      Popping a9(r65,l0)  -- assign reg 4
      Popping a5(r72,l0)  -- assign reg 0
      Popping a7(r70,l0)  -- assign reg 6
      Popping a8(r69,l0)  -- assign reg 0
Disposition:
    2:r58  l0     6    0:r61  l0    41    1:r64  l0     3    9:r65  l0     4
    3:r66  l0    42    6:r67  l0    44    8:r69  l0     0    7:r70  l0     6
    5:r72  l0     0    4:r77  l0    43
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 4, 7, dead_or_set: 5, 64
insn=3, live_throughout: 1, 2, 7, 64, dead_or_set: 4, 65
insn=4, live_throughout: 2, 7, 64, 65, dead_or_set: 1, 66
insn=5, live_throughout: 7, 64, 65, 66, dead_or_set: 2, 67
insn=109, live_throughout: 7, 64, 65, 66, 67, dead_or_set: 77
insn=9, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 65
insn=10, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=12, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=14, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=15, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=17, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=18, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=19, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=20, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=21, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=22, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=23, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=24, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=25, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=26, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=27, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=28, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=29, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=30, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=31, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 69
insn=32, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 69
insn=33, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 70
insn=34, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 58, 70
insn=113, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=37, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 
insn=39, live_throughout: 7, 64, 66, 67, 77, dead_or_set: 58
insn=40, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=42, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=43, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=44, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=45, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=46, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=47, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=48, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=49, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=50, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=51, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 
insn=52, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 5
insn=53, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 0, 5
insn=54, live_throughout: 7, 58, 64, 66, 67, 77, dead_or_set: 0, 61
insn=56, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=57, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=58, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=59, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=60, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=61, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=62, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=63, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=64, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=65, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=66, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=67, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=68, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=69, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=71, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=72, live_throughout: 7, 58, 61, 64, 66, 67, 77, dead_or_set: 
insn=74, live_throughout: 7, 58, 61, 64, 66, 77, dead_or_set: 67, 72
insn=75, live_throughout: 7, 58, 61, 64, 66, 77, dead_or_set: 72
insn=78, live_throughout: 7, 58, 61, 64, 66, 77, dead_or_set: 
insn=79, live_throughout: 7, 58, 61, 64, 66, 77, dead_or_set: 
insn=80, live_throughout: 7, 58, 61, 64, 66, 77, dead_or_set: 
insn=81, live_throughout: 7, 58, 61, 64, 66, 77, dead_or_set: 
insn=84, live_throughout: 7, 58, 61, 64, 66, dead_or_set: 2, 77
insn=85, live_throughout: 2, 7, 58, 61, 64, dead_or_set: 1, 66
insn=86, live_throughout: 1, 2, 7, 58, 61, 64, dead_or_set: 4
insn=87, live_throughout: 1, 2, 4, 7, 61, 64, dead_or_set: 5, 58
insn=88, live_throughout: 7, 61, 64, dead_or_set: 1, 2, 4, 5
insn=89, live_throughout: 7, 61, dead_or_set: 64
insn=90, live_throughout: 7, 61, dead_or_set: 
insn=91, live_throughout: 7, 61, dead_or_set: 
insn=97, live_throughout: 7, dead_or_set: 0, 61
insn=103, live_throughout: 0, 7, dead_or_set: 
init_insns for 69: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 72: (insn_list:REG_DEP_TRUE 75 (nil))
changing reg in insn 39
changing reg in insn 34
changing reg in insn 87
changing reg in insn 54
changing reg in insn 71
changing reg in insn 97
changing reg in insn 86
changing reg in insn 91
changing reg in insn 81
changing reg in insn 75
changing reg in insn 67
changing reg in insn 57
changing reg in insn 56
changing reg in insn 74
changing reg in insn 2
changing reg in insn 109
changing reg in insn 89
changing reg in insn 89
changing reg in insn 60
changing reg in insn 59
changing reg in insn 58
changing reg in insn 46
changing reg in insn 45
changing reg in insn 43
changing reg in insn 27
changing reg in insn 12
changing reg in insn 3
changing reg in insn 9
changing reg in insn 4
changing reg in insn 14
changing reg in insn 85
changing reg in insn 32
changing reg in insn 19
changing reg in insn 18
changing reg in insn 17
changing reg in insn 33
changing reg in insn 5
changing reg in insn 74
changing reg in insn 66
changing reg in insn 44
changing reg in insn 31
changing reg in insn 26
changing reg in insn 25
changing reg in insn 31
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 74
changing reg in insn 75
changing reg in insn 109
changing reg in insn 84
changing reg in insn 14
Spilling for insn 31.
Spilling for insn 32.
Spilling for insn 74.
Spilling for insn 75.
Spilling for insn 89.

Reloads for insn # 31
Reload 0: reload_in (QI) = (mem/s:QI (reg/v/f:DI 44 r15 [orig:67 __v ] [67]) [0 <variable>.first+0 S1 A32])
	Q_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s:QI (reg/v/f:DI 44 r15 [orig:67 __v ] [67]) [0 <variable>.first+0 S1 A32])

Reloads for insn # 32
Reload 0: reload_in (QI) = (mem/s:QI (plus:DI (reg/v/f:DI 42 r13 [orig:66 __p ] [66])
                                                        (const_int 32 [0x20])) [0 <variable>._M_value_field.first+0 S1 A64])
	Q_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s:QI (plus:DI (reg/v/f:DI 42 r13 [orig:66 __p ] [66])
                                                        (const_int 32 [0x20])) [0 <variable>._M_value_field.first+0 S1 A64])

Reloads for insn # 74
Reload 0: reload_in (DI) = (mem/s:DI (reg/v/f:DI 44 r15 [orig:67 __v ] [67]) [72 S8 A32])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s:DI (reg/v/f:DI 44 r15 [orig:67 __v ] [67]) [72 S8 A32])

Reloads for insn # 75
Reload 0: reload_out (DI) = (mem/s:DI (plus:DI (reg/v/f:DI 41 r12 [orig:61 __z ] [61])
                                                        (const_int 32 [0x20])) [72 <variable>._M_value_field+0 S8 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s:DI (plus:DI (reg/v/f:DI 41 r12 [orig:61 __z ] [61])
                                                        (const_int 32 [0x20])) [72 <variable>._M_value_field+0 S8 A64])

Reloads for insn # 89
Reload 0: reload_in (DI) = (mem/s:DI (plus:DI (reg/f:DI 3 bx [orig:64 this ] [64])
                                                        (const_int 40 [0x28])) [14 <variable>._M_impl._M_node_count+0 S8 A64])
	reload_out (DI) = (mem/s:DI (plus:DI (reg/f:DI 3 bx [orig:64 this ] [64])
                                                        (const_int 40 [0x28])) [14 <variable>._M_impl._M_node_count+0 S8 A64])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0), optional
	reload_in_reg: (mem/s:DI (plus:DI (reg/f:DI 3 bx [orig:64 this ] [64])
                                                        (const_int 40 [0x28])) [14 <variable>._M_impl._M_node_count+0 S8 A64])
	reload_out_reg: (mem/s:DI (plus:DI (reg/f:DI 3 bx [orig:64 this ] [64])
                                                        (const_int 40 [0x28])) [14 <variable>._M_impl._M_node_count+0 S8 A64])
deleting insn with uid = 3.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 88.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 14 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


std::_Rb_tree_iterator<_Val> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(const std::_Rb_tree_node_base*, const std::_Rb_tree_node_base*, const _Val&) [with _Key = char, _Val = std::pair<const char, int>, _KeyOfValue = std::_Select1st<std::pair<const char, int> >, _Compare = std::less<char>, _Alloc = std::allocator<std::pair<const char, int> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={6d,5u,1d} r1={4d,2u} r2={4d,2u} r3={1d,11u} r4={4d,2u} r5={5d,3u} r6={3d,2u} r7={1d,10u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={8d,4u} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={3d} r40={2d} r41={1d,9u,1d} r42={1d,6u,1d} r43={1d,2u} r44={1d,6u,1d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 195{127d,64u,4e} in 73{71 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 3 [bx] 17 [flags] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 4 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:874 (set (reg/f:DI 3 bx [orig:64 this ] [64])
        (reg:DI 5 di [ this ])) 89 {*movdi_1_rex64} (nil))

(insn 4 2 5 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:874 (set (reg/v/f:DI 42 r13 [orig:66 __p ] [66])
        (reg:DI 1 dx [ __p ])) 89 {*movdi_1_rex64} (nil))

(insn 5 4 6 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:874 (set (reg/v/f:DI 44 r15 [orig:67 __v ] [67])
        (reg:DI 2 cx [ __v ])) 89 {*movdi_1_rex64} (nil))

(note 6 5 109 2 NOTE_INSN_FUNCTION_BEG)

(insn 109 6 9 2 (set (reg/f:DI 43 r14 [77])
        (plus:DI (reg/f:DI 3 bx [orig:64 this ] [64])
            (const_int 8 [0x8]))) 274 {*lea_2_rex64} (nil))

(insn 9 109 10 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 4 si [orig:65 __x ] [65])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil))

(jump_insn 10 9 11 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 37)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  5 [85.0%] 
;; Succ edge  3 [15.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	

;; Pred edge  2 [15.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(debug_insn 12 11 14 3 (var_location:DI this (reg/f:DI 3 bx [orig:64 this ] [64])) -1 (nil))

(insn 14 12 15 3 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 42 r13 [orig:66 __p ] [66])
            (reg/f:DI 43 r14 [77]))) 2 {cmpdi_1_insn_rex64} (nil))

(jump_insn 15 14 16 3 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  5 [15.0%] 
;; Succ edge  4 [85.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  3 [85.0%]  (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(debug_insn 17 16 18 4 (var_location:DI __x (reg/v/f:DI 42 r13 [orig:66 __p ] [66])) -1 (nil))

(debug_insn 18 17 19 4 (var_location:DI __x (reg/v/f:DI 42 r13 [orig:66 __p ] [66])) -1 (nil))

(debug_insn 19 18 20 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:525 (var_location:DI D.4294967178 (reg/v/f:DI 42 r13 [orig:66 __p ] [66])) -1 (nil))

(debug_insn 20 19 21 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:529 (var_location:DI D.4294967287 (plus:DI (debug_expr:DI D#118)
        (const_int 32 [0x20]))) -1 (nil))

(debug_insn 21 20 22 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:529 (var_location:DI this (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 22 21 23 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:529 (var_location:DI __x (debug_expr:DI D#9)) -1 (nil))

(debug_insn 23 22 24 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (var_location:DI D.4294967206 (plus:DI (debug_expr:DI D#118)
        (const_int 32 [0x20]))) -1 (nil))

(debug_insn 24 23 25 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (var_location:DI this (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 25 24 26 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (var_location:DI __x (reg/v/f:DI 44 r15 [orig:67 __v ] [67])) -1 (nil))

(debug_insn 26 25 27 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (var_location:DI D.4294967205 (reg/v/f:DI 44 r15 [orig:67 __v ] [67])) -1 (nil))

(debug_insn 27 26 28 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (var_location:DI D.4294967207 (reg/f:DI 3 bx [orig:64 this ] [64])) -1 (nil))

(debug_insn 28 27 29 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (var_location:DI this (debug_expr:DI D#89)) -1 (nil))

(debug_insn 29 28 30 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (var_location:DI __x (debug_expr:DI D#91)) -1 (nil))

(debug_insn 30 29 31 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (var_location:DI __y (debug_expr:DI D#90)) -1 (nil))

(insn 31 30 32 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (set (reg:QI 0 ax [orig:69 <variable>.first ] [69])
        (mem/s:QI (reg/v/f:DI 44 r15 [orig:67 __v ] [67]) [0 <variable>.first+0 S1 A32])) 62 {*movqi_1} (expr_list:REG_EQUIV (mem/s:QI (reg/v/f:DI 44 r15 [orig:67 __v ] [67]) [0 <variable>.first+0 S1 A32])
        (nil)))

(insn 32 31 33 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 0 ax [orig:69 <variable>.first ] [69])
            (mem/s:QI (plus:DI (reg/v/f:DI 42 r13 [orig:66 __p ] [66])
                    (const_int 32 [0x20])) [0 <variable>._M_value_field.first+0 S1 A64]))) 10 {*cmpqi_1} (nil))

(insn 33 32 34 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (set (reg:QI 6 bp [70])
        (lt:QI (reg:CCGC 17 flags)
            (const_int 0 [0x0]))) 611 {*setcc_1} (expr_list:REG_EQUAL (lt:QI (reg:QI 0 ax [orig:69 <variable>.first ] [69])
            (mem/s:QI (plus:DI (reg/v/f:DI 42 r13 [orig:66 __p ] [66])
                    (const_int 32 [0x20])) [0 <variable>._M_value_field.first+0 S1 A64]))
        (nil)))

(insn 34 33 113 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (parallel [
            (set (reg:SI 6 bp [orig:58 prephitmp.779 ] [58])
                (zero_extend:SI (reg:QI 6 bp [70])))
            (clobber (reg:CC 17 flags))
        ]) 120 {*zero_extendqisi2_movzbw_and} (nil))

(jump_insn 113 34 114 4 (set (pc)
        (label_ref 40)) 638 {jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  6 [100.0%] 

(barrier 114 113 37)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 6 [bp]
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 6 [bp]
;; live  kill	

;; Pred edge  3 [15.0%] 
;; Pred edge  2 [85.0%] 
(code_label 37 114 38 5 67 "" [2 uses])

(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 5 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (set (reg:SI 6 bp [orig:58 prephitmp.779 ] [58])
        (const_int 1 [0x1])) 47 {*movsi_1} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 41 [r12]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 40 39 41 6 68 "" [1 uses])

(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(debug_insn 42 41 43 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (var_location:QI __insert_left (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 43 42 44 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (var_location:DI this (reg/f:DI 3 bx [orig:64 this ] [64])) -1 (nil))

(debug_insn 44 43 45 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:879 (var_location:DI __x (reg/v/f:DI 44 r15 [orig:67 __v ] [67])) -1 (nil))

(debug_insn 45 44 46 6 (var_location:DI this (reg/f:DI 3 bx [orig:64 this ] [64])) -1 (nil))

(debug_insn 46 45 47 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:359 (var_location:DI D.4294967209 (reg/f:DI 3 bx [orig:64 this ] [64])) -1 (nil))

(debug_insn 47 46 48 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:359 (var_location:DI D.4294967210 (debug_expr:DI D#87)) -1 (nil))

(debug_insn 48 47 49 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:359 (var_location:DI this (debug_expr:DI D#86)) -1 (nil))

(debug_insn 49 48 50 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:359 (var_location:DI __n (const_int 1 [0x1])) -1 (nil))

(debug_insn 50 49 51 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:359 (var_location:DI D.40531 (const_int 0 [0x0])) -1 (nil))

(debug_insn 51 50 52 6 (var_location:DI this (debug_expr:DI D#86)) -1 (nil))

(insn 52 51 53 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/ext/new_allocator.h:89 (set (reg:DI 5 di)
        (const_int 40 [0x28])) 89 {*movdi_1_rex64} (nil))

(call_insn 53 52 54 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/ext/new_allocator.h:89 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f9013d1e500 operator new>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 54 53 56 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/ext/new_allocator.h:89 (set (reg/v/f:DI 41 r12 [orig:61 __z ] [61])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (nil))

(debug_insn 56 54 57 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:369 (var_location:DI __tmp (reg/v/f:DI 41 r12 [orig:61 __z ] [61])) -1 (nil))

(debug_insn 57 56 58 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:371 (var_location:DI D.4294967208 (plus:DI (reg/v/f:DI 41 r12 [orig:61 __z ] [61])
        (const_int 32 [0x20]))) -1 (nil))

(debug_insn 58 57 59 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:371 (var_location:DI this (reg/f:DI 3 bx [orig:64 this ] [64])) -1 (nil))

(debug_insn 59 58 60 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:354 (var_location:DI this (reg/f:DI 3 bx [orig:64 this ] [64])) -1 (nil))

(debug_insn 60 59 61 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:350 (var_location:DI D.4294967271 (reg/f:DI 3 bx [orig:64 this ] [64])) -1 (nil))

(debug_insn 61 60 62 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:354 (var_location:DI this (debug_expr:DI D#26)) -1 (nil))

(debug_insn 62 61 63 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:354 (var_location:DI D.39291 (debug_expr:DI D#25)) -1 (nil))

(debug_insn 63 62 64 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/allocator.h:107 (var_location:DI this (debug_expr:DI D#26)) -1 (nil))

(debug_insn 64 63 65 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:371 (var_location:DI this (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 65 64 66 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:371 (var_location:DI __p (debug_expr:DI D#88)) -1 (nil))

(debug_insn 66 65 67 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:371 (var_location:DI __val (reg/v/f:DI 44 r15 [orig:67 __v ] [67])) -1 (nil))

(debug_insn 67 66 68 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/ext/new_allocator.h:105 (var_location:DI D.4294967177 (plus:DI (reg/v/f:DI 41 r12 [orig:61 __z ] [61])
        (const_int 32 [0x20]))) -1 (nil))

(debug_insn 68 67 69 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/ext/new_allocator.h:105 (var_location:DI D.40478 (const_int 8 [0x8])) -1 (nil))

(debug_insn 69 68 70 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/ext/new_allocator.h:105 (var_location:DI __p (debug_expr:DI D#119)) -1 (nil))

(note 70 69 71 6 NOTE_INSN_DELETED)

(insn 71 70 72 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/ext/new_allocator.h:105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 41 r12 [orig:61 __z ] [61])
            (const_int -32 [0xffffffffffffffe0]))) 2 {cmpdi_1_insn_rex64} (nil))

(jump_insn 72 71 73 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/ext/new_allocator.h:105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 78)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]


;; Succ edge  7 [89.9%]  (fallthru)
;; Succ edge  8 [10.1%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  6 [89.9%]  (fallthru)
(note 73 72 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 7 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/ext/new_allocator.h:105 (set (reg:DI 0 ax [72])
        (mem/s:DI (reg/v/f:DI 44 r15 [orig:67 __v ] [67]) [72 S8 A32])) 89 {*movdi_1_rex64} (expr_list:REG_EQUIV (mem/s:DI (plus:DI (reg/v/f:DI 41 r12 [orig:61 __z ] [61])
                (const_int 32 [0x20])) [72 <variable>._M_value_field+0 S8 A64])
        (nil)))

(insn 75 74 78 7 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/ext/new_allocator.h:105 (set (mem/s:DI (plus:DI (reg/v/f:DI 41 r12 [orig:61 __z ] [61])
                (const_int 32 [0x20])) [72 <variable>._M_value_field+0 S8 A64])
        (reg:DI 0 ax [72])) 89 {*movdi_1_rex64} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [10.1%] 
(code_label 78 75 105 8 70 "" [1 uses])

(note 105 78 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(debug_insn 79 105 80 8 (var_location:DI this (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 80 79 81 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/allocator.h:109 (var_location:DI this (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 81 80 84 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:881 (var_location:DI __z (reg/v/f:DI 41 r12 [orig:61 __z ] [61])) -1 (nil))

(insn 84 81 85 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:883 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [77])) 89 {*movdi_1_rex64} (nil))

(insn 85 84 86 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:883 (set (reg:DI 1 dx)
        (reg/v/f:DI 42 r13 [orig:66 __p ] [66])) 89 {*movdi_1_rex64} (nil))

(insn 86 85 87 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:883 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:61 __z ] [61])) 89 {*movdi_1_rex64} (nil))

(insn 87 86 88 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:883 (set (reg:SI 5 di)
        (reg:SI 6 bp [orig:58 prephitmp.779 ] [58])) 47 {*movsi_1} (nil))

(call_insn 88 87 89 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:883 (call (mem:QI (symbol_ref:DI ("_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_") [flags 0x41]  <function_decl 0x7f90127a9000 _Rb_tree_insert_and_rebalance>) [0 S1 A8])
        (const_int 0 [0x0])) 646 {*call_0} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 89 88 90 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:886 (parallel [
            (set (mem/s:DI (plus:DI (reg/f:DI 3 bx [orig:64 this ] [64])
                        (const_int 40 [0x28])) [14 <variable>._M_impl._M_node_count+0 S8 A64])
                (plus:DI (mem/s:DI (plus:DI (reg/f:DI 3 bx [orig:64 this ] [64])
                            (const_int 40 [0x28])) [14 <variable>._M_impl._M_node_count+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 281 {*adddi_1_rex64} (nil))

(debug_insn 90 89 91 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:886 (var_location:DI this (clobber (const_int 0 [0x0]))) -1 (nil))

(debug_insn 91 90 97 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:886 (var_location:DI __x (reg/v/f:DI 41 r12 [orig:61 __z ] [61])) -1 (nil))

(insn 97 91 103 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:888 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 41 r12 [orig:61 __z ] [61])) 89 {*movdi_1_rex64} (nil))

(insn 103 97 115 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/stl_tree.h:888 (use (reg/i:DI 0 ax)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 115 103 0 NOTE_INSN_DELETED)


;; Function std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>] (_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r66,l0) best AREG, cover GENERAL_REGS
    a3 (r64,l0) best AD_REGS, cover GENERAL_REGS
    a2 (r62,l0) best DREG, cover GENERAL_REGS
    a4 (r61,l0) best SIREG, cover GENERAL_REGS
    a0 (r60,l0) best DIREG, cover GENERAL_REGS

  a0(r60,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1001,-1001 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:52013,52013 SSE_REGS:52013,52013 MMX_REGS:52013,52013 MEM:13003
  a1(r66,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a2(r62,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:39000,39000 SSE_REGS:39000,39000 MMX_REGS:39000,39000 MEM:10000
  a3(r64,l0) costs: AREG:-1000,-1000 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 MEM:7000
  a4(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-2000,-2000 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 MEM:7000


Pass 1 for finding allocno costs

    r66: preferred AREG, alternative GENERAL_REGS
    r64: preferred AD_REGS, alternative GENERAL_REGS
    r62: preferred DREG, alternative GENERAL_REGS
    r61: preferred SIREG, alternative GENERAL_REGS
    r60: preferred DIREG, alternative GENERAL_REGS

  a0(r60,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1001,-1001 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:52013,52013 SSE_REGS:52013,52013 MMX_REGS:52013,52013 MEM:13003
  a1(r66,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a2(r62,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:39000,39000 SSE_REGS:39000,39000 MMX_REGS:39000,39000 MEM:10000
  a3(r64,l0) costs: AREG:-1000,-1000 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 MEM:7000
  a4(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-2000,-2000 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26000,26000 SSE_REGS:26000,26000 MMX_REGS:26000,26000 MEM:7000

   Insn 41(l0): point = 0
   Insn 35(l0): point = 2
   Insn 46(l0): point = 5
   Insn 45(l0): point = 7
   Insn 30(l0): point = 9
   Insn 29(l0): point = 11
   Insn 49(l0): point = 13
   Insn 54(l0): point = 16
   Insn 23(l0): point = 19
   Insn 22(l0): point = 21
   Insn 21(l0): point = 23
   Insn 20(l0): point = 25
   Insn 17(l0): point = 27
   Insn 16(l0): point = 29
   Insn 15(l0): point = 31
   Insn 11(l0): point = 33
   Insn 10(l0): point = 35
   Insn 9(l0): point = 37
   Insn 4(l0): point = 39
   Insn 3(l0): point = 41
   Insn 2(l0): point = 43
 a0(r60): [12..43] [3..4]
 a1(r66): [8..13]
 a2(r62): [24..39]
 a3(r64): [26..27]
 a4(r61): [38..41]
Compressing live ranges: from 46 to 12 - 26%
Ranges after the compression:
 a0(r60): [3..11] [0..1]
 a1(r66): [2..4]
 a2(r62): [5..9]
 a3(r64): [6..7]
 a4(r61): [8..10]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r60,l0) conflicts: a1(r66,l0) a2(r62,l0) a3(r64,l0) a4(r61,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40
;; a1(r66,l0) conflicts: a0(r60,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5
;; a2(r62,l0) conflicts: a0(r60,l0) a3(r64,l0) a4(r61,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5
;; a3(r64,l0) conflicts: a0(r60,l0) a2(r62,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r61,l0) conflicts: a0(r60,l0) a2(r62,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

  regions=1, blocks=6, points=12
    allocnos=5, copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r60 1r66 2r62 3r64 4r61
    modified regnos: 60 61 62 64 66
    border:
    Pressure: GENERAL_REGS=4
    Reg 60 of GENERAL_REGS has 9 regs less
    Reg 66 of GENERAL_REGS has 1 regs less
    Reg 62 of GENERAL_REGS has 4 regs less
    Reg 61 of GENERAL_REGS has 1 regs less
      Pushing a3(r64,l0)
      Pushing a1(r66,l0)
      Pushing a4(r61,l0)
      Pushing a2(r62,l0)
      Pushing a0(r60,l0)(potential spill: pri=1300, cost=13003)
      Popping a0(r60,l0)  -- assign reg 3
      Popping a2(r62,l0)  -- assign reg 6
      Popping a4(r61,l0)  -- assign reg 4
      Popping a1(r66,l0)  -- assign reg 6
      Popping a3(r64,l0)  -- assign reg 0
Disposition:
    0:r60  l0     3    4:r61  l0     4    2:r62  l0     6    3:r64  l0     0
    1:r66  l0     6
New iteration of spill/restore move
+++Costs: overall -9000, reg -9000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 4, 7, dead_or_set: 5, 60
insn=3, live_throughout: 1, 7, 60, dead_or_set: 4, 61
insn=4, live_throughout: 7, 60, 61, dead_or_set: 1, 62
insn=9, live_throughout: 7, 60, 62, dead_or_set: 4, 61
insn=10, live_throughout: 4, 7, 60, 62, dead_or_set: 5
insn=11, live_throughout: 7, 60, 62, dead_or_set: 4, 5
insn=12, live_throughout: 7, 60, 62, dead_or_set: 
insn=13, live_throughout: 7, 60, 62, dead_or_set: 
insn=14, live_throughout: 7, 60, 62, dead_or_set: 
insn=15, live_throughout: 7, 60, 62, dead_or_set: 5
insn=16, live_throughout: 7, 60, 62, dead_or_set: 0, 5
insn=17, live_throughout: 7, 60, 62, dead_or_set: 0, 64
insn=20, live_throughout: 7, 60, 62, dead_or_set: 1, 64
insn=21, live_throughout: 1, 7, 60, dead_or_set: 4, 62
insn=22, live_throughout: 1, 4, 7, 60, dead_or_set: 5
insn=23, live_throughout: 7, 60, dead_or_set: 0, 1, 4, 5
insn=54, live_throughout: 7, 60, dead_or_set: 
insn=48, live_throughout: 0, 7, 60, dead_or_set: 
insn=49, live_throughout: 7, 60, dead_or_set: 0, 66
insn=29, live_throughout: 7, 66, dead_or_set: 5, 60
insn=30, live_throughout: 7, 66, dead_or_set: 5
insn=45, live_throughout: 7, dead_or_set: 5, 66
insn=46, live_throughout: 7, dead_or_set: 5
insn=53, live_throughout: 7, 60, dead_or_set: 
insn=35, live_throughout: 7, dead_or_set: 0, 60
insn=41, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 2
changing reg in insn 29
changing reg in insn 22
changing reg in insn 12
changing reg in insn 10
changing reg in insn 35
changing reg in insn 3
changing reg in insn 9
changing reg in insn 4
changing reg in insn 21
changing reg in insn 15
changing reg in insn 14
changing reg in insn 13
changing reg in insn 17
changing reg in insn 20
changing reg in insn 49
changing reg in insn 45
deleting insn with uid = 3.
deleting insn with uid = 9.
deleting insn with uid = 17.


try_optimize_cfg iteration 1

Forwarding edge 2->3 to 5 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 46.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 8 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 10 (  1.7)


std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={8d,4u} r1={8d,2u} r2={6d} r3={1d,5u} r4={7d,2u} r5={11d,6u} r6={2d,5u} r7={1d,10u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1u} r17={5d} r18={5d} r19={5d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={6d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} 
;;    total ref usage 285{250d,35u,0e} in 21{16 regular + 5 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 7 [sp] 16 [argp]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 4 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2198 (set (reg/f:DI 3 bx [orig:60 <result> ] [60])
        (reg:DI 5 di [ D.42204 ])) 89 {*movdi_1_rex64} (nil))

(insn 4 2 5 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2198 (set (reg/v/f:DI 6 bp [orig:62 __rhs ] [62])
        (reg:DI 1 dx [ __rhs ])) 89 {*movdi_1_rex64} (nil))

(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 5 11 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2201 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:60 <result> ] [60])) 89 {*movdi_1_rex64} (nil))

(call_insn 11 10 12 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2201 (call (mem:QI (symbol_ref:DI ("_ZNSsC1ERKSs") [flags 0x41]  <function_decl 0x7f901329b400 __comp_ctor >) [0 S1 A8])
        (const_int 0 [0x0])) 646 {*call_0} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(debug_insn 12 11 13 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2202 (var_location:DI this (reg/f:DI 3 bx [orig:60 <result> ] [60])) -1 (nil))

(debug_insn 13 12 14 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2202 (var_location:DI __s (reg/v/f:DI 6 bp [orig:62 __rhs ] [62])) -1 (nil))

(debug_insn 14 13 15 2 (var_location:DI __s (reg/v/f:DI 6 bp [orig:62 __rhs ] [62])) -1 (nil))

(insn 15 14 16 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/char_traits.h:263 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:62 __rhs ] [62])) 89 {*movdi_1_rex64} (nil))

(call_insn/i 16 15 20 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/char_traits.h:263 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f9013e83000 __builtin_strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 20 16 21 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:871 (set (reg:DI 1 dx)
        (reg:DI 0 ax [64])) 89 {*movdi_1_rex64} (nil))

(insn 21 20 22 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:871 (set (reg:DI 4 si)
        (reg/v/f:DI 6 bp [orig:62 __rhs ] [62])) 89 {*movdi_1_rex64} (nil))

(insn 22 21 23 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:871 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:60 <result> ] [60])) 89 {*movdi_1_rex64} (nil))

(call_insn 23 22 52 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:871 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSs6appendEPKcm") [flags 0x41]  <function_decl 0x7f901324a600 append>) [0 S1 A8])
            (const_int 0 [0x0]))) 936 {*call_value_0_rex64} (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 7 [sp]


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  4 (ab,abcall,eh)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
(note 52 23 54 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 54 52 55 3 (set (pc)
        (label_ref 53)) 638 {jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]


;; Succ edge  5 [100.0%] 

(barrier 55 54 48)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 6 [bp]
;; live  kill	

;; Pred edge  2 (ab,abcall,eh)
(code_label/s 48 55 51 4 77 "" [1 uses])

(note 51 48 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 49 51 27 4 (set (reg:DI 6 bp [66])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (nil))

(note/s 27 49 29 4 "" NOTE_INSN_DELETED_LABEL 75)

(insn 29 27 30 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2203 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:60 <result> ] [60])) 89 {*movdi_1_rex64} (nil))

(call_insn 30 29 45 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2203 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x7f901329ba00 __comp_dtor >) [0 S1 A8])
        (const_int 0 [0x0])) 646 {*call_0} (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 45 30 46 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2203 (set (reg:DI 5 di)
        (reg:DI 6 bp [66])) 89 {*movdi_1_rex64} (nil))

(call_insn 46 45 32 4 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2203 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]) [0 S1 A8])
        (const_int 0 [0x0])) 646 {*call_0} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 4 -> ()
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]



(barrier 32 46 53)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  3 [100.0%] 
(code_label 53 32 43 5 78 "" [1 uses])

(note 43 53 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 43 41 5 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2204 (set (reg/i:DI 0 ax)
        (reg/f:DI 3 bx [orig:60 <result> ] [60])) 89 {*movdi_1_rex64} (nil))

(insn 41 35 56 5 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:2204 (use (reg/i:DI 0 ax)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 56 41 0 NOTE_INSN_DELETED)


;; Function std::string decode_kmer_from_intval(kmer_int_type_t, unsigned int) (_Z23decode_kmer_from_intvalyj)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a13 (r107,l1) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r105,l1) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r103,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r101,l0) best AREG, cover GENERAL_REGS
    a5 (r99,l0) best SIREG, cover GENERAL_REGS
    a6 (r98,l0) best CREG, cover GENERAL_REGS
    a10 (r97,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r97,l0) best DREG, cover GENERAL_REGS
    a9 (r96,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r96,l0) best SIREG, cover GENERAL_REGS
    a8 (r95,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r95,l0) best DIREG, cover GENERAL_REGS
    a7 (r93,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r93,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r90,l1) best GENERAL_REGS, cover GENERAL_REGS

  a0(r95,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-46,-46 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1768,29887 SSE_REGS:1768,29887 MMX_REGS:1768,29887 MEM:453
  a1(r101,l0) costs: AREG:-2,-2 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2,-2 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:52,52 SSE_REGS:52,52 MMX_REGS:52,52 MEM:14
  a2(r97,l0) costs: AREG:0,1910 DREG:-45,1865 CREG:0,1910 BREG:0,1910 SIREG:0,1910 DIREG:0,1910 AD_REGS:0,1910 CLOBBERED_REGS:0,1910 Q_REGS:0,1910 NON_Q_REGS:0,1910 LEGACY_REGS:0,1910 GENERAL_REGS:0,1910 SSE_FIRST_REG:1755,28495 SSE_REGS:1755,28495 MMX_REGS:1755,28495 MEM:495
  a3(r93,l0) costs: AREG:0,1910 DREG:0,1910 CREG:0,1910 BREG:0,1910 SIREG:0,1910 DIREG:0,1910 AD_REGS:0,1910 CLOBBERED_REGS:0,1910 Q_REGS:0,1910 NON_Q_REGS:0,1910 LEGACY_REGS:0,1910 GENERAL_REGS:0,1910 SSE_FIRST_REG:585,52155 SSE_REGS:585,52155 MMX_REGS:585,52155 MEM:180
  a4(r96,l0) costs: AREG:0,1910 DREG:0,1910 CREG:0,1910 BREG:0,1910 SIREG:-45,1865 DIREG:0,1910 AD_REGS:0,1910 CLOBBERED_REGS:0,1910 Q_REGS:0,1910 NON_Q_REGS:0,1910 LEGACY_REGS:0,1910 GENERAL_REGS:0,1910 SSE_FIRST_REG:585,38622 SSE_REGS:585,38622 MMX_REGS:585,38622 MEM:180
  a5(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-45,-45 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 MEM:315
  a6(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:-45,-45 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 MEM:315
  a7(r93,l1) costs: AREG:1910,1910 DREG:1910,1910 CREG:1910,1910 BREG:1910,1910 SIREG:1910,1910 DIREG:1910,1910 AD_REGS:1910,1910 CLOBBERED_REGS:1910,1910 Q_REGS:1910,1910 NON_Q_REGS:1910,1910 LEGACY_REGS:1910,1910 GENERAL_REGS:1910,1910 SSE_FIRST_REG:51570,51570 SSE_REGS:51570,51570 MMX_REGS:51570,51570 MEM:13370
  a8(r95,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28119,28119 SSE_REGS:28119,28119 MMX_REGS:28119,28119 MEM:8048
  a9(r96,l1) costs: AREG:1910,1910 DREG:1910,1910 CREG:1910,1910 BREG:1910,1910 SIREG:1910,1910 DIREG:1910,1910 AD_REGS:1910,1910 CLOBBERED_REGS:1910,1910 Q_REGS:1910,1910 NON_Q_REGS:1910,1910 LEGACY_REGS:1910,1910 GENERAL_REGS:1910,1910 SSE_FIRST_REG:38037,38037 SSE_REGS:38037,38037 MMX_REGS:38037,38037 MEM:10247
  a10(r97,l1) costs: AREG:1910,1910 DREG:1910,1910 CREG:1910,1910 BREG:1910,1910 SIREG:1910,1910 DIREG:1910,1910 AD_REGS:1910,1910 CLOBBERED_REGS:1910,1910 Q_REGS:1910,1910 NON_Q_REGS:1910,1910 LEGACY_REGS:1910,1910 GENERAL_REGS:1910,1910 SSE_FIRST_REG:26740,26740 SSE_REGS:26740,26740 MMX_REGS:26740,26740 MEM:8595
  a11(r103,l1) costs: AREG:1910,1910 DREG:1910,1910 CREG:1910,1910 BREG:1910,1910 SIREG:1910,1910 DIREG:1910,1910 AD_REGS:1910,1910 CLOBBERED_REGS:1910,1910 Q_REGS:1910,1910 NON_Q_REGS:1910,1910 LEGACY_REGS:1910,1910 GENERAL_REGS:1910,1910 SSE_FIRST_REG:26740,26740 SSE_REGS:26740,26740 MMX_REGS:26740,26740 MEM:9550
  a12(r90,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:45097,45097 SSE_REGS:45097,45097 MMX_REGS:45097,45097 MEM:13876
  a13(r107,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:3820
  a14(r105,l1) costs: AREG:1910,1910 DREG:1910,1910 CREG:1910,1910 BREG:1910,1910 SIREG:1910,1910 DIREG:1910,1910 AD_REGS:1910,1910 CLOBBERED_REGS:1910,1910 Q_REGS:1910,1910 NON_Q_REGS:1910,1910 LEGACY_REGS:1910,1910 GENERAL_REGS:1910,1910 SSE_FIRST_REG:39155,39155 SSE_REGS:39155,39155 MMX_REGS:39155,39155 MEM:12415


Pass 1 for finding allocno costs

    r107: preferred GENERAL_REGS, alternative NO_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS
    r101: preferred AREG, alternative GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS
    r98: preferred CREG, alternative GENERAL_REGS
    r97: preferred DREG, alternative GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS

  a0(r95,l0) costs: AREG:-45,-45 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-46,-46 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1768,29887 SSE_REGS:1768,29887 MMX_REGS:1768,29887 MEM:453
  a1(r101,l0) costs: AREG:-2,-2 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2,-2 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:52,52 SSE_REGS:52,52 MMX_REGS:52,52 MEM:14
  a2(r97,l0) costs: AREG:0,1910 DREG:-45,1865 CREG:0,1910 BREG:0,1910 SIREG:0,1910 DIREG:0,1910 AD_REGS:0,1910 CLOBBERED_REGS:0,1910 Q_REGS:0,1910 NON_Q_REGS:0,1910 LEGACY_REGS:0,1910 GENERAL_REGS:0,1910 SSE_FIRST_REG:1755,28495 SSE_REGS:1755,28495 MMX_REGS:1755,28495 MEM:495
  a3(r93,l0) costs: AREG:0,1910 DREG:0,1910 CREG:0,1910 BREG:0,1910 SIREG:0,1910 DIREG:0,1910 AD_REGS:0,1910 CLOBBERED_REGS:0,1910 Q_REGS:0,1910 NON_Q_REGS:0,1910 LEGACY_REGS:0,1910 GENERAL_REGS:0,1910 SSE_FIRST_REG:585,52155 SSE_REGS:585,52155 MMX_REGS:585,52155 MEM:180
  a4(r96,l0) costs: AREG:0,1910 DREG:0,1910 CREG:0,1910 BREG:0,1910 SIREG:-45,1865 DIREG:0,1910 AD_REGS:0,1910 CLOBBERED_REGS:0,1910 Q_REGS:0,1910 NON_Q_REGS:0,1910 LEGACY_REGS:0,1910 GENERAL_REGS:0,1910 SSE_FIRST_REG:585,38622 SSE_REGS:585,38622 MMX_REGS:585,38622 MEM:180
  a5(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-45,-45 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 MEM:315
  a6(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:-45,-45 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1170,1170 SSE_REGS:1170,1170 MMX_REGS:1170,1170 MEM:315
  a7(r93,l1) costs: AREG:1910,1910 DREG:1910,1910 CREG:1910,1910 BREG:1910,1910 SIREG:1910,1910 DIREG:1910,1910 AD_REGS:1910,1910 CLOBBERED_REGS:1910,1910 Q_REGS:1910,1910 NON_Q_REGS:1910,1910 LEGACY_REGS:1910,1910 GENERAL_REGS:1910,1910 SSE_FIRST_REG:51570,51570 SSE_REGS:51570,51570 MMX_REGS:51570,51570 MEM:13370
  a8(r95,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28119,28119 SSE_REGS:28119,28119 MMX_REGS:28119,28119 MEM:8048
  a9(r96,l1) costs: AREG:1910,1910 DREG:1910,1910 CREG:1910,1910 BREG:1910,1910 SIREG:1910,1910 DIREG:1910,1910 AD_REGS:1910,1910 CLOBBERED_REGS:1910,1910 Q_REGS:1910,1910 NON_Q_REGS:1910,1910 LEGACY_REGS:1910,1910 GENERAL_REGS:1910,1910 SSE_FIRST_REG:38037,38037 SSE_REGS:38037,38037 MMX_REGS:38037,38037 MEM:10247
  a10(r97,l1) costs: AREG:1910,1910 DREG:1910,1910 CREG:1910,1910 BREG:1910,1910 SIREG:1910,1910 DIREG:1910,1910 AD_REGS:1910,1910 CLOBBERED_REGS:1910,1910 Q_REGS:1910,1910 NON_Q_REGS:1910,1910 LEGACY_REGS:1910,1910 GENERAL_REGS:1910,1910 SSE_FIRST_REG:26740,26740 SSE_REGS:26740,26740 MMX_REGS:26740,26740 MEM:8595
  a11(r103,l1) costs: AREG:1910,1910 DREG:1910,1910 CREG:1910,1910 BREG:1910,1910 SIREG:1910,1910 DIREG:1910,1910 AD_REGS:1910,1910 CLOBBERED_REGS:1910,1910 Q_REGS:1910,1910 NON_Q_REGS:1910,1910 LEGACY_REGS:1910,1910 GENERAL_REGS:1910,1910 SSE_FIRST_REG:26740,26740 SSE_REGS:26740,26740 MMX_REGS:26740,26740 MEM:9550
  a12(r90,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:45097,45097 SSE_REGS:45097,45097 MMX_REGS:45097,45097 MEM:13876
  a13(r107,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 MEM:3820
  a14(r105,l1) costs: AREG:1910,1910 DREG:1910,1910 CREG:1910,1910 BREG:1910,1910 SIREG:1910,1910 DIREG:1910,1910 AD_REGS:1910,1910 CLOBBERED_REGS:1910,1910 Q_REGS:1910,1910 NON_Q_REGS:1910,1910 LEGACY_REGS:1910,1910 GENERAL_REGS:1910,1910 SSE_FIRST_REG:39155,39155 SSE_REGS:39155,39155 MMX_REGS:39155,39155 MEM:12415

   Insn 133(l0): point = 0
   Insn 127(l0): point = 2
   Insn 139(l0): point = 5
   Insn 138(l0): point = 7
   Insn 118(l0): point = 9
   Insn 117(l0): point = 11
   Insn 145(l0): point = 13
   Insn 142(l0): point = 16
   Insn 141(l0): point = 18
   Insn 149(l0): point = 20
   Insn 155(l0): point = 23
   Insn 54(l0): point = 26
   Insn 53(l0): point = 28
   Insn 73(l0): point = 30
   Insn 49(l0): point = 33
   Insn 48(l0): point = 35
   Insn 47(l0): point = 37
   Insn 46(l0): point = 39
   Insn 45(l0): point = 41
   Insn 44(l0): point = 43
   Insn 43(l0): point = 45
   Insn 36(l0): point = 47
   Insn 35(l0): point = 49
   Insn 34(l0): point = 51
   Insn 157(l1): point = 54
   Insn 111(l1): point = 56
   Insn 109(l1): point = 59
   Insn 108(l1): point = 61
   Insn 104(l1): point = 63
   Insn 101(l1): point = 65
   Insn 100(l1): point = 67
   Insn 98(l1): point = 69
   Insn 96(l1): point = 71
   Insn 91(l1): point = 74
   Insn 89(l1): point = 77
   Insn 88(l1): point = 79
   Insn 86(l1): point = 82
   Insn 85(l1): point = 84
   Insn 83(l1): point = 86
 a0(r95): [23..51] [12..15] [3..4]
 a1(r101): [19..20] [8..13]
 a2(r97): [26..47]
 a3(r93): [26..30]
 a4(r96): [26..49]
 a5(r99): [38..43]
 a6(r98): [42..45]
 a7(r93): [54..88]
 a8(r95): [54..88]
 a9(r96): [54..88]
 a10(r97): [54..88]
 a11(r103): [66..71]
 a12(r90): [82..86] [66..74]
 a13(r107): [66..67]
 a14(r105): [68..69]
 Rebuilding regno allocno list for 107
 Rebuilding regno allocno list for 105
 Rebuilding regno allocno list for 103
 Rebuilding regno allocno list for 90
Compressing live ranges: from 89 to 28 - 31%
Ranges after the compression:
 a0(r95): [18..27] [8..17] [3..5] [0..1]
 a1(r101): [6..7] [2..4]
 a2(r97): [18..27] [9..15]
 a3(r93): [18..27] [9..10]
 a4(r96): [18..27] [9..16]
 a5(r99): [11..13]
 a6(r98): [12..14]
 a11(r103): [19..23]
 a12(r90): [25..26] [19..24]
 a13(r107): [19..20]
 a14(r105): [21..22]
+++Allocating 88 bytes for conflict table (uncompressed size 120)
;; a0(r95,l0) conflicts: a1(r101,l0) a2(r97,l0) a3(r93,l0) a4(r96,l0) a5(r99,l0) a6(r98,l0) a13(r107,l0) a11(r103,l0) a12(r90,l0) a14(r105,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40
;; a1(r101,l0) conflicts: a0(r95,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5
;; a2(r97,l0) conflicts: a0(r95,l0) a3(r93,l0) a4(r96,l0) a5(r99,l0) a6(r98,l0) a13(r107,l0) a11(r103,l0) a12(r90,l0) a14(r105,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40
;; a3(r93,l0) conflicts: a0(r95,l0) a2(r97,l0) a4(r96,l0) a13(r107,l0) a11(r103,l0) a12(r90,l0) a14(r105,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40
;; a4(r96,l0) conflicts: a0(r95,l0) a2(r97,l0) a3(r93,l0) a5(r99,l0) a6(r98,l0) a13(r107,l0) a11(r103,l0) a12(r90,l0) a14(r105,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40
;; a5(r99,l0) conflicts: a0(r95,l0) a2(r97,l0) a4(r96,l0) a6(r98,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a6(r98,l0) conflicts: a0(r95,l0) a2(r97,l0) a4(r96,l0) a5(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a11(r103,l0) conflicts: a0(r95,l0) a2(r97,l0) a3(r93,l0) a4(r96,l0) a13(r107,l0) a12(r90,l0) a14(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a12(r90,l0) conflicts: a0(r95,l0) a2(r97,l0) a3(r93,l0) a4(r96,l0) a13(r107,l0) a11(r103,l0) a14(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a13(r107,l0) conflicts: a0(r95,l0) a2(r97,l0) a3(r93,l0) a4(r96,l0) a11(r103,l0) a12(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a14(r105,l0) conflicts: a0(r95,l0) a2(r97,l0) a3(r93,l0) a4(r96,l0) a11(r103,l0) a12(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=2, blocks=13, points=28
    allocnos=15, copies=0, conflicts=0, ranges=19

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 12 11 10 9 8 7 6 5 4 3 2
    all: 0r95 1r101 2r97 3r93 4r96 5r99 6r98 11r103 12r90 13r107 14r105
    modified regnos: 90 93 95 96 97 98 99 101 103 105 107
    border:
    Pressure: GENERAL_REGS=7
    Reg 95 of GENERAL_REGS has 9 regs less
    Reg 101 of GENERAL_REGS has 1 regs less
    Reg 97 of GENERAL_REGS has 9 regs less
    Reg 93 of GENERAL_REGS has 9 regs less
    Reg 96 of GENERAL_REGS has 9 regs less
    Reg 99 of GENERAL_REGS has 2 regs less
      Pushing a6(r98,l0)
      Pushing a14(r105,l0)
      Pushing a13(r107,l0)
      Pushing a11(r103,l0)
      Pushing a12(r90,l0)
      Pushing a1(r101,l0)
      Pushing a5(r99,l0)
      Pushing a0(r95,l0)(potential spill: pri=653, cost=8501)
      Pushing a2(r97,l0)(potential spill: pri=757, cost=9090)
      Pushing a4(r96,l0)(potential spill: pri=947, cost=10427)
      Pushing a3(r93,l0)(potential spill: pri=1164, cost=11640)
      Popping a3(r93,l0)  -- assign reg 3
      Popping a4(r96,l0)  -- assign reg 6
      Popping a2(r97,l0)  -- assign reg 41
      Popping a0(r95,l0)  -- assign reg 42
      Popping a5(r99,l0)  -- assign reg 4
      Popping a1(r101,l0)  -- assign reg 3
      Popping a12(r90,l0)  -- assign reg 0
      Popping a11(r103,l0)  -- assign reg 1
      Popping a13(r107,l0)  -- assign reg 2
      Popping a14(r105,l0)  -- assign reg 2
      Popping a6(r98,l0)  -- assign reg 2
Disposition:
   12:r90  l0     0    3:r93  l0     3    0:r95  l0    42    4:r96  l0     6
    2:r97  l0    41    6:r98  l0     2    5:r99  l0     4    1:r101 l0     3
   11:r103 l0     1   14:r105 l0     2   13:r107 l0     2
New iteration of spill/restore move
+++Costs: overall 5460, reg 5460, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=34, live_throughout: 1, 4, 7, dead_or_set: 5, 95
insn=35, live_throughout: 1, 7, 95, dead_or_set: 4, 96
insn=36, live_throughout: 7, 95, 96, dead_or_set: 1, 97
insn=40, live_throughout: 7, 95, 96, 97, dead_or_set: 
insn=41, live_throughout: 7, 95, 96, 97, dead_or_set: 
insn=43, live_throughout: 7, 95, 96, 97, dead_or_set: 98
insn=44, live_throughout: 7, 95, 96, 97, 98, dead_or_set: 99
insn=45, live_throughout: 7, 95, 96, 97, 99, dead_or_set: 2, 98
insn=46, live_throughout: 2, 7, 95, 96, 97, 99, dead_or_set: 1
insn=47, live_throughout: 1, 2, 7, 95, 96, 97, dead_or_set: 4, 99
insn=48, live_throughout: 1, 2, 4, 7, 95, 96, 97, dead_or_set: 5
insn=49, live_throughout: 7, 95, 96, 97, dead_or_set: 1, 2, 4, 5
insn=51, live_throughout: 7, 95, 96, 97, dead_or_set: 
insn=52, live_throughout: 7, 95, 96, 97, dead_or_set: 
insn=73, live_throughout: 7, 95, 96, 97, dead_or_set: 93
insn=53, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=54, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=155, live_throughout: 7, 95, dead_or_set: 
insn=148, live_throughout: 0, 7, dead_or_set: 
insn=149, live_throughout: 7, dead_or_set: 0, 101
insn=62, live_throughout: 7, 101, dead_or_set: 
insn=63, live_throughout: 7, 101, dead_or_set: 
insn=141, live_throughout: 7, dead_or_set: 5, 101
insn=142, live_throughout: 7, dead_or_set: 5
insn=153, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=75, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=76, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=77, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=78, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=79, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=80, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=81, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=82, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=83, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 90
insn=84, live_throughout: 7, 90, 93, 95, 96, 97, dead_or_set: 
insn=85, live_throughout: 7, 90, 93, 95, 96, 97, dead_or_set: 
insn=86, live_throughout: 7, 90, 93, 95, 96, 97, dead_or_set: 
insn=88, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 5
insn=89, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 5
insn=91, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 90
insn=92, live_throughout: 7, 90, 93, 95, 96, 97, dead_or_set: 
insn=94, live_throughout: 7, 90, 93, 95, 96, 97, dead_or_set: 
insn=96, live_throughout: 7, 90, 93, 95, 96, 97, dead_or_set: 103
insn=98, live_throughout: 7, 90, 93, 95, 96, 97, 103, dead_or_set: 105
insn=100, live_throughout: 7, 90, 93, 95, 96, 97, 103, dead_or_set: 105, 107
insn=101, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 90, 103, 107
insn=102, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=103, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=104, live_throughout: 7, 95, 96, 97, dead_or_set: 93
insn=106, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=107, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=108, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=109, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=111, live_throughout: 7, 93, 95, 97, dead_or_set: 96
insn=157, live_throughout: 7, 93, 95, 96, 97, dead_or_set: 
insn=144, live_throughout: 0, 7, 95, dead_or_set: 
insn=145, live_throughout: 7, 95, dead_or_set: 0, 101
insn=117, live_throughout: 7, 101, dead_or_set: 5, 95
insn=118, live_throughout: 7, 101, dead_or_set: 5
insn=138, live_throughout: 7, dead_or_set: 5, 101
insn=139, live_throughout: 7, dead_or_set: 5
insn=125, live_throughout: 7, 95, dead_or_set: 
insn=127, live_throughout: 7, dead_or_set: 0, 95
insn=133, live_throughout: 0, 7, dead_or_set: 
init_insns for 98: (insn_list:REG_DEP_TRUE 43 (nil))
init_insns for 107: (insn_list:REG_DEP_TRUE 101 (nil))
changing reg in insn 91
changing reg in insn 83
changing reg in insn 101
changing reg in insn 85
changing reg in insn 84
changing reg in insn 100
changing reg in insn 104
changing reg in insn 73
changing reg in insn 96
changing reg in insn 108
changing reg in insn 106
changing reg in insn 104
changing reg in insn 77
changing reg in insn 34
changing reg in insn 94
changing reg in insn 91
changing reg in insn 88
changing reg in insn 83
changing reg in insn 82
changing reg in insn 81
changing reg in insn 80
changing reg in insn 78
changing reg in insn 117
changing reg in insn 48
changing reg in insn 127
changing reg in insn 111
changing reg in insn 35
changing reg in insn 98
changing reg in insn 111
changing reg in insn 102
changing reg in insn 52
changing reg in insn 36
changing reg in insn 96
changing reg in insn 108
changing reg in insn 77
changing reg in insn 53
changing reg in insn 44
changing reg in insn 43
changing reg in insn 45
changing reg in insn 44
changing reg in insn 47
changing reg in insn 145
changing reg in insn 149
changing reg in insn 141
changing reg in insn 138
changing reg in insn 96
changing reg in insn 101
changing reg in insn 100
changing reg in insn 98
changing reg in insn 100
changing reg in insn 100
changing reg in insn 101
Spilling for insn 83.
Spilling for insn 85.
Spilling for insn 91.
Spilling for insn 96.
Spilling for insn 98.
Spilling for insn 100.
Spilling for insn 101.

Reloads for insn # 83
Reload 0: reload_in (DI) = (mem/s/f:DI (reg/f:DI 42 r13 [orig:95 <result> ] [95]) [32 <variable>._M_dataplus._M_p+0 S8 A64])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s/f:DI (reg/f:DI 42 r13 [orig:95 <result> ] [95]) [32 <variable>._M_dataplus._M_p+0 S8 A64])

Reloads for insn # 85
Reload 0: reload_in (SI) = (mem/s:SI (plus:DI (reg/f:DI 0 ax [orig:90 prephitmp.842 ] [90])
                                                        (const_int -8 [0xfffffffffffffff8])) [5 <variable>.D.11486._M_refcount+0 S4 A64])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 0), optional
	reload_in_reg: (mem/s:SI (plus:DI (reg/f:DI 0 ax [orig:90 prephitmp.842 ] [90])
                                                        (const_int -8 [0xfffffffffffffff8])) [5 <variable>.D.11486._M_refcount+0 S4 A64])

Reloads for insn # 91
Reload 0: reload_in (DI) = (mem/s/f:DI (reg/f:DI 42 r13 [orig:95 <result> ] [95]) [32 <variable>._M_dataplus._M_p+0 S8 A64])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s/f:DI (reg/f:DI 42 r13 [orig:95 <result> ] [95]) [32 <variable>._M_dataplus._M_p+0 S8 A64])

Reloads for insn # 96
Reload 0: reload_in (SI) = (reg/v:SI 41 r12 [orig:97 kmer_length ] [97])
	reload_out (DI) = (reg:DI 1 dx [103])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg/v:SI 41 r12 [orig:97 kmer_length ] [97])
	reload_out_reg: (reg:DI 1 dx [103])
	reload_reg_rtx: (reg:DI 1 dx [103])

Reloads for insn # 98
Reload 0: reload_in (DI) = (reg/v:DI 6 bp [orig:96 intval ] [96])
	reload_out (DI) = (reg:DI 2 cx [105])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg/v:DI 6 bp [orig:96 intval ] [96])
	reload_out_reg: (reg:DI 2 cx [105])
	reload_reg_rtx: (reg:DI 2 cx [105])

Reloads for insn # 100
Reload 0: reload_in (QI) = (mem/s/j:QI (plus:DI (reg:DI 2 cx [105])
                                                        (symbol_ref:DI ("_int_to_base") [flags 0x2]  <var_decl 0x7f9012470b40 _int_to_base>)) [0 _int_to_base S1 A8])
	Q_REGS, RELOAD_FOR_INPUT (opnum = 1), optional
	reload_in_reg: (mem/s/j:QI (plus:DI (reg:DI 2 cx [105])
                                                        (symbol_ref:DI ("_int_to_base") [flags 0x2]  <var_decl 0x7f9012470b40 _int_to_base>)) [0 _int_to_base S1 A8])

Reloads for insn # 101
Reload 0: reload_out (QI) = (mem:QI (plus:DI (reg/f:DI 0 ax [orig:90 prephitmp.842 ] [90])
                                                        (reg:DI 1 dx [103])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (plus:DI (reg/f:DI 0 ax [orig:90 prephitmp.842 ] [90])
                                                        (reg:DI 1 dx [103])) [0 S1 A8])
deleting insn with uid = 45.
deleting insn with uid = 47.


try_optimize_cfg iteration 1

Forwarding edge 3->4 to 12 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 142.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 139.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 15 count 25 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 15 count 25 (  1.9)


std::string decode_kmer_from_intval(kmer_int_type_t, unsigned int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
;;  ref usage 	r0={11d,7u,1d} r1={11d,4u,1d} r2={10d,4u} r3={4d,7u} r4={7d,2u} r5={11d,6u} r6={2d,5u} r7={1d,22u,1d} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={2u} r17={13d,3u} r18={5d} r19={5d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={6d} r40={5d} r41={1d,5u} r42={1d,11u} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} 
;;    total ref usage 354{273d,78u,3e} in 59{54 regular + 5 call} insns.
(note 33 0 38 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 7 [sp] 16 [argp]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 38 33 34 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 34 38 35 2 sequenceUtil.cpp:304 (set (reg/f:DI 42 r13 [orig:95 <result> ] [95])
        (reg:DI 5 di [ D.42262 ])) 89 {*movdi_1_rex64} (nil))

(insn 35 34 36 2 sequenceUtil.cpp:304 (set (reg/v:DI 6 bp [orig:96 intval ] [96])
        (reg:DI 4 si [ intval ])) 89 {*movdi_1_rex64} (nil))

(insn 36 35 37 2 sequenceUtil.cpp:304 (set (reg/v:SI 41 r12 [orig:97 kmer_length ] [97])
        (reg:SI 1 dx [ kmer_length ])) 47 {*movsi_1} (nil))

(note 37 36 40 2 NOTE_INSN_FUNCTION_BEG)

(debug_insn 40 37 41 2 (var_location:DI this (plus:DI (reg/f:DI 7 sp)
        (const_int 15 [0xf]))) -1 (nil))

(debug_insn 41 40 43 2 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/allocator.h:101 (var_location:DI this (plus:DI (reg/f:DI 7 sp)
        (const_int 15 [0xf]))) -1 (nil))

(insn 43 41 44 2 sequenceUtil.cpp:306 (parallel [
            (set (reg/f:DI 2 cx [98])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) 281 {*adddi_1_rex64} (expr_list:REG_EQUIV (plus:DI (reg/f:DI 7 sp)
            (const_int 15 [0xf]))
        (nil)))

(insn 44 43 46 2 sequenceUtil.cpp:306 (set (reg:DI 4 si [orig:99 kmer_length ] [99])
        (zero_extend:DI (reg/v:SI 41 r12 [orig:97 kmer_length ] [97]))) 123 {zero_extendsidi2_rex64} (nil))

(insn 46 44 48 2 sequenceUtil.cpp:306 (set (reg:SI 1 dx)
        (const_int 32 [0x20])) 47 {*movsi_1} (nil))

(insn 48 46 49 2 sequenceUtil.cpp:306 (set (reg:DI 5 di)
        (reg/f:DI 42 r13 [orig:95 <result> ] [95])) 89 {*movdi_1_rex64} (nil))

(call_insn 49 48 50 2 sequenceUtil.cpp:306 (call (mem:QI (symbol_ref:DI ("_ZNSsC1EmcRKSaIcE") [flags 0x41]  <function_decl 0x7f9013291a00 __comp_ctor >) [0 S1 A8])
        (const_int 0 [0x0])) 646 {*call_0} (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  5 (ab,abcall,eh)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
(note 50 49 51 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(debug_insn 51 50 52 3 (var_location:SI i (const_int 1 [0x1])) -1 (nil))

(debug_insn 52 51 73 3 (var_location:DI intval (reg/v:DI 6 bp [orig:96 intval ] [96])) -1 (nil))

(insn 73 52 53 3 sequenceUtil.cpp:308 (set (reg/v:SI 3 bx [orig:93 i ] [93])
        (const_int 1 [0x1])) 47 {*movsi_1} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 53 73 54 3 sequenceUtil.cpp:308 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 41 r12 [orig:97 kmer_length ] [97])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn 54 53 154 3 sequenceUtil.cpp:308 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 153)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  6 [95.5%] 
;; Succ edge  4 [4.5%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [4.5%]  (fallthru)
(note 154 54 155 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 155 154 156 4 (set (pc)
        (label_ref 125)) 638 {jump} (nil))
;; End of basic block 4 -> ( 12)
;; lr  out 	 7 [sp] 42 [r13]
;; live  out 	 7 [sp] 42 [r13]


;; Succ edge  12 [100.0%] 

(barrier 156 155 148)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 5 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di]
;; live  kill	

;; Pred edge  2 (ab,abcall,eh)
(code_label/s 148 156 151 5 90 "" [1 uses])

(note 151 148 149 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 149 151 58 5 (set (reg/f:DI 3 bx [orig:101 save_eptr.370 ] [101])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (nil))

(note/s 58 149 62 5 "" NOTE_INSN_DELETED_LABEL 82)

(debug_insn 62 58 63 5 (var_location:DI this (plus:DI (reg/f:DI 7 sp)
        (const_int 15 [0xf]))) -1 (nil))

(debug_insn 63 62 141 5 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/allocator.h:109 (var_location:DI this (plus:DI (reg/f:DI 7 sp)
        (const_int 15 [0xf]))) -1 (nil))

(insn 141 63 142 5 sequenceUtil.cpp:308 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:101 save_eptr.370 ] [101])) 89 {*movdi_1_rex64} (nil))

(call_insn 142 141 70 5 sequenceUtil.cpp:308 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]) [0 S1 A8])
        (const_int 0 [0x0])) 646 {*call_0} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 5 -> ()
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]



(barrier 70 142 153)

;; Start of basic block ( 3 10) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	

;; Pred edge  3 [95.5%] 
;; Pred edge  10 [100.0%]  (dfs_back)
(code_label 153 70 152 6 91 "" [2 uses])

(note 152 153 75 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(debug_insn 75 152 76 6 sequenceUtil.cpp:310 (var_location:SI D.4294967174 (subreg:SI (reg/v:DI 6 bp [orig:96 intval ] [96]) 0)) -1 (nil))

(debug_insn 76 75 77 6 sequenceUtil.cpp:310 (var_location:SI base_num (and:SI (debug_expr:SI D#122)
        (const_int 3 [0x3]))) -1 (nil))

(debug_insn 77 76 78 6 sequenceUtil.cpp:312 (var_location:SI D.4294967175 (minus:SI (reg/v:SI 41 r12 [orig:97 kmer_length ] [97])
        (reg/v:SI 3 bx [orig:93 i ] [93]))) -1 (nil))

(debug_insn 78 77 79 6 sequenceUtil.cpp:312 (var_location:DI this (reg/f:DI 42 r13 [orig:95 <result> ] [95])) -1 (nil))

(debug_insn 79 78 80 6 sequenceUtil.cpp:312 (var_location:DI __pos (zero_extend:DI (debug_expr:SI D#121))) -1 (nil))

(debug_insn 80 79 81 6 sequenceUtil.cpp:312 (var_location:DI this (reg/f:DI 42 r13 [orig:95 <result> ] [95])) -1 (nil))

(debug_insn 81 80 82 6 (var_location:DI this (reg/f:DI 42 r13 [orig:95 <result> ] [95])) -1 (nil))

(debug_insn 82 81 83 6 (var_location:DI this (reg/f:DI 42 r13 [orig:95 <result> ] [95])) -1 (nil))

(insn 83 82 84 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:278 (set (reg/f:DI 0 ax [orig:90 prephitmp.842 ] [90])
        (mem/s/f:DI (reg/f:DI 42 r13 [orig:95 <result> ] [95]) [32 <variable>._M_dataplus._M_p+0 S8 A64])) 89 {*movdi_1_rex64} (nil))

(debug_insn 84 83 85 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:301 (var_location:DI this (plus:DI (reg/f:DI 0 ax [orig:90 prephitmp.842 ] [90])
        (const_int -24 [0xffffffffffffffe8]))) -1 (nil))

(insn 85 84 86 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:301 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/s:SI (plus:DI (reg/f:DI 0 ax [orig:90 prephitmp.842 ] [90])
                    (const_int -8 [0xfffffffffffffff8])) [5 <variable>.D.11486._M_refcount+0 S4 A64])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil))

(jump_insn 86 85 87 6 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:301 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 3666 [0xe52])
        (nil)))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  7 [63.3%]  (fallthru)
;; Succ edge  9 [36.7%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 5 [di]
;; live  kill	

;; Pred edge  6 [63.3%]  (fallthru)
(note 87 86 88 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 7 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:302 (set (reg:DI 5 di)
        (reg/f:DI 42 r13 [orig:95 <result> ] [95])) 89 {*movdi_1_rex64} (nil))

(call_insn 89 88 90 7 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:302 (call (mem:QI (symbol_ref:DI ("_ZNSs12_M_leak_hardEv") [flags 0x41]  <function_decl 0x7f901322ec00 _M_leak_hard>) [0 S1 A8])
        (const_int 0 [0x0])) 646 {*call_0} (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 7 -> ( 8 11)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  8 [100.0%]  (fallthru)
;; Succ edge  11 (ab,abcall,eh,loop_exit)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
(note 90 89 91 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 8 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:302 (set (reg/f:DI 0 ax [orig:90 prephitmp.842 ] [90])
        (mem/s/f:DI (reg/f:DI 42 r13 [orig:95 <result> ] [95]) [32 <variable>._M_dataplus._M_p+0 S8 A64])) 89 {*movdi_1_rex64} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 6 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]

;; Pred edge  6 [36.7%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 92 91 93 9 85 "" [1 uses])

(note 93 92 94 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(debug_insn 94 93 95 9 /usr/lib/gcc/x86_64-redhat-linux/4.4.6/../../../../include/c++/4.4.6/bits/basic_string.h:746 (var_location:DI this (reg/f:DI 42 r13 [orig:95 <result> ] [95])) -1 (nil))

(note 95 94 160 9 NOTE_INSN_DELETED)

(insn 160 95 96 9 sequenceUtil.cpp:312 (set (reg:SI 1 dx)
        (reg/v:SI 41 r12 [orig:97 kmer_length ] [97])) 47 {*movsi_1} (nil))

(insn 96 160 97 9 sequenceUtil.cpp:312 (parallel [
            (set (reg:DI 1 dx [103])
                (zero_extend:DI (minus:SI (reg:SI 1 dx)
                        (reg/v:SI 3 bx [orig:93 i ] [93]))))
            (clobber (reg:CC 17 flags))
        ]) 321 {*subsi_1_zext} (nil))

(note 97 96 161 9 NOTE_INSN_DELETED)

(insn 161 97 98 9 sequenceUtil.cpp:312 (set (reg:DI 2 cx [105])
        (reg/v:DI 6 bp [orig:96 intval ] [96])) 89 {*movdi_1_rex64} (nil))

(insn 98 161 100 9 sequenceUtil.cpp:312 (parallel [
            (set (reg:DI 2 cx [105])
                (and:DI (reg:DI 2 cx [105])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 375 {*anddi_1_rex64} (nil))

(insn 100 98 101 9 sequenceUtil.cpp:312 (set (reg:QI 2 cx [107])
        (mem/s/j:QI (plus:DI (reg:DI 2 cx [105])
                (symbol_ref:DI ("_int_to_base") [flags 0x2]  <var_decl 0x7f9012470b40 _int_to_base>)) [0 _int_to_base S1 A8])) 62 {*movqi_1} (expr_list:REG_EQUIV (mem:QI (plus:DI (reg/f:DI 0 ax [orig:90 prephitmp.842 ] [90])
                (reg:DI 1 dx [103])) [0 S1 A8])
        (nil)))

(insn 101 100 102 9 sequenceUtil.cpp:312 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:90 prephitmp.842 ] [90])
                (reg:DI 1 dx [103])) [0 S1 A8])
        (reg:QI 2 cx [107])) 62 {*movqi_1} (nil))

(debug_insn 102 101 103 9 sequenceUtil.cpp:316 (var_location:DI D.4294967176 (lshiftrt:DI (reg/v:DI 6 bp [orig:96 intval ] [96])
        (const_int 2 [0x2]))) -1 (nil))

(debug_insn 103 102 104 9 sequenceUtil.cpp:316 (var_location:DI intval (debug_expr:DI D#120)) -1 (nil))

(insn 104 103 106 9 sequenceUtil.cpp:308 (parallel [
            (set (reg/v:SI 3 bx [orig:93 i ] [93])
                (plus:SI (reg/v:SI 3 bx [orig:93 i ] [93])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 286 {*addsi_1} (nil))

(debug_insn 106 104 107 9 (var_location:SI i (reg/v:SI 3 bx [orig:93 i ] [93])) -1 (nil))

(debug_insn 107 106 108 9 (var_location:DI intval (debug_expr:DI D#120)) -1 (nil))

(insn 108 107 109 9 sequenceUtil.cpp:308 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 41 r12 [orig:97 kmer_length ] [97])
            (reg/v:SI 3 bx [orig:93 i ] [93]))) 5 {*cmpsi_1_insn} (nil))

(jump_insn 109 108 110 9 sequenceUtil.cpp:308 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 125)
            (pc))) 617 {*jcc_1} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  10 [95.5%]  (fallthru)
;; Succ edge  12 [4.5%]  (loop_exit)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 6 [bp]
;; live  kill	 17 [flags]

;; Pred edge  9 [95.5%]  (fallthru)
(note 110 109 111 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 157 10 sequenceUtil.cpp:316 (parallel [
            (set (reg/v:DI 6 bp [orig:96 intval ] [96])
                (lshiftrt:DI (reg/v:DI 6 bp [orig:96 intval ] [96])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 550 {*lshrdi3_1_rex64} (nil))

(jump_insn 157 111 158 10 (set (pc)
        (label_ref 153)) 638 {jump} (nil))
;; End of basic block 10 -> ( 6)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]


;; Succ edge  6 [100.0%]  (dfs_back)

(barrier 158 157 144)

;; Start of basic block ( 7) -> 11
;; bb 11 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 11 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 7 [sp] 16 [argp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di]
;; live  kill	

;; Pred edge  7 (ab,abcall,eh,loop_exit)
(code_label/s 144 158 147 11 89 "" [1 uses])

(note 147 144 145 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 145 147 115 11 (set (reg/f:DI 3 bx [orig:101 save_eptr.370 ] [101])
        (reg:DI 0 ax)) 89 {*movdi_1_rex64} (nil))

(note/s 115 145 117 11 "" NOTE_INSN_DELETED_LABEL 87)

(insn 117 115 118 11 sequenceUtil.cpp:319 (set (reg:DI 5 di)
        (reg/f:DI 42 r13 [orig:95 <result> ] [95])) 89 {*movdi_1_rex64} (nil))

(call_insn 118 117 138 11 sequenceUtil.cpp:319 (call (mem:QI (symbol_ref:DI ("_ZNSsD1Ev") [flags 0x41]  <function_decl 0x7f901329ba00 __comp_dtor >) [0 S1 A8])
        (const_int 0 [0x0])) 646 {*call_0} (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 138 118 139 11 sequenceUtil.cpp:319 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:101 save_eptr.370 ] [101])) 89 {*movdi_1_rex64} (nil))

(call_insn 139 138 120 11 sequenceUtil.cpp:319 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]) [0 S1 A8])
        (const_int 0 [0x0])) 646 {*call_0} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 11 -> ()
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]



(barrier 120 139 125)

;; Start of basic block ( 9 4) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax]
;; live  kill	

;; Pred edge  9 [4.5%]  (loop_exit)
;; Pred edge  4 [100.0%] 
(code_label 125 120 136 12 79 "" [2 uses])

(note 136 125 127 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 127 136 133 12 sequenceUtil.cpp:320 (set (reg/i:DI 0 ax)
        (reg/f:DI 42 r13 [orig:95 <result> ] [95])) 89 {*movdi_1_rex64} (nil))

(insn 133 127 159 12 sequenceUtil.cpp:320 (use (reg/i:DI 0 ax)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 159 133 0 NOTE_INSN_DELETED)

